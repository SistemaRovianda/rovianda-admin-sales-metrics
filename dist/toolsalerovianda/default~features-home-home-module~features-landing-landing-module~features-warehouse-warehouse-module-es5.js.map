{"version":3,"sources":["webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js"],"names":["NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","value","setProperty","nativeElement","fn","isDisabled","ɵfac","CheckboxControlValueAccessor_Factory","t","ɵdir","type","selectors","hostBindings","CheckboxControlValueAccessor_HostBindings","rf","ctx","CheckboxControlValueAccessor_change_HostBindingHandler","$event","target","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","features","ctorParameters","args","selector","host","providers","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","normalizedValue","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","_handleInput","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","_compositionStart","DefaultValueAccessor_compositionend_HostBindingHandler","_compositionEnd","Boolean","decorators","AbstractControlDirective","undefined","control","reset","errorCode","path","hasError","getError","valid","invalid","pending","disabled","enabled","errors","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","AbstractControlDirective_Factory","ControlContainer","ControlContainer_Factory","ɵControlContainer_BaseFactory","unimplemented","ngDevMode","Error","NgControl","arguments","_parent","name","valueAccessor","_rawValidators","_rawAsyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","NgControlStatus","NgControlStatus_Factory","hostVars","NgControlStatus_HostBindings","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","isEmptyInputValue","length","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","parseFloat","isNaN","max","minLength","maxLength","pattern","nullValidator","regex","regexStr","charAt","RegExp","toString","validators","presentValidators","filter","isPresent","mergeErrors","executeValidators","observables","map","toObservable","pipe","o","r","obs","arrayOfErrors","res","forEach","Object","assign","keys","validator","isValidatorFn","validate","normalizeValidators","c","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","throwNameError","RadioControlRegistry","_accessors","accessor","push","i","splice","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","ɵprov","token","factory","_registry","_injector","get","_checkName","add","remove","_state","_fn","select","writeValue","formControlName","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","inputs","propDecorators","RANGE_VALUE_ACCESSOR","RangeValueAccessor","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","ReactiveErrors","console","warn","directiveName","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","id","slice","_extractId","valueString","split","_optionMap","Map","_idCounter","_compareWith","is","_getOptionId","_getOptionValue","Array","from","has","JSON","stringify","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","compareWith","NgSelectOption","_element","_select","_registerOption","set","_setElementValue","NgSelectOption_Factory","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","_extractId$1","HTMLCollection","optionSelectedStateSetter","isArray","ids","v","opt","_setSelected","indexOf","selected","selectedOptions","options","item","val","_value","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","controlPath","parent","setUpControl","dir","_throwError","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","cleanUpControl","noop","_noControlError","registerOnChange","registerOnTouched","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","BUILTIN_ACCESSORS","isBuiltInAccessor","some","a","constructor","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","list","el","index","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","pickAsyncValidators","asyncValidators","coerceToAsyncValidator","AbstractControl","_hasOwnPendingAsyncValidator","_onCollectionChange","_onDisabledChange","_composedValidatorFn","_composedAsyncValidatorFn","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","emit","markAsPending","skipPristineCheck","_parentMarkedDirty","disable","_updateValue","_updateAncestors","changeFn","enable","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","subscribe","setErrors","unsubscribe","_updateControlsErrors","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","parentDirty","validatorFn","asyncValidatorFn","x","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","child","k","_reduceValue","contains","initValue","_registerControl","reduce","formDirectiveProvider","NgForm","ɵ0","Promise","resolve","resolvedPromise","submitted","_directives","ngSubmit","then","container","_findContainer","removeControl","group","resetForm","pop","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","onSubmit","NgForm_reset_HostBindingHandler","onReset","outputs","exportAs","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractFormGroupDirective_Factory","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","formControlBinding","NgModel","ɵ0$1","resolvedPromise$1","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NgModel_Factory","ɵNgNoValidate","ɵNgNoValidate_Factory","hostAttrs","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding$1","FormControlDirective","_ngModelWarningConfig","_isControlChanged","disabledAttrWarning","FormControlDirective_Factory","String","formDirectiveProvider$1","FormGroupDirective","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_oldForm","sync","async","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","addFormArray","removeFormArray","arrayParentException","getFormArray","FormArrayName_Factory","controlNameBinding","FormControlName","_added","updateModel","ngModelGroupException","controlParentException","FormControlName_Factory","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_required","required","RequiredValidator_Factory","RequiredValidator_HostBindings","requiredTrue","CheckboxRequiredValidator_Factory","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","_enabled","email","EmailValidator_Factory","MIN_LENGTH_VALIDATOR","MinLengthValidator","_validator","_createValidator","minlength","parseInt","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵmod","ɵinj","ɵInternalFormsSharedModule_Factory","ngJitMode","declarations","exports","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","_createControl","controlConfig","FormBuilder_Factory","VERSION","FormsModule","FormsModule_Factory","imports","ReactiveFormsModule","ngModule","useValue","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","coerceArray","coerceCssPixelValue","coerceElement","elementOrRef","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","ctx_r0","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","MatCommonModule","highContrastModeDetector","sanityChecks","document","_hasDoneGlobalChecks","_document","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","doc","_getDocument","win","defaultView","window","_isTestEnv","_getWindow","__karma__","jasmine","isEnabled","_checksAreEnabled","doctype","theme","body","getComputedStyle","testElement","createElement","classList","appendChild","computedStyle","display","removeChild","version","full","MatCommonModule_Factory","mixinDisabled","base","_disabled","mixinColor","defaultColor","color","_color","colorPalette","mixinDisableRipple","Mixin","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","mixinErrorState","errorState","stateChanges","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","localeChanges","obj","isDateInstance","isValid","locale","first","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","_a","DEFAULT_MONTH_NAMES","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","Math","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","NaN","d","setHours","n","str","replace","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","MatNativeDateModule","MatNativeDateModule_Factory","ShowOnDirtyErrorStateMatcher","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","setLines","lines","element","prefix","setClass","className","isAdd","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleRef","config","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","size","rippleEl","opacity","parentNode","_triggerElement","_removeTriggerEvents","_registerEvents","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_MatOptgroupBase_Factory","ɵ_MatOptgroupBase_BaseFactory","label","MAT_OPTGROUP","MatOptgroup","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","ngContentSelectors","consts","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","_MatOptionBase","_changeDetectorRef","_selected","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","markForCheck","_emitSelectionChangeEvent","_origin","_getHostElement","focus","viewValue","keyCode","_selectViaInteraction","preventDefault","multiple","disableRipple","textContent","trim","_MatOptionBase_Factory","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","modifiers","modifier","altKey","shiftKey","ctrlKey","metaKey","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_cleanupObserver","observer","stream","_observeElement","subscription","_unobserveElement","create","mutations","observe","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_contentObserver","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","elementRef","_focusMonitor","isRoundButton","_hasHostAttributes","isIconButton","attr","monitor","stopMonitoring","origin","focusVia","attributes","attribute","hasAttribute","MatButton_Factory","viewQuery","MatButton_Query","_t","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","_haltDisabledEvents","tabIndex","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","old","_rawDir","Dir_Factory","Dir_HostBindings","BidiModule","BidiModule_Factory","listenerOptions","AutofillMonitor","_platform","_monitoredElements","info","subject","cssClass","listener","animationName","run","isAutofilled","unlisten","_info","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkTextareaAutosize","_destroyed","_previousMinRows","_textareaElement","_measuringClass","FIREFOX","minHeight","minRows","_cachedLineHeight","maxHeight","maxRows","_initialHeight","resizeToFitContent","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","clientHeight","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","TextFieldModule","TextFieldModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","nextUniqueId","MAT_ERROR","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MAT_PREFIX","MatPrefix","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_hasFloatingLabel","_connectionContainerRef","_validateControlChild","controlType","_validatePlaceholders","_syncDescribedByIds","onStable","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","detectChanges","prop","_placeholderChild","_labelChildNonStatic","_labelChildStatic","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_label","_validateHints","startHint","endHint","hint","userAriaDescribedBy","_getDisplayedMessages","find","error","setDescribedByIds","labelEl","children","_isAttachedToDOM","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","getRootNode","rootNode","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","data","descendants","animations","MatFormFieldModule","MatFormFieldModule_Factory","hasV8BreakIterator","v8BreakIterator","Platform","_platformId","navigator","BLINK","chrome","CSS","WEBKIT","IOS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","capture","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","scrollToFunction","Element","prototype","scrollTo","getRtlScrollAxisType","scrollContainer","containerStyle","pointerEvents","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","ShadowRoot","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","_formField","_uid","_type","_readonly","_neverEmptyInputTypes","nodeName","_inputValueAccessor","_previousNativeValue","_isServer","_isNativeSelect","_isTextarea","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","isFocused","readonly","_b","call","_previousPlaceholder","removeAttribute","validity","badInput","_id","_validateType","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","MatInputModule","MatInputModule_Factory","ID_DELIMITER","addAriaReferencedId","getAriaReferenceIds","existingId","removeAriaReferencedId","filteredIds","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","messagesContainer","AriaDescriber","hostElement","_canBeDescribed","_setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","_removeCdkDescribedByReferenceIds","clear","_createMessagesContainer","canBeAriaHidden","preExistingContainer","getElementById","originalReferenceIds","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","AriaDescriber_Factory","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_skipPredicateFn","_pressedLetters","tabOut","newItems","itemArray","newIndex","predicate","shouldWrap","direction","_horizontal","debounceInterval","getLabel","letter","inputString","items","_getItemsArray","toUpperCase","setActiveItem","previousActiveItem","updateActiveItem","isModifierAllowed","every","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","key","toLocaleUpperCase","fromCharCode","_setActiveItemByIndex","_setActiveItemByDelta","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","IsFocusableConfig","ignoreVisibility","InteractivityChecker","hasGeometry","frameElement","getFrameElement","getWindow","getTabIndexValue","tabIndexValue","isPotentiallyTabbableIOS","isPotentiallyFocusable","InteractivityChecker_Factory","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","inputType","node","ownerDocument","FocusTrap","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","_createAnchor","insertBefore","nextSibling","_executeOnStable","focusInitialElement","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","tabbableChild","anchor","_toggleAnchorTabIndex","isStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_focusTrapFactory","_previouslyFocusedElement","focusTrap","destroy","autoCapture","_captureFocus","hasAttached","autoCaptureChange","firstChange","focusInitialElementWhenReady","_autoCapture","CdkTrapFocus_Factory","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","hasNativeClosest","polyfillClosest","matches","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","focusTrapRoot","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_politeness","_subscription","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","isFakeMousedownFromScreenReader","buttons","TOUCH_BUFFER_MS","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_windowFocused","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","getTarget","_windowFocusListener","_windowFocusTimeoutId","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","parentElement","_detectionMode","detectionMode","checkChildren","cachedInfo","_registerGlobalListeners","elementInfo","_setClasses","_removeGlobalListeners","shouldSet","_lastFocusOrigin","_wasCausedByTouch","_toggleClass","_originTimeoutId","focusTarget","_getFocusOrigin","_emitOrigin","relatedTarget","rootNodeFocusListeners","FocusMonitor_Factory","composedPath","CdkMonitorFocus","cdkFocusChange","_monitorSubscription","CdkMonitorFocus_Factory","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","documentWindow","computedColor","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","A11yModule_Factory"],"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AAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAOA,UAAMC,SAAS,GAAG,CAAlB;AACA,UAAMC,SAAS,GAAG,CAAlB;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,YAAY,GAAG,EAArB,C,CAAyB;;AACzB,UAAMC,SAAS,GAAG,EAAlB,C,CAAsB;;AACtB,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,OAAO,GAAG,EAAhb,C,CAAiB;;AACjB,UAAMC,eAAe,GAAG,EAAxB;AACA,UAAMC,gBAAgB,GAAG,EAAzB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,eAAe,GAAG,GAAxB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,aAAa,GAAG,GAAtB;AACA,UAAMC,aAAa,GAAG,GAAtB;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,EAAE,GAAG,GAAX;AACA,UAAMC,GAAG,GAAG,GAAZ;AACA,UAAMC,GAAG,GAAG,GAAZ;AACA,UAAMC,GAAG,GAAG,GAAZ;AACA,UAAMC,QAAQ,GAAG,GAAjB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,QAAQ,GAAG,GAAjB;AACA,UAAMC,IAAI,GAAG,GAAb,C,CAAkB;;AAClB,UAAMC,WAAW,GAAG,GAApB,C,CAAyB;;AACzB,UAAMC,SAAS,GAAG,GAAlB,C,CAAuB;;AACvB,UAAMC,OAAO,GAAG,GAAhB;AACA,UAAMC,cAAc,GAAG,GAAvB;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,SAAS,GAAG,GAAlB,C,CAAuB;;AACvB,UAAMC,MAAM,GAAG,GAAf,C,CAAoB;;AACpB,UAAMC,KAAK,GAAG,GAAd;AACA,UAAMC,IAAI,GAAG,GAAb,C,CAAkB;;AAClB,UAAMC,KAAK,GAAG,GAAd;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,KAAK,GAAG,GAAd;AACA,UAAMC,mBAAmB,GAAG,GAA5B;AACA,UAAMC,SAAS,GAAG,GAAlB;AACA,UAAMC,oBAAoB,GAAG,GAA7B;AACA,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,QAAQ,GAAG,GAAjB;AAEA;;;;;;;;AAOA;;;;;AAIA,eAASC,cAAT,CAAwBtQ,KAAxB,EAA6C;AAAA,2CAAXuQ,SAAW;AAAXA,mBAAW;AAAA;;AACzC,YAAIA,SAAS,CAACl/B,MAAd,EAAsB;AAClB,iBAAOk/B,SAAS,CAACryB,IAAV,CAAe,UAAAsyB,QAAQ;AAAA,mBAAIxQ,KAAK,CAACwQ,QAAD,CAAT;AAAA,WAAvB,CAAP;AACH;;AACD,eAAOxQ,KAAK,CAACyQ,MAAN,IAAgBzQ,KAAK,CAAC0Q,QAAtB,IAAkC1Q,KAAK,CAAC2Q,OAAxC,IAAmD3Q,KAAK,CAAC4Q,OAAhE;AACH;AAED;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;AC9JA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;AAOA;;;;;;UAKMC,uB;;;;;;;iCACKC,Q,EAAU;AACb,mBAAO,OAAOC,gBAAP,KAA4B,WAA5B,GAA0C,IAA1C,GAAiD,IAAIA,gBAAJ,CAAqBD,QAArB,CAAxD;AACH;;;;;;AAELD,6BAAuB,CAACzlC,IAAxB,GAA+B,SAAS4lC,+BAAT,CAAyC1lC,CAAzC,EAA4C;AAAE,eAAO,KAAKA,CAAC,IAAIulC,uBAAV,GAAP;AAA8C,OAA3H;;AACAA,6BAAuB,CAACz7B,KAAxB,GAAgC,yEAAmB;AAAEE,eAAO,EAAE,SAAS07B,+BAAT,GAA2C;AAAE,iBAAO,IAAIH,uBAAJ,EAAP;AAAuC,SAA/F;AAAiGx7B,aAAK,EAAEw7B,uBAAxG;AAAiIzf,kBAAU,EAAE;AAA7I,OAAnB,CAAhC;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyByf,uBAAzB,EAAkD,CAAC;AACxErlC,cAAI,EAAE,wDADkE;AAExEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFkE,SAAD,CAAlD,EAGrB,IAHqB,EAGf,IAHe;AAGP,OAHR;AAId;;;UACM6f,e;AACF,iCAAYC,wBAAZ,EAAsC;AAAA;;AAClC,eAAKA,wBAAL,GAAgCA,wBAAhC;AACA;;AACA,eAAKC,iBAAL,GAAyB,IAAIl5B,GAAJ,EAAzB;AACH;;;;wCACa;AAAA;;AACV,iBAAKk5B,iBAAL,CAAuB59B,OAAvB,CAA+B,UAAC1I,CAAD,EAAIkxB,OAAJ;AAAA,qBAAgB,OAAI,CAACqV,gBAAL,CAAsBrV,OAAtB,CAAhB;AAAA,aAA/B;AACH;;;kCACO7L,Y,EAAc;AAAA;;AAClB,gBAAM6L,OAAO,GAAG,4EAAc7L,YAAd,CAAhB;AACA,mBAAO,IAAI,+CAAJ,CAAe,UAACmhB,QAAD,EAAc;AAChC,kBAAMC,MAAM,GAAG,OAAI,CAACC,eAAL,CAAqBxV,OAArB,CAAf;;AACA,kBAAMyV,YAAY,GAAGF,MAAM,CAAC1uB,SAAP,CAAiByuB,QAAjB,CAArB;AACA,qBAAO,YAAM;AACTG,4BAAY,CAAC1uB,WAAb;;AACA,uBAAI,CAAC2uB,iBAAL,CAAuB1V,OAAvB;AACH,eAHD;AAIH,aAPM,CAAP;AAQH;AACD;;;;;;;0CAIgBA,O,EAAS;AACrB,gBAAI,CAAC,KAAKoV,iBAAL,CAAuB14B,GAAvB,CAA2BsjB,OAA3B,CAAL,EAA0C;AACtC,kBAAMuV,MAAM,GAAG,IAAI,4CAAJ,EAAf;;AACA,kBAAMD,QAAQ,GAAG,KAAKH,wBAAL,CAA8BQ,MAA9B,CAAqC,UAAAC,SAAS;AAAA,uBAAIL,MAAM,CAACnc,IAAP,CAAYwc,SAAZ,CAAJ;AAAA,eAA9C,CAAjB;;AACA,kBAAIN,QAAJ,EAAc;AACVA,wBAAQ,CAACO,OAAT,CAAiB7V,OAAjB,EAA0B;AACtB8V,+BAAa,EAAE,IADO;AAEtBC,2BAAS,EAAE,IAFW;AAGtBC,yBAAO,EAAE;AAHa,iBAA1B;AAKH;;AACD,mBAAKZ,iBAAL,CAAuB93B,GAAvB,CAA2B0iB,OAA3B,EAAoC;AAAEsV,wBAAQ,EAARA,QAAF;AAAYC,sBAAM,EAANA,MAAZ;AAAoBU,qBAAK,EAAE;AAA3B,eAApC;AACH,aAXD,MAYK;AACD,mBAAKb,iBAAL,CAAuB17B,GAAvB,CAA2BsmB,OAA3B,EAAoCiW,KAApC;AACH;;AACD,mBAAO,KAAKb,iBAAL,CAAuB17B,GAAvB,CAA2BsmB,OAA3B,EAAoCuV,MAA3C;AACH;AACD;;;;;;;4CAIkBvV,O,EAAS;AACvB,gBAAI,KAAKoV,iBAAL,CAAuB14B,GAAvB,CAA2BsjB,OAA3B,CAAJ,EAAyC;AACrC,mBAAKoV,iBAAL,CAAuB17B,GAAvB,CAA2BsmB,OAA3B,EAAoCiW,KAApC;;AACA,kBAAI,CAAC,KAAKb,iBAAL,CAAuB17B,GAAvB,CAA2BsmB,OAA3B,EAAoCiW,KAAzC,EAAgD;AAC5C,qBAAKZ,gBAAL,CAAsBrV,OAAtB;AACH;AACJ;AACJ;AACD;;;;2CACiBA,O,EAAS;AACtB,gBAAI,KAAKoV,iBAAL,CAAuB14B,GAAvB,CAA2BsjB,OAA3B,CAAJ,EAAyC;AAAA,0CACR,KAAKoV,iBAAL,CAAuB17B,GAAvB,CAA2BsmB,OAA3B,CADQ;AAAA,kBAC7BsV,QAD6B,yBAC7BA,QAD6B;AAAA,kBACnBC,MADmB,yBACnBA,MADmB;;AAErC,kBAAID,QAAJ,EAAc;AACVA,wBAAQ,CAACY,UAAT;AACH;;AACDX,oBAAM,CAAC5b,QAAP;;AACA,mBAAKyb,iBAAL,WAA8BpV,OAA9B;AACH;AACJ;;;;;;AAELkV,qBAAe,CAAC7lC,IAAhB,GAAuB,SAAS8mC,uBAAT,CAAiC5mC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI2lC,eAAV,EAA2B,uDAAgBJ,uBAAhB,CAA3B,CAAP;AAA8E,OAA3I;;AACAI,qBAAe,CAAC77B,KAAhB,GAAwB,yEAAmB;AAAEE,eAAO,EAAE,SAAS48B,uBAAT,GAAmC;AAAE,iBAAO,IAAIjB,eAAJ,CAAoB,+DAASJ,uBAAT,CAApB,CAAP;AAAgE,SAAhH;AAAkHx7B,aAAK,EAAE47B,eAAzH;AAA0I7f,kBAAU,EAAE;AAAtJ,OAAnB,CAAxB;;AACA6f,qBAAe,CAAC7kC,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEZ,cAAI,EAAEqlC;AAAR,SADmC,CAAN;AAAA,OAAjC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBI,eAAzB,EAA0C,CAAC;AAChEzlC,cAAI,EAAE,wDAD0D;AAEhEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAF0D,SAAD,CAA1C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAEqlC;AAAR,WAAD,CAAP;AAA6C,SAHtC,EAGwC,IAHxC;AAGgD,OAH/D;AAId;;;;;;UAIMsB,iB;AACF,mCAAYC,gBAAZ,EAA8BznC,WAA9B,EAA2C0yB,OAA3C,EAAoD;AAAA;;AAChD,eAAK+U,gBAAL,GAAwBA,gBAAxB;AACA,eAAKznC,WAAL,GAAmBA,WAAnB;AACA,eAAK0yB,OAAL,GAAeA,OAAf;AACA;;AACA,eAAK2C,KAAL,GAAa,IAAI,0DAAJ,EAAb;AACA,eAAKrM,SAAL,GAAiB,KAAjB;AACA,eAAK0e,oBAAL,GAA4B,IAA5B;AACH;AACD;;;;;;;;+CAeqB;AACjB,gBAAI,CAAC,KAAKA,oBAAN,IAA8B,CAAC,KAAK3jC,QAAxC,EAAkD;AAC9C,mBAAK4jC,UAAL;AACH;AACJ;;;wCACa;AACV,iBAAKC,YAAL;AACH;;;uCACY;AAAA;;AACT,iBAAKA,YAAL;;AACA,gBAAMjB,MAAM,GAAG,KAAKc,gBAAL,CAAsBR,OAAtB,CAA8B,KAAKjnC,WAAnC,CAAf,CAFS,CAGT;AACA;AACA;AACA;;;AACA,iBAAK0yB,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,qBAAI,CAACmR,oBAAL,GACI,CAAC,OAAI,CAACG,QAAL,GAAgBlB,MAAM,CAACr+B,IAAP,CAAY,oEAAa,OAAI,CAACu/B,QAAlB,CAAZ,CAAhB,GAA2DlB,MAA5D,EAAoE1uB,SAApE,CAA8E,OAAI,CAACod,KAAnF,CADJ;AAEH,aAHD;AAIH;;;yCACc;AACX,gBAAI,KAAKqS,oBAAT,EAA+B;AAC3B,mBAAKA,oBAAL,CAA0BvvB,WAA1B;AACH;AACJ;;;8BAnCc;AAAE,mBAAO,KAAK6Q,SAAZ;AAAwB,W;4BAC5B5oB,K,EAAO;AAChB,iBAAK4oB,SAAL,GAAiB,oFAAsB5oB,KAAtB,CAAjB;AACA,iBAAK4oB,SAAL,GAAiB,KAAK4e,YAAL,EAAjB,GAAuC,KAAKD,UAAL,EAAvC;AACH;AACD;;;;8BACe;AAAE,mBAAO,KAAKG,SAAZ;AAAwB,W;4BAC5B1nC,K,EAAO;AAChB,iBAAK0nC,SAAL,GAAiB,mFAAqB1nC,KAArB,CAAjB;;AACA,iBAAKunC,UAAL;AACH;;;;;;AA2BLH,uBAAiB,CAAC/mC,IAAlB,GAAyB,SAASsnC,yBAAT,CAAmCpnC,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI6mC,iBAAV,EAA6B,gEAAyBlB,eAAzB,CAA7B,EAAwE,gEAAyB,wDAAzB,CAAxE,EAAqH,gEAAyB,oDAAzB,CAArH,CAAP;AAAuK,OAAxO;;AACAkB,uBAAiB,CAAC5mC,IAAlB,GAAyB,gEAAyB;AAAEC,YAAI,EAAE2mC,iBAAR;AAA2B1mC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,CAAtC;AAAuE6K,cAAM,EAAE;AAAE5H,kBAAQ,EAAE,CAAC,2BAAD,EAA8B,UAA9B,CAAZ;AAAuD8jC,kBAAQ,EAAE;AAAjE,SAA/E;AAA8J3rB,eAAO,EAAE;AAAEmZ,eAAK,EAAE;AAAT,SAAvK;AAAuMlZ,gBAAQ,EAAE,CAAC,mBAAD;AAAjN,OAAzB,CAAzB;;AACAqrB,uBAAiB,CAAC/lC,cAAlB,GAAmC;AAAA,eAAM,CACrC;AAAEZ,cAAI,EAAEylC;AAAR,SADqC,EAErC;AAAEzlC,cAAI,EAAE;AAAR,SAFqC,EAGrC;AAAEA,cAAI,EAAE;AAAR,SAHqC,CAAN;AAAA,OAAnC;;AAKA2mC,uBAAiB,CAAC57B,cAAlB,GAAmC;AAC/BypB,aAAK,EAAE,CAAC;AAAEx0B,cAAI,EAAE,oDAAR;AAAgBa,cAAI,EAAE,CAAC,mBAAD;AAAtB,SAAD,CADwB;AAE/BqC,gBAAQ,EAAE,CAAC;AAAElD,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,2BAAD;AAArB,SAAD,CAFqB;AAG/BmmC,gBAAQ,EAAE,CAAC;AAAEhnC,cAAI,EAAE;AAAR,SAAD;AAHqB,OAAnC;AAKA;;AAAc,OAAC,YAAY;AAAE,wEAAyB2mC,iBAAzB,EAA4C,CAAC;AAClE3mC,cAAI,EAAE,uDAD4D;AAElEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,qBADX;AAECwa,oBAAQ,EAAE;AAFX,WAAD;AAF4D,SAAD,CAA5C,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAEtb,gBAAI,EAAEylC;AAAR,WAAD,EAA4B;AAAEzlC,gBAAI,EAAE;AAAR,WAA5B,EAAyD;AAAEA,gBAAI,EAAE;AAAR,WAAzD,CAAP;AAA2F,SANpF,EAMsF;AAAEw0B,eAAK,EAAE,CAAC;AACjHx0B,gBAAI,EAAE,oDAD2G;AAEjHa,gBAAI,EAAE,CAAC,mBAAD;AAF2G,WAAD,CAAT;AAGvGqC,kBAAQ,EAAE,CAAC;AACXlD,gBAAI,EAAE,mDADK;AAEXa,gBAAI,EAAE,CAAC,2BAAD;AAFK,WAAD,CAH6F;AAMvGmmC,kBAAQ,EAAE,CAAC;AACXhnC,gBAAI,EAAE;AADK,WAAD;AAN6F,SANtF;AAcb,OAdF;;UAeRmnC,e;;;;AAENA,qBAAe,CAACvkB,IAAhB,GAAuB,+DAAwB;AAAE5iB,YAAI,EAAEmnC;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAACtkB,IAAhB,GAAuB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASs9B,uBAAT,CAAiCtnC,CAAjC,EAAoC;AAAE,iBAAO,KAAKA,CAAC,IAAIqnC,eAAV,GAAP;AAAsC,SAAvF;AAAyFnmC,iBAAS,EAAE,CAACqkC,uBAAD;AAApG,OAAxB,CAAvB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOtiB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BokB,eAA1B,EAA2C;AAAEnkB,sBAAY,EAAE,CAAC2jB,iBAAD,CAAhB;AAAqC1jB,iBAAO,EAAE,CAAC0jB,iBAAD;AAA9C,SAA3C,CAAnD;AAAqK,OAApL;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBQ,eAAzB,EAA0C,CAAC;AAChEnnC,cAAI,EAAE,sDAD0D;AAEhEa,cAAI,EAAE,CAAC;AACCoiB,mBAAO,EAAE,CAAC0jB,iBAAD,CADV;AAEC3jB,wBAAY,EAAE,CAAC2jB,iBAAD,CAFf;AAGC3lC,qBAAS,EAAE,CAACqkC,uBAAD;AAHZ,WAAD;AAF0D,SAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,OAPR;AASd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACtNA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;AAOA;;;;;;AAMA,UAAM1gB,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,iBAAD,CAAD,CAAN,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,iBAAN,CAAZ;AACA,UAAMG,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAD,EAA2D,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAA3D,EAA0N,GAA1N,CAAZ;AACA,UAAMsiB,GAAG,GAAG,CAAC,oCAAD,EAAuC,2HAAvC,EAAoK,GAApK,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAAD,EAAgK,CAAC,CAAC,KAAD,CAAD,CAAhK,EAA2K,GAA3K,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,2HAAD,EAA8H,KAA9H,EAAqI,GAArI,CAAZ;;UACMC,c;;;;AAENA,oBAAc,CAAC5nC,IAAf,GAAsB,SAAS6nC,sBAAT,CAAgC3nC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI0nC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAACznC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAEwnC,cAAR;AAAwBvnC,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,EAAuB,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAvB,EAAqD,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArD,CAAnC;AAAqH0d,iBAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ;AAAhI,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB6pB,cAAzB,EAAyC,CAAC;AAC/DxnC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,wDADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIM2mC,Y;;;;AAENA,kBAAY,CAAC9nC,IAAb,GAAoB,SAAS+nC,oBAAT,CAA8B7nC,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI4nC,YAAV,GAAP;AAAmC,OAA1F;;AACAA,kBAAY,CAAC3nC,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAE0nC,YAAR;AAAsBznC,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAjD,CAAjC;AAA6G0d,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAAxH,OAAzB,CAApB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB+pB,YAAzB,EAAuC,CAAC;AAC7D1nC,cAAI,EAAE,uDADuD;AAE7Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,oDADT;AAECC,gBAAI,EAAE;AACF,uBAAS;AADP;AAFP,WAAD;AAFuD,SAAD,CAAvC,EAQrB,IARqB,EAQf,IARe;AAQP,OARR;AASd;;;;;;UAIM6mC,e;;;;AAENA,qBAAe,CAAChoC,IAAhB,GAAuB,SAASioC,uBAAT,CAAiC/nC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI8nC,eAAV,GAAP;AAAsC,OAAnG;;AACAA,qBAAe,CAAC7nC,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAE4nC,eAAR;AAAyB3nC,iBAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,EAAwB,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxB,EAAuD,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAvD,CAApC;AAAyH0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAApI,OAAzB,CAAvB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBiqB,eAAzB,EAA0C,CAAC;AAChE5nC,cAAI,EAAE,uDAD0D;AAEhEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,6DADT;AAECC,gBAAI,EAAE;AACF,uBAAS;AADP;AAFP,WAAD;AAF0D,SAAD,CAA1C,EAQrB,IARqB,EAQf,IARe;AAQP,OARR;AASd;;;;;;UAIM+mC,c,GACF,0BAAc;AAAA;;AACV;AACA,aAAKC,KAAL,GAAa,OAAb;AACH,O;;AAELD,oBAAc,CAACloC,IAAf,GAAsB,SAASooC,sBAAT,CAAgCloC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIgoC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAAC/nC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAE8nC,cAAR;AAAwB7nC,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2D0d,iBAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAtE;AAA+F3Y,gBAAQ,EAAE,CAAzG;AAA4G9E,oBAAY,EAAE,SAAS+nC,2BAAT,CAAqC7nC,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC7N,sEAAmB,4BAAnB,EAAiDC,GAAG,CAAC0nC,KAAJ,KAAc,KAA/D;AACH;AAAE,SAFwC;AAEtCj9B,cAAM,EAAE;AAAEi9B,eAAK,EAAE;AAAT,SAF8B;AAEVzsB,gBAAQ,EAAE,CAAC,gBAAD;AAFA,OAAzB,CAAtB;AAGAwsB,oBAAc,CAAC/8B,cAAf,GAAgC;AAC5Bg9B,aAAK,EAAE,CAAC;AAAE/nC,cAAI,EAAE;AAAR,SAAD;AADqB,OAAhC;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyB8nC,cAAzB,EAAyC,CAAC;AAC/D9nC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,kBADX;AAECwa,oBAAQ,EAAE,gBAFX;AAGCva,gBAAI,EAAE;AACF,uBAAS,kBADP;AAEF,oDAAsC;AAFpC;AAHP,WAAD;AAFyD,SAAD,CAAzC,EAUrB,YAAY;AAAE,iBAAO,EAAP;AAAY,SAVL,EAUO;AAAEgnC,eAAK,EAAE,CAAC;AAClC/nC,gBAAI,EAAE;AAD4B,WAAD;AAAT,SAVP;AAYb,OAZF;AAad;;;;;;UAIMkoC,a;;;;AAENA,mBAAa,CAACtoC,IAAd,GAAqB,SAASuoC,qBAAT,CAA+BroC,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIooC,aAAV,GAAP;AAAoC,OAA7F;;AACAA,mBAAa,CAACnoC,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAEkoC,aAAR;AAAuBjoC,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD0d,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAApE,OAAzB,CAArB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBuqB,aAAzB,EAAwC,CAAC;AAC9DloC,cAAI,EAAE,uDADwD;AAE9Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,iBADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFwD,SAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMqnC,Y;;;;AAENA,kBAAY,CAACxoC,IAAb,GAAoB,SAASyoC,oBAAT,CAA8BvoC,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIsoC,YAAV,GAAP;AAAmC,OAA1F;;AACAA,kBAAY,CAACroC,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAEooC,YAAR;AAAsBnoC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAD,EAA6B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA7B,CAAjC;AAAyF0d,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAApG,OAAzB,CAApB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyByqB,YAAzB,EAAuC,CAAC;AAC7DpoC,cAAI,EAAE,uDADuD;AAE7Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,kCADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFuD,SAAD,CAAvC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMunC,c;;;;AAENA,oBAAc,CAAC1oC,IAAf,GAAsB,SAAS2oC,sBAAT,CAAgCzoC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIwoC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAACvoC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAEsoC,cAAR;AAAwBroC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmG0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB2qB,cAAzB,EAAyC,CAAC;AAC/DtoC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,0CADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIMynC,c;;;;AAENA,oBAAc,CAAC5oC,IAAf,GAAsB,SAAS6oC,sBAAT,CAAgC3oC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI0oC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAACzoC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAEwoC,cAAR;AAAwBvoC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoG0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB6qB,cAAzB,EAAyC,CAAC;AAC/DxoC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,2CADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIM2nC,c;;;;AAENA,oBAAc,CAAC9oC,IAAf,GAAsB,SAAS+oC,sBAAT,CAAgC7oC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI4oC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAAC3oC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAE0oC,cAAR;AAAwBzoC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmG0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB+qB,cAAzB,EAAyC,CAAC;AAC/D1oC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,0CADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIM6nC,c;;;;AAENA,oBAAc,CAAChpC,IAAf,GAAsB,SAASipC,sBAAT,CAAgC/oC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI8oC,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAAC7oC,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAE4oC,cAAR;AAAwB3oC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoG0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBirB,cAAzB,EAAyC,CAAC;AAC/D5oC,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,2CADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFyD,SAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;UAIM+nC,a;;;;AAENA,mBAAa,CAAClpC,IAAd,GAAqB,SAASmpC,qBAAT,CAA+BjpC,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIgpC,aAAV,GAAP;AAAoC,OAA7F;;AACAA,mBAAa,CAAC/oC,IAAd,GAAqB,gEAAyB;AAAEC,YAAI,EAAE8oC,aAAR;AAAuB7oC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAlC;AAA4F0d,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAvG,OAAzB,CAArB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBmrB,aAAzB,EAAwC,CAAC;AAC9D9oC,cAAI,EAAE,uDADwD;AAE9Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,oCADX;AAECC,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFwD,SAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAOd;;;;;;;;;;;;;UAWMioC,O,GACF;AACA,uBAAYrS,cAAZ,EAA4B;AAAA;;AACxB,aAAKA,cAAL,GAAsBA,cAAtB;AACH,O;;AAELqS,aAAO,CAACppC,IAAR,GAAe,SAASqpC,eAAT,CAAyBnpC,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIkpC,OAAV,EAAmB,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAnB,CAAP;AAAgF,OAA7H;;AACAA,aAAO,CAACrR,IAAR,GAAe,gEAAyB;AAAE33B,YAAI,EAAEgpC,OAAR;AAAiB/oC,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C0d,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,qBAAhB,CAAvD;AAA+F3Y,gBAAQ,EAAE,CAAzG;AAA4G9E,oBAAY,EAAE,SAASgpC,oBAAT,CAA8B9oC,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/M,sEAAmB,yBAAnB,EAA8CC,GAAG,CAACs2B,cAAJ,KAAuB,gBAArE;AACH;AAAE,SAFiC;AAE/Brb,gBAAQ,EAAE,CAAC,SAAD,CAFqB;AAER+d,0BAAkB,EAAEzU,GAFZ;AAEiBiT,aAAK,EAAE,CAFxB;AAE2BC,YAAI,EAAE,CAFjC;AAEoCC,gBAAQ,EAAE,SAASoR,gBAAT,CAA0B/oC,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/H,0EAAuBukB,GAAvB;;AACA,uEAAoB,CAApB;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SANiC;AAM/BsT,cAAM,EAAE,CAAC,g8EAAD,CANuB;AAM66EC,qBAAa,EAAE,CAN57E;AAM+7EC,uBAAe,EAAE;AANh9E,OAAzB,CAAf;;AAOA6Q,aAAO,CAACpoC,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAEZ,cAAI,EAAEme,MAAR;AAAgB7b,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAD2B,CAAN;AAAA,OAAzB;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBmoC,OAAzB,EAAkC,CAAC;AACxDhpC,cAAI,EAAE,uDADkD;AAExDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,UADX;AAECwa,oBAAQ,EAAE,SAFX;AAGCyc,oBAAQ,EAAE,mFAHX;AAICG,yBAAa,EAAE,gEAAkBE,IAJlC;AAKCD,2BAAe,EAAE,sEAAwBE,MAL1C;AAMCt3B,gBAAI,EAAE;AACF,uBAAS,8BADP;AAEF,iDAAmC;AAFjC,aANP;AAUCk3B,kBAAM,EAAE,CAAC,g8EAAD;AAVT,WAAD;AAFkD,SAAD,CAAlC,EAcrB,YAAY;AAAE,iBAAO,CAAC;AAAEj4B,gBAAI,EAAEme,MAAR;AAAgB7b,sBAAU,EAAE,CAAC;AAC3CtC,kBAAI,EAAE;AADqC,aAAD,EAE3C;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAF2C;AAA5B,WAAD,CAAP;AAKF,SAnBS,EAmBP,IAnBO;AAmBC,OAnBhB;AAoBd;;;;;;;UAKMuoC,a;;;;AAENA,mBAAa,CAACxpC,IAAd,GAAqB,SAASypC,qBAAT,CAA+BvpC,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIspC,aAAV,GAAP;AAAoC,OAA7F;;AACAA,mBAAa,CAACzR,IAAd,GAAqB,gEAAyB;AAAE33B,YAAI,EAAEopC,aAAR;AAAuBnpC,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyD0d,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAApE;AAA4F0b,0BAAkB,EAAEgO,GAAhH;AAAqHxP,aAAK,EAAE,CAA5H;AAA+HC,YAAI,EAAE,CAArI;AAAwIwB,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,sBAAJ,CAAD,CAAhJ;AAA+KvB,gBAAQ,EAAE,SAASuR,sBAAT,CAAgClpC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtR,0EAAuB2kB,GAAvB;;AACA,uEAAoB,CAApB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SAPuC;AAOrCmT,qBAAa,EAAE,CAPsB;AAOnBC,uBAAe,EAAE;AAPE,OAAzB,CAArB;AAQA;;AAAc,OAAC,YAAY;AAAE,wEAAyBiR,aAAzB,EAAwC,CAAC;AAC9DppC,cAAI,EAAE,uDADwD;AAE9Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,iBADX;AAECi3B,oBAAQ,EAAE,6TAFX;AAGCG,yBAAa,EAAE,gEAAkBE,IAHlC;AAICD,2BAAe,EAAE,sEAAwBE,MAJ1C;AAKCt3B,gBAAI,EAAE;AAAE,uBAAS;AAAX;AALP,WAAD;AAFwD,SAAD,CAAxC,EASrB,IATqB,EASf,IATe;AASP,OATR;AAUd;;;;;;;UAKMwoC,iB;;;;AAENA,uBAAiB,CAAC3pC,IAAlB,GAAyB,SAAS4pC,yBAAT,CAAmC1pC,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAIypC,iBAAV,GAAP;AAAwC,OAAzG;;AACAA,uBAAiB,CAAC5R,IAAlB,GAAyB,gEAAyB;AAAE33B,YAAI,EAAEupC,iBAAR;AAA2BtpC,iBAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAtC;AAAkE0d,iBAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAA7E;AAA0G0b,0BAAkB,EAAEkO,GAA9H;AAAmI1P,aAAK,EAAE,CAA1I;AAA6IC,YAAI,EAAE,CAAnJ;AAAsJC,gBAAQ,EAAE,SAAS0R,0BAAT,CAAoCrpC,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACrQ,0EAAuBknC,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB;;AACA,uEAAoB,CAApB;;AACA;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,SAP2C;AAOzCpP,qBAAa,EAAE,CAP0B;AAOvBC,uBAAe,EAAE;AAPM,OAAzB,CAAzB;AAQA;;AAAc,OAAC,YAAY;AAAE,wEAAyBoR,iBAAzB,EAA4C,CAAC;AAClEvpC,cAAI,EAAE,uDAD4D;AAElEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,sBADX;AAECi3B,oBAAQ,EAAE,+PAFX;AAGCG,yBAAa,EAAE,gEAAkBE,IAHlC;AAICD,2BAAe,EAAE,sEAAwBE,MAJ1C;AAKCt3B,gBAAI,EAAE;AAAE,uBAAS;AAAX;AALP,WAAD;AAF4D,SAAD,CAA5C,EASrB,IATqB,EASf,IATe;AASP,OATR;AAWd;;;;;;;;;UAOM2oC,a;;;;AAENA,mBAAa,CAAC9mB,IAAd,GAAqB,+DAAwB;AAAE5iB,YAAI,EAAE0pC;AAAR,OAAxB,CAArB;AACAA,mBAAa,CAAC7mB,IAAd,GAAqB,+DAAwB;AAAE/Y,eAAO,EAAE,SAAS6/B,qBAAT,CAA+B7pC,CAA/B,EAAkC;AAAE,iBAAO,KAAKA,CAAC,IAAI4pC,aAAV,GAAP;AAAoC,SAAnF;AAAqF9lB,eAAO,EAAE,CAAC,CAAC,sEAAD,CAAD,EAAoB,sEAApB;AAA9F,OAAxB,CAArB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B2mB,aAA1B,EAAyC;AAAE1mB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACgmB,OAAD,EAAUI,aAAV,EAAyBG,iBAAzB,EAA4C/B,cAA5C,EAA4DE,YAA5D,EAA0EE,eAA1E,EAA2FE,cAA3F,EAA2GI,aAA3G,EAA0HI,cAA1H,EAA0IE,cAA1I,EAA0JE,cAA1J,EAA0KN,YAA1K,EAAwLQ,cAAxL,EAAwME,aAAxM,CAAP;AAAgO,WAA9P;AAAgQllB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,CAAP;AAA2B,WAAlT;AAAoTX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC+lB,OAAD,EAAUI,aAAV,EAAyBG,iBAAzB,EAA4C/B,cAA5C,EAA4DE,YAA5D,EAA0EE,eAA1E,EAA2FE,cAA3F,EAA2GI,aAA3G,EAA0HI,cAA1H,EAA0IE,cAA1I,EAA0JE,cAA1J,EAA0KN,YAA1K,EAAwLQ,cAAxL,EAAwME,aAAxM,EAAuN,sEAAvN,CAAP;AAAiP;AAA5jB,SAAzC,CAAnD;AAA8pB,OAA7qB;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBY,aAAzB,EAAwC,CAAC;AAC9D1pC,cAAI,EAAE,sDADwD;AAE9Da,cAAI,EAAE,CAAC;AACC+iB,mBAAO,EAAE,CAAC,sEAAD,CADV;AAECX,mBAAO,EAAE,CACL+lB,OADK,EAELI,aAFK,EAGLG,iBAHK,EAIL/B,cAJK,EAKLE,YALK,EAMLE,eANK,EAOLE,cAPK,EAQLI,aARK,EASLI,cATK,EAULE,cAVK,EAWLE,cAXK,EAYLN,YAZK,EAaLQ,cAbK,EAcLE,aAdK,EAeL,sEAfK,CAFV;AAmBC9lB,wBAAY,EAAE,CACVgmB,OADU,EACDI,aADC,EACcG,iBADd,EACiC/B,cADjC,EACiDE,YADjD,EAC+DE,eAD/D,EAEVE,cAFU,EAEMI,aAFN,EAEqBI,cAFrB,EAEqCE,cAFrC,EAEqDE,cAFrD,EAEqEN,YAFrE,EAGVQ,cAHU,EAGME,aAHN;AAnBf,WAAD;AAFwD,SAAD,CAAxC,EA2BrB,IA3BqB,EA2Bf,IA3Be;AA2BP,OA3BR;AA6Bd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACvWA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;AAOA;;;AAKA,UAAMnkB,GAAG,GAAG,CAAC,YAAD,EAAe,EAAf,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,UAAMG,GAAG,GAAG,8/MAAZ;AACA,UAAM6kB,0BAA0B,GAAG,QAAnC;AACA;;;;;AAIA,UAAMC,sBAAsB,GAAG,CAC3B,YAD2B,EAE3B,iBAF2B,EAG3B,iBAH2B,EAI3B,mBAJ2B,EAK3B,oBAL2B,EAM3B,cAN2B,EAO3B,SAP2B,CAA/B,C,CASA;;AACA;;UACMC,a,GACF,uBAAY3qC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAM4qC,mBAAmB,GAAG,0EAAW,6EAAc,kFAAmBD,aAAnB,CAAd,CAAX,CAA5B;AACA;;;;;UAGME,S;;;;;AACF,2BAAYC,UAAZ,EAAwBC,aAAxB,EAAuCvT,cAAvC,EAAuD;AAAA;;AAAA;;AACnD,wCAAMsT,UAAN;AACA,kBAAKC,aAAL,GAAqBA,aAArB;AACA,kBAAKvT,cAAL,GAAsBA,cAAtB;AACA;;AACA,kBAAKwT,aAAL,GAAqB,QAAKC,kBAAL,CAAwB,SAAxB,EAAmC,cAAnC,CAArB;AACA;;AACA,kBAAKC,YAAL,GAAoB,QAAKD,kBAAL,CAAwB,iBAAxB,CAApB,CAPmD,CAQnD;AACA;;AATmD,sDAUhCP,sBAVgC;AAAA;;AAAA;AAUnD,mEAA2C;AAAA,kBAAhCS,IAAgC;;AACvC,kBAAI,QAAKF,kBAAL,CAAwBE,IAAxB,CAAJ,EAAmC;AAC/B,wBAAK/P,eAAL,GAAuB9S,SAAvB,CAAiCtd,GAAjC,CAAqCmgC,IAArC;AACH;AACJ,aAdkD,CAenD;AACA;AACA;;AAjBmD;AAAA;AAAA;AAAA;AAAA;;AAkBnDL,oBAAU,CAACxqC,aAAX,CAAyBgoB,SAAzB,CAAmCtd,GAAnC,CAAuC,iBAAvC;;AACA,cAAI,QAAKggC,aAAT,EAAwB;AACpB,oBAAK7hB,KAAL,GAAashB,0BAAb;AACH;;AArBkD;AAsBtD;;;;4CACiB;AACd,iBAAKM,aAAL,CAAmBK,OAAnB,CAA2B,KAAKprC,WAAhC,EAA6C,IAA7C;AACH;;;wCACa;AACV,iBAAK+qC,aAAL,CAAmBM,cAAnB,CAAkC,KAAKrrC,WAAvC;AACH;AACD;;;;kCACmC;AAAA,gBAA7BsrC,MAA6B,uEAApB,SAAoB;AAAA,gBAAT17B,OAAS;;AAC/B,iBAAKm7B,aAAL,CAAmBQ,QAAnB,CAA4B,KAAKnQ,eAAL,EAA5B,EAAoDkQ,MAApD,EAA4D17B,OAA5D;AACH;;;4CACiB;AACd,mBAAO,KAAK5P,WAAL,CAAiBM,aAAxB;AACH;;;8CACmB;AAChB,mBAAO,KAAKq7B,aAAL,IAAsB,KAAK53B,QAAlC;AACH;AACD;;;;+CACkC;AAAA;;AAAA,+CAAZynC,UAAY;AAAZA,wBAAY;AAAA;;AAC9B,mBAAOA,UAAU,CAACj4B,IAAX,CAAgB,UAAAk4B,SAAS;AAAA,qBAAI,OAAI,CAACrQ,eAAL,GAAuBsQ,YAAvB,CAAoCD,SAApC,CAAJ;AAAA,aAAzB,CAAP;AACH;;;;QA3CmBb,mB;;AA6CxBC,eAAS,CAACpqC,IAAV,GAAiB,SAASkrC,iBAAT,CAA2BhrC,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIkqC,SAAV,EAAqB,gEAAyB,wDAAzB,CAArB,EAAkE,gEAAyB,8DAAzB,CAAlE,EAAiH,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,OAA/N;;AACAA,eAAS,CAACrS,IAAV,GAAiB,gEAAyB;AAAE33B,YAAI,EAAEgqC,SAAR;AAAmB/pC,iBAAS,EAAE,CAAC,CAAC,QAAD,EAAW,YAAX,EAAyB,EAAzB,CAAD,EAA+B,CAAC,QAAD,EAAW,mBAAX,EAAgC,EAAhC,CAA/B,EAAoE,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAApE,EAAuG,CAAC,QAAD,EAAW,SAAX,EAAsB,EAAtB,CAAvG,EAAkI,CAAC,QAAD,EAAW,cAAX,EAA2B,EAA3B,CAAlI,EAAkK,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAlK,EAAwM,CAAC,QAAD,EAAW,iBAAX,EAA8B,EAA9B,CAAxM,CAA9B;AAA0Q8qC,iBAAS,EAAE,SAASC,eAAT,CAAyB5qC,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACvW,sEAAmB,gEAAnB,EAA8B,IAA9B;AACH;;AAAC,cAAIA,EAAE,GAAG,CAAT,EAAY;AACV,gBAAI6qC,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACgzB,MAAJ,GAAa4X,EAAE,CAACpgB,KAArE;AACH;AAAE,SALmC;AAKjClN,iBAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CALsB;AAKM3Y,gBAAQ,EAAE,CALhB;AAKmB9E,oBAAY,EAAE,SAASgrC,sBAAT,CAAgC9qC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC1H,sEAAmB,UAAnB,EAA+BC,GAAG,CAAC6C,QAAJ,IAAgB,IAA/C;;AACA,sEAAmB,yBAAnB,EAA8C7C,GAAG,CAACs2B,cAAJ,KAAuB,gBAArE,EAAuF,qBAAvF,EAA8Gt2B,GAAG,CAAC6C,QAAlH;AACH;AAAE,SARmC;AAQjC4H,cAAM,EAAE;AAAE5H,kBAAQ,EAAE,UAAZ;AAAwB43B,uBAAa,EAAE,eAAvC;AAAwDxS,eAAK,EAAE;AAA/D,SARyB;AAQiDhN,gBAAQ,EAAE,CAAC,WAAD,CAR3D;AAQ0E3a,gBAAQ,EAAE,CAAC,wEAAD,CARpF;AAQyHwqC,aAAK,EAAExmB,GARhI;AAQqI0U,0BAAkB,EAAEzU,GARzJ;AAQ8JiT,aAAK,EAAE,CARrK;AAQwKC,YAAI,EAAE,CAR9K;AAQiLwB,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CARzL;AAQmWvB,gBAAQ,EAAE,SAASqT,kBAAT,CAA4BhrC,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAClc;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,uEAAoB,CAApB;;AACA;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACH;;AAAC,cAAIA,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,sEAAmB,yBAAnB,EAA8CC,GAAG,CAAC8pC,aAAJ,IAAqB9pC,GAAG,CAACgqC,YAAvE;;AACA,qEAAkB,mBAAlB,EAAuChqC,GAAG,CAACgrC,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqFhrC,GAAG,CAACgqC,YAAzF,EAAuG,kBAAvG,EAA2HhqC,GAAG,CAACk6B,eAAJ,EAA3H;AACH;AAAE,SAnBmC;AAmBjCxnB,kBAAU,EAAE,CAAC,gEAAD,CAnBqB;AAmBDklB,cAAM,EAAE,CAAClT,GAAD,CAnBP;AAmBcmT,qBAAa,EAAE,CAnB7B;AAmBgCC,uBAAe,EAAE;AAnBjD,OAAzB,CAAjB;;AAoBA6R,eAAS,CAACppC,cAAV,GAA2B;AAAA,eAAM,CAC7B;AAAEZ,cAAI,EAAE;AAAR,SAD6B,EAE7B;AAAEA,cAAI,EAAE;AAAR,SAF6B,EAG7B;AAAEA,cAAI,EAAEme,MAAR;AAAgB7b,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAH6B,CAAN;AAAA,OAA3B;;AAKAmpC,eAAS,CAACj/B,cAAV,GAA2B;AACvBsoB,cAAM,EAAE,CAAC;AAAErzB,cAAI,EAAE,uDAAR;AAAmBa,cAAI,EAAE,CAAC,gEAAD;AAAzB,SAAD;AADe,OAA3B;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBmpC,SAAzB,EAAoC,CAAC;AAC1DhqC,cAAI,EAAE,uDADoD;AAE1Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,kMADT;AAICwa,oBAAQ,EAAE,WAJX;AAKCva,gBAAI,EAAE;AACF,iCAAmB,kBADjB;AAEF,iDAAmC,qCAFjC;AAGF;AACA;AACA;AACA,6CAA+B,UAN7B;AAOF,uBAAS;AAPP,aALP;AAcCg3B,oBAAQ,EAAE,sYAdX;AAeCjtB,kBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,CAfT;AAgBCotB,yBAAa,EAAE,gEAAkBE,IAhBlC;AAiBCD,2BAAe,EAAE,sEAAwBE,MAjB1C;AAkBCJ,kBAAM,EAAE,CAAC,8/MAAD;AAlBT,WAAD;AAFoD,SAAD,CAApC,EAsBrB,YAAY;AAAE,iBAAO,CAAC;AAAEj4B,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAA6D;AAAEA,gBAAI,EAAEme,MAAR;AAAgB7b,sBAAU,EAAE,CAAC;AACvGtC,kBAAI,EAAE;AADiG,aAAD,EAEvG;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAFuG;AAA5B,WAA7D,CAAP;AAKF,SA3BS,EA2BP;AAAEwyB,gBAAM,EAAE,CAAC;AACrBrzB,gBAAI,EAAE,uDADe;AAErBa,gBAAI,EAAE,CAAC,gEAAD;AAFe,WAAD;AAAV,SA3BO;AA8Bb,OA9BF;AA+Bd;;;;;UAGMyqC,S;;;;;AACF,2BAAYC,YAAZ,EAA0BtB,UAA1B,EAAsCuB,aAAtC,EAAqD;AAAA;;AAAA,qCAC3CvB,UAD2C,EAC/BsB,YAD+B,EACjBC,aADiB;AAEpD;;;;8CACmBhX,K,EAAO;AACvB;AACA,gBAAI,KAAKtxB,QAAT,EAAmB;AACfsxB,mBAAK,CAACoG,cAAN;AACApG,mBAAK,CAACiX,wBAAN;AACH;AACJ;;;;QAVmBzB,S;;AAYxBsB,eAAS,CAAC1rC,IAAV,GAAiB,SAAS8rC,iBAAT,CAA2B5rC,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIwrC,SAAV,EAAqB,gEAAyB,8DAAzB,CAArB,EAAoE,gEAAyB,wDAAzB,CAApE,EAAiH,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAjH,CAAP;AAA8K,OAA/N;;AACAA,eAAS,CAAC3T,IAAV,GAAiB,gEAAyB;AAAE33B,YAAI,EAAEsrC,SAAR;AAAmBrrC,iBAAS,EAAE,CAAC,CAAC,GAAD,EAAM,YAAN,EAAoB,EAApB,CAAD,EAA0B,CAAC,GAAD,EAAM,mBAAN,EAA2B,EAA3B,CAA1B,EAA0D,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1D,EAAwF,CAAC,GAAD,EAAM,SAAN,EAAiB,EAAjB,CAAxF,EAA8G,CAAC,GAAD,EAAM,cAAN,EAAsB,EAAtB,CAA9G,EAAyI,CAAC,GAAD,EAAM,oBAAN,EAA4B,EAA5B,CAAzI,EAA0K,CAAC,GAAD,EAAM,iBAAN,EAAyB,EAAzB,CAA1K,CAA9B;AAAuO0d,iBAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAAlP;AAA8Q3Y,gBAAQ,EAAE,CAAxR;AAA2R9E,oBAAY,EAAE,SAASyrC,sBAAT,CAAgCvrC,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAClY,qEAAkB,OAAlB,EAA2B,SAASwrC,kCAAT,CAA4CrrC,MAA5C,EAAoD;AAAE,qBAAOF,GAAG,CAACwrC,mBAAJ,CAAwBtrC,MAAxB,CAAP;AAAyC,aAA1H;AACH;;AAAC,cAAIH,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,UAAnB,EAA+BC,GAAG,CAAC6C,QAAJ,GAAe,CAAC,CAAhB,GAAoB7C,GAAG,CAACyrC,QAAJ,IAAgB,CAAnE,EAAsE,UAAtE,EAAkFzrC,GAAG,CAAC6C,QAAJ,IAAgB,IAAlG,EAAwG,eAAxG,EAAyH7C,GAAG,CAAC6C,QAAJ,CAAa6D,QAAb,EAAzH;;AACA,sEAAmB,yBAAnB,EAA8C1G,GAAG,CAACs2B,cAAJ,KAAuB,gBAArE,EAAuF,qBAAvF,EAA8Gt2B,GAAG,CAAC6C,QAAlH;AACH;AAAE,SALmC;AAKjC4H,cAAM,EAAE;AAAE5H,kBAAQ,EAAE,UAAZ;AAAwB43B,uBAAa,EAAE,eAAvC;AAAwDxS,eAAK,EAAE,OAA/D;AAAwEwjB,kBAAQ,EAAE;AAAlF,SALyB;AAKuExwB,gBAAQ,EAAE,CAAC,WAAD,EAAc,WAAd,CALjF;AAK6G3a,gBAAQ,EAAE,CAAC,wEAAD,CALvH;AAK4JwqC,aAAK,EAAExmB,GALnK;AAKwK0U,0BAAkB,EAAEzU,GAL5L;AAKiMiT,aAAK,EAAE,CALxM;AAK2MC,YAAI,EAAE,CALjN;AAKoNwB,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,CAAD,EAA4B,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,mBAArB,EAA0C,CAA1C,EAA6C,mBAA7C,EAAkE,mBAAlE,EAAuF,kBAAvF,CAA5B,EAAwI,CAAC,CAAD,EAAI,0BAAJ,CAAxI,CAL5N;AAKsYvB,gBAAQ,EAAE,SAASgU,kBAAT,CAA4B3rC,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACre;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,uEAAoB,CAApB;;AACA;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;;AACA,oEAAiB,CAAjB,EAAoB,MAApB,EAA4B,CAA5B;AACH;;AAAC,cAAIA,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,sEAAmB,yBAAnB,EAA8CC,GAAG,CAAC8pC,aAAJ,IAAqB9pC,GAAG,CAACgqC,YAAvE;;AACA,qEAAkB,mBAAlB,EAAuChqC,GAAG,CAACgrC,iBAAJ,EAAvC,EAAgE,mBAAhE,EAAqFhrC,GAAG,CAACgqC,YAAzF,EAAuG,kBAAvG,EAA2HhqC,GAAG,CAACk6B,eAAJ,EAA3H;AACH;AAAE,SAhBmC;AAgBjCxnB,kBAAU,EAAE,CAAC,gEAAD,CAhBqB;AAgBDklB,cAAM,EAAE,CAAClT,GAAD,CAhBP;AAgBcmT,qBAAa,EAAE,CAhB7B;AAgBgCC,uBAAe,EAAE;AAhBjD,OAAzB,CAAjB;;AAiBAmT,eAAS,CAAC1qC,cAAV,GAA2B;AAAA,eAAM,CAC7B;AAAEZ,cAAI,EAAE;AAAR,SAD6B,EAE7B;AAAEA,cAAI,EAAE;AAAR,SAF6B,EAG7B;AAAEA,cAAI,EAAEme,MAAR;AAAgB7b,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAH6B,CAAN;AAAA,OAA3B;;AAKAyqC,eAAS,CAACvgC,cAAV,GAA2B;AACvB+gC,gBAAQ,EAAE,CAAC;AAAE9rC,cAAI,EAAE;AAAR,SAAD;AADa,OAA3B;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBsrC,SAAzB,EAAoC,CAAC;AAC1DtrC,cAAI,EAAE,uDADoD;AAE1Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,iJADT;AAGCwa,oBAAQ,EAAE,sBAHX;AAICva,gBAAI,EAAE;AACF;AACA;AACA;AACA,iCAAmB,iCAJjB;AAKF,iCAAmB,kBALjB;AAMF,sCAAwB,qBANtB;AAOF,yBAAW,6BAPT;AAQF,iDAAmC,qCARjC;AASF,6CAA+B,UAT7B;AAUF,uBAAS;AAVP,aAJP;AAgBC+J,kBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,CAhBT;AAiBCitB,oBAAQ,EAAE,sYAjBX;AAkBCG,yBAAa,EAAE,gEAAkBE,IAlBlC;AAmBCD,2BAAe,EAAE,sEAAwBE,MAnB1C;AAoBCJ,kBAAM,EAAE,CAAC,8/MAAD;AApBT,WAAD;AAFoD,SAAD,CAApC,EAwBrB,YAAY;AAAE,iBAAO,CAAC;AAAEj4B,gBAAI,EAAE;AAAR,WAAD,EAAgC;AAAEA,gBAAI,EAAE;AAAR,WAAhC,EAA6D;AAAEA,gBAAI,EAAEme,MAAR;AAAgB7b,sBAAU,EAAE,CAAC;AACvGtC,kBAAI,EAAE;AADiG,aAAD,EAEvG;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAFuG;AAA5B,WAA7D,CAAP;AAKF,SA7BS,EA6BP;AAAEirC,kBAAQ,EAAE,CAAC;AACvB9rC,gBAAI,EAAE;AADiB,WAAD;AAAZ,SA7BO;AA+Bb,OA/BF;AAiCd;;;;;;;;;UAOMgsC,e;;;;AAENA,qBAAe,CAACppB,IAAhB,GAAuB,+DAAwB;AAAE5iB,YAAI,EAAEgsC;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAACnpB,IAAhB,GAAuB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASmiC,uBAAT,CAAiCnsC,CAAjC,EAAoC;AAAE,iBAAO,KAAKA,CAAC,IAAIksC,eAAV,GAAP;AAAsC,SAAvF;AAAyFpoB,eAAO,EAAE,CAAC,CACtI,sEADsI,EAEtI,sEAFsI,CAAD,EAGtI,sEAHsI;AAAlG,OAAxB,CAAvB;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BipB,eAA1B,EAA2C;AAAEhpB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACgnB,SAAD,EAAYsB,SAAZ,CAAP;AAAgC,WAA9D;AAAgE1nB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EACnM,sEADmM,CAAP;AACzK,WADkF;AAChFX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC+mB,SAAD,EAAYsB,SAAZ,EAAuB,sEAAvB,CAAP;AAAiD;AADQ,SAA3C,CAAnD;AAC4F,OAD3G;AAEA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBU,eAAzB,EAA0C,CAAC;AAChEhsC,cAAI,EAAE,sDAD0D;AAEhEa,cAAI,EAAE,CAAC;AACC+iB,mBAAO,EAAE,CACL,sEADK,EAEL,sEAFK,CADV;AAKCX,mBAAO,EAAE,CACL+mB,SADK,EAELsB,SAFK,EAGL,sEAHK,CALV;AAUCtoB,wBAAY,EAAE,CACVgnB,SADU,EAEVsB,SAFU;AAVf,WAAD;AAF0D,SAAD,CAA1C,EAiBrB,IAjBqB,EAiBf,IAjBe;AAiBP,OAjBR;AAmBd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACjRA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;AAgBA,UAAMY,YAAY,GAAG,IAAI,4DAAJ,CAAmB,aAAnB,EAAkC;AACnDtmB,kBAAU,EAAE,MADuC;AAEnD9b,eAAO,EAAEqiC;AAF0C,OAAlC,CAArB;AAIA;;AACA,eAASA,oBAAT,GAAgC;AAC5B,eAAO,6DAAO,wDAAP,CAAP;AACH;AAED;;;;;;;;AAOA;;;;;;UAIMC,c;AACF,gCAAYlmB,SAAZ,EAAuB;AAAA;;AACnB;AACA,eAAK3mB,KAAL,GAAa,KAAb;AACA;;AACA,eAAK8S,MAAL,GAAc,IAAI,0DAAJ,EAAd;;AACA,cAAI6T,SAAJ,EAAe;AACX;AACA;AACA;AACA;AACA,gBAAMmmB,OAAO,GAAGnmB,SAAS,CAACmB,IAAV,GAAiBnB,SAAS,CAACmB,IAAV,CAAezX,GAAhC,GAAsC,IAAtD;AACA,gBAAM08B,OAAO,GAAGpmB,SAAS,CAACqmB,eAAV,GAA4BrmB,SAAS,CAACqmB,eAAV,CAA0B38B,GAAtD,GAA4D,IAA5E;AACA,gBAAMrQ,KAAK,GAAG8sC,OAAO,IAAIC,OAAzB;AACA,iBAAK/sC,KAAL,GAAcA,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,KAA9B,GAAuCA,KAAvC,GAA+C,KAA5D;AACH;AACJ;;;;wCACa;AACV,iBAAK8S,MAAL,CAAY6X,QAAZ;AACH;;;;;;AAELkiB,oBAAc,CAACxsC,IAAf,GAAsB,SAAS4sC,sBAAT,CAAgC1sC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIssC,cAAV,EAA0B,uDAAgBF,YAAhB,EAA8B,CAA9B,CAA1B,CAAP;AAAqE,OAAhI;;AACAE,oBAAc,CAACxiC,KAAf,GAAuB,yEAAmB;AAAEE,eAAO,EAAE,SAAS0iC,sBAAT,GAAkC;AAAE,iBAAO,IAAIJ,cAAJ,CAAmB,+DAASF,YAAT,EAAuB,CAAvB,CAAnB,CAAP;AAAuD,SAAtG;AAAwGriC,aAAK,EAAEuiC,cAA/G;AAA+HxmB,kBAAU,EAAE;AAA3I,OAAnB,CAAvB;;AACAwmB,oBAAc,CAACxrC,cAAf,GAAgC;AAAA,eAAM,CAClC;AAAEZ,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACqrC,YAAD;AAAtB,WAArB;AAA/B,SADkC,CAAN;AAAA,OAAhC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBE,cAAzB,EAAyC,CAAC;AAC/DpsC,cAAI,EAAE,wDADyD;AAE/Da,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFyD,SAAD,CAAzC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC9CtC,kBAAI,EAAE;AADwC,aAAD,EAE9C;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACqrC,YAAD;AAFP,aAF8C;AAA/B,WAAD,CAAP;AAKF,SARS,EAQP,IARO;AAQC,OARhB;AAUd;;;;;;;;AAOA;;;;;;;;UAMMO,G;AACF,uBAAc;AAAA;;AACV;AACA,eAAKC,IAAL,GAAY,KAAZ;AACA;;AACA,eAAK7iB,cAAL,GAAsB,KAAtB;AACA;;AACA,eAAKxX,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACH;AACD;;;;;;AAaA;+CACqB;AACjB,iBAAKwX,cAAL,GAAsB,IAAtB;AACH;;;wCACa;AACV,iBAAKxX,MAAL,CAAY6X,QAAZ;AACH;;;8BAlBS;AAAE,mBAAO,KAAKwiB,IAAZ;AAAmB,W;4BACvBntC,K,EAAO;AACX,gBAAMotC,GAAG,GAAG,KAAKD,IAAjB;AACA,gBAAM/qC,eAAe,GAAGpC,KAAK,GAAGA,KAAK,CAACgC,WAAN,EAAH,GAAyBhC,KAAtD;AACA,iBAAKqtC,OAAL,GAAertC,KAAf;AACA,iBAAKmtC,IAAL,GAAa/qC,eAAe,KAAK,KAApB,IAA6BA,eAAe,KAAK,KAAlD,GAA2DA,eAA3D,GAA6E,KAAzF;;AACA,gBAAIgrC,GAAG,KAAK,KAAKD,IAAb,IAAqB,KAAK7iB,cAA9B,EAA8C;AAC1C,mBAAKxX,MAAL,CAAY6D,IAAZ,CAAiB,KAAKw2B,IAAtB;AACH;AACJ;AACD;;;;8BACY;AAAE,mBAAO,KAAK98B,GAAZ;AAAkB;;;;;;AASpC68B,SAAG,CAAC7sC,IAAJ,GAAW,SAASitC,WAAT,CAAqB/sC,CAArB,EAAwB;AAAE,eAAO,KAAKA,CAAC,IAAI2sC,GAAV,GAAP;AAA0B,OAA/D;;AACAA,SAAG,CAAC1sC,IAAJ,GAAW,gEAAyB;AAAEC,YAAI,EAAEysC,GAAR;AAAaxsC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAAD,CAAxB;AAA2C+E,gBAAQ,EAAE,CAArD;AAAwD9E,oBAAY,EAAE,SAAS4sC,gBAAT,CAA0B1sC,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACnJ,sEAAmB,KAAnB,EAA0BC,GAAG,CAACusC,OAA9B;AACH;AAAE,SAF6B;AAE3B9hC,cAAM,EAAE;AAAE8E,aAAG,EAAE;AAAP,SAFmB;AAEHyL,eAAO,EAAE;AAAEhJ,gBAAM,EAAE;AAAV,SAFN;AAE+BiJ,gBAAQ,EAAE,CAAC,KAAD,CAFzC;AAEkD3a,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAEstC,cAAX;AAA2BrtC,qBAAW,EAAE0tC;AAAxC,SAAD,CAA1B,CAAD;AAF5D,OAAzB,CAAX;AAGAA,SAAG,CAAC1hC,cAAJ,GAAqB;AACjBsH,cAAM,EAAE,CAAC;AAAErS,cAAI,EAAE,oDAAR;AAAgBa,cAAI,EAAE,CAAC,WAAD;AAAtB,SAAD,CADS;AAEjB+O,WAAG,EAAE,CAAC;AAAE5P,cAAI,EAAE;AAAR,SAAD;AAFY,OAArB;AAIA;;AAAc,OAAC,YAAY;AAAE,wEAAyBysC,GAAzB,EAA8B,CAAC;AACpDzsC,cAAI,EAAE,uDAD8C;AAEpDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,OADX;AAECE,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAEstC,cAAX;AAA2BrtC,yBAAW,EAAE0tC;AAAxC,aAAD,CAFZ;AAGC1rC,gBAAI,EAAE;AAAE,4BAAc;AAAhB,aAHP;AAICua,oBAAQ,EAAE;AAJX,WAAD;AAF8C,SAAD,CAA9B,EAQrB,YAAY;AAAE,iBAAO,EAAP;AAAY,SARL,EAQO;AAAEjJ,gBAAM,EAAE,CAAC;AACnCrS,gBAAI,EAAE,oDAD6B;AAEnCa,gBAAI,EAAE,CAAC,WAAD;AAF6B,WAAD,CAAV;AAGxB+O,aAAG,EAAE,CAAC;AACN5P,gBAAI,EAAE;AADA,WAAD;AAHmB,SARP;AAab,OAbF;AAed;;;;;;;;;UAOM+sC,U;;;;AAENA,gBAAU,CAACnqB,IAAX,GAAkB,+DAAwB;AAAE5iB,YAAI,EAAE+sC;AAAR,OAAxB,CAAlB;AACAA,gBAAU,CAAClqB,IAAX,GAAkB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASkjC,kBAAT,CAA4BltC,CAA5B,EAA+B;AAAE,iBAAO,KAAKA,CAAC,IAAIitC,UAAV,GAAP;AAAiC;AAA7E,OAAxB,CAAlB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhqB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BgqB,UAA1B,EAAsC;AAAE/pB,sBAAY,EAAE,CAACypB,GAAD,CAAhB;AAAuBxpB,iBAAO,EAAE,CAACwpB,GAAD;AAAhC,SAAtC,CAAnD;AAAoI,OAAnJ;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBM,UAAzB,EAAqC,CAAC;AAC3D/sC,cAAI,EAAE,sDADqD;AAE3Da,cAAI,EAAE,CAAC;AACCoiB,mBAAO,EAAE,CAACwpB,GAAD,CADV;AAECzpB,wBAAY,EAAE,CAACypB,GAAD;AAFf,WAAD;AAFqD,SAAD,CAArC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAQd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACtLA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;;;;AAOA;;;AAGA,UAAMQ,eAAe,GAAG,8FAAgC;AAAEzb,eAAO,EAAE;AAAX,OAAhC,CAAxB;AACA;;;;;;UAKM0b,e;AACF,iCAAYC,SAAZ,EAAuBtb,OAAvB,EAAgC;AAAA;;AAC5B,eAAKsb,SAAL,GAAiBA,SAAjB;AACA,eAAKtb,OAAL,GAAeA,OAAf;AACA,eAAKub,kBAAL,GAA0B,IAAI3gC,GAAJ,EAA1B;AACH;;;;kCACOiY,Y,EAAc;AAAA;;AAClB,gBAAI,CAAC,KAAKyoB,SAAL,CAAehb,SAApB,EAA+B;AAC3B,qBAAO,0CAAP;AACH;;AACD,gBAAM5B,OAAO,GAAG,4EAAc7L,YAAd,CAAhB;;AACA,gBAAM2oB,IAAI,GAAG,KAAKD,kBAAL,CAAwBnjC,GAAxB,CAA4BsmB,OAA5B,CAAb;;AACA,gBAAI8c,IAAJ,EAAU;AACN,qBAAOA,IAAI,CAACC,OAAZ;AACH;;AACD,gBAAM/f,MAAM,GAAG,IAAI,4CAAJ,EAAf;AACA,gBAAMggB,QAAQ,GAAG,2BAAjB;;AACA,gBAAMC,QAAQ,GAAI,SAAZA,QAAY,CAAChZ,KAAD,EAAW;AACzB;AACA;AACA;AACA,kBAAIA,KAAK,CAACiZ,aAAN,KAAwB,+BAAxB,IACA,CAACld,OAAO,CAAC9I,SAAR,CAAkB9N,QAAlB,CAA2B4zB,QAA3B,CADL,EAC2C;AACvChd,uBAAO,CAAC9I,SAAR,CAAkBtd,GAAlB,CAAsBojC,QAAtB;;AACA,uBAAI,CAAC1b,OAAL,CAAa6b,GAAb,CAAiB;AAAA,yBAAMngB,MAAM,CAAC5D,IAAP,CAAY;AAAEnpB,0BAAM,EAAEg0B,KAAK,CAACh0B,MAAhB;AAAwBmtC,gCAAY,EAAE;AAAtC,mBAAZ,CAAN;AAAA,iBAAjB;AACH,eAJD,MAKK,IAAInZ,KAAK,CAACiZ,aAAN,KAAwB,6BAAxB,IACLld,OAAO,CAAC9I,SAAR,CAAkB9N,QAAlB,CAA2B4zB,QAA3B,CADC,EACqC;AACtChd,uBAAO,CAAC9I,SAAR,CAAkBrd,MAAlB,CAAyBmjC,QAAzB;;AACA,uBAAI,CAAC1b,OAAL,CAAa6b,GAAb,CAAiB;AAAA,yBAAMngB,MAAM,CAAC5D,IAAP,CAAY;AAAEnpB,0BAAM,EAAEg0B,KAAK,CAACh0B,MAAhB;AAAwBmtC,gCAAY,EAAE;AAAtC,mBAAZ,CAAN;AAAA,iBAAjB;AACH;AACJ,aAdD;;AAeA,iBAAK9b,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjCnF,qBAAO,CAACsF,gBAAR,CAAyB,gBAAzB,EAA2C2X,QAA3C,EAAqDP,eAArD;AACA1c,qBAAO,CAAC9I,SAAR,CAAkBtd,GAAlB,CAAsB,mCAAtB;AACH,aAHD;;AAIA,iBAAKijC,kBAAL,CAAwBv/B,GAAxB,CAA4B0iB,OAA5B,EAAqC;AACjC+c,qBAAO,EAAE/f,MADwB;AAEjCqgB,sBAAQ,EAAE,oBAAM;AACZrd,uBAAO,CAACuF,mBAAR,CAA4B,gBAA5B,EAA8C0X,QAA9C,EAAwDP,eAAxD;AACH;AAJgC,aAArC;;AAMA,mBAAO1f,MAAP;AACH;;;yCACc7I,Y,EAAc;AACzB,gBAAM6L,OAAO,GAAG,4EAAc7L,YAAd,CAAhB;;AACA,gBAAM2oB,IAAI,GAAG,KAAKD,kBAAL,CAAwBnjC,GAAxB,CAA4BsmB,OAA5B,CAAb;;AACA,gBAAI8c,IAAJ,EAAU;AACNA,kBAAI,CAACO,QAAL;AACAP,kBAAI,CAACC,OAAL,CAAapjB,QAAb;AACAqG,qBAAO,CAAC9I,SAAR,CAAkBrd,MAAlB,CAAyB,mCAAzB;AACAmmB,qBAAO,CAAC9I,SAAR,CAAkBrd,MAAlB,CAAyB,2BAAzB;;AACA,mBAAKgjC,kBAAL,WAA+B7c,OAA/B;AACH;AACJ;;;wCACa;AAAA;;AACV,iBAAK6c,kBAAL,CAAwBrlC,OAAxB,CAAgC,UAAC8lC,KAAD,EAAQtd,OAAR;AAAA,qBAAoB,OAAI,CAACia,cAAL,CAAoBja,OAApB,CAApB;AAAA,aAAhC;AACH;;;;;;AAEL2c,qBAAe,CAACttC,IAAhB,GAAuB,SAASkuC,uBAAT,CAAiChuC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIotC,eAAV,EAA2B,uDAAgB,8DAAhB,CAA3B,EAA6D,uDAAgB,oDAAhB,CAA7D,CAAP;AAAsG,OAAnK;;AACAA,qBAAe,CAACtjC,KAAhB,GAAwB,yEAAmB;AAAEE,eAAO,EAAE,SAASgkC,uBAAT,GAAmC;AAAE,iBAAO,IAAIZ,eAAJ,CAAoB,+DAAS,8DAAT,CAApB,EAAwC,+DAAS,oDAAT,CAAxC,CAAP;AAAmE,SAAnH;AAAqHrjC,aAAK,EAAEqjC,eAA5H;AAA6ItnB,kBAAU,EAAE;AAAzJ,OAAnB,CAAxB;;AACAsnB,qBAAe,CAACtsC,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEZ,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,CAAN;AAAA,OAAjC;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBktC,eAAzB,EAA0C,CAAC;AAChEltC,cAAI,EAAE,wDAD0D;AAEhEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAF0D,SAAD,CAA1C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE;AAAR,WAAD,EAA4B;AAAEA,gBAAI,EAAE;AAAR,WAA5B,CAAP;AAA8D,SAHvD,EAGyD,IAHzD;AAGiE,OAHhF;AAId;;;UACM+tC,W;AACF,6BAAY5uC,WAAZ,EAAyB6uC,gBAAzB,EAA2C;AAAA;;AACvC,eAAK7uC,WAAL,GAAmBA,WAAnB;AACA,eAAK6uC,gBAAL,GAAwBA,gBAAxB;AACA;;AACA,eAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;AACH;;;;qCACU;AAAA;;AACP,iBAAKD,gBAAL,CACKzD,OADL,CACa,KAAKprC,WADlB,EAEKiY,SAFL,CAEe,UAAAod,KAAK;AAAA,qBAAI,OAAI,CAACyZ,WAAL,CAAiB/3B,IAAjB,CAAsBse,KAAtB,CAAJ;AAAA,aAFpB;AAGH;;;wCACa;AACV,iBAAKwZ,gBAAL,CAAsBxD,cAAtB,CAAqC,KAAKrrC,WAA1C;AACH;;;;;;AAEL4uC,iBAAW,CAACnuC,IAAZ,GAAmB,SAASsuC,mBAAT,CAA6BpuC,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAIiuC,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyBb,eAAzB,CAApE,CAAP;AAAwH,OAA7K;;AACAa,iBAAW,CAAChuC,IAAZ,GAAmB,gEAAyB;AAAEC,YAAI,EAAE+tC,WAAR;AAAqB9tC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2Dob,eAAO,EAAE;AAAE4yB,qBAAW,EAAE;AAAf;AAApE,OAAzB,CAAnB;;AACAF,iBAAW,CAACntC,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAEZ,cAAI,EAAE;AAAR,SAD+B,EAE/B;AAAEA,cAAI,EAAEktC;AAAR,SAF+B,CAAN;AAAA,OAA7B;;AAIAa,iBAAW,CAAChjC,cAAZ,GAA6B;AACzBkjC,mBAAW,EAAE,CAAC;AAAEjuC,cAAI,EAAE;AAAR,SAAD;AADY,OAA7B;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyB+tC,WAAzB,EAAsC,CAAC;AAC5D/tC,cAAI,EAAE,uDADsD;AAE5Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE;AADX,WAAD;AAFsD,SAAD,CAAtC,EAKrB,YAAY;AAAE,iBAAO,CAAC;AAAEd,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAEktC;AAAR,WAA9B,CAAP;AAAkE,SAL3D,EAK6D;AAAEe,qBAAW,EAAE,CAAC;AAC9FjuC,gBAAI,EAAE;AADwF,WAAD;AAAf,SAL7D;AAOb,OAPF;AASd;;;;;;;;AAOA;;;UACMmuC,mB;AACF,qCAAYhvC,WAAZ,EAAyBguC,SAAzB,EAAoCtb,OAApC;AACA;AACA7L,gBAFA,EAEU;AAAA;;AACN,eAAK7mB,WAAL,GAAmBA,WAAnB;AACA,eAAKguC,SAAL,GAAiBA,SAAjB;AACA,eAAKtb,OAAL,GAAeA,OAAf;AACA,eAAKuc,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,eAAKhtB,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,eAAKitB,gBAAL,GAAwB,CAAC,CAAzB;AACA,eAAKnoB,SAAL,GAAiBF,QAAjB;AACA,eAAKsoB,gBAAL,GAAwB,KAAKnvC,WAAL,CAAiBM,aAAzC;AACA,eAAK8uC,eAAL,GAAuBpB,SAAS,CAACqB,OAAV,GACnB,yCADmB,GAEnB,iCAFJ;AAGH;AACD;;;;;;AAsBA;0CACgB;AACZ,gBAAMC,SAAS,GAAG,KAAKC,OAAL,IAAgB,KAAKC,iBAArB,aACX,KAAKD,OAAL,GAAe,KAAKC,iBADT,UACiC,IADnD;;AAEA,gBAAIF,SAAJ,EAAe;AACX,mBAAKH,gBAAL,CAAsB5hB,KAAtB,CAA4B+hB,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;0CACgB;AACZ,gBAAMG,SAAS,GAAG,KAAKC,OAAL,IAAgB,KAAKF,iBAArB,aACX,KAAKE,OAAL,GAAe,KAAKF,iBADT,UACiC,IADnD;;AAEA,gBAAIC,SAAJ,EAAe;AACX,mBAAKN,gBAAL,CAAsB5hB,KAAtB,CAA4BkiB,SAA5B,GAAwCA,SAAxC;AACH;AACJ;;;4CACiB;AAAA;;AACd,gBAAI,KAAKzB,SAAL,CAAehb,SAAnB,EAA8B;AAC1B;AACA,mBAAK2c,cAAL,GAAsB,KAAKR,gBAAL,CAAsB5hB,KAAtB,CAA4BqG,MAAlD;AACA,mBAAKgc,kBAAL;;AACA,mBAAKld,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,oBAAM9O,MAAM,GAAG,OAAI,CAACE,UAAL,EAAf;;AACA,uEAAUF,MAAV,EAAkB,QAAlB,EACKnf,IADL,CACU,iEAAU,EAAV,CADV,EACyB,iEAAU,OAAI,CAAC2mC,UAAf,CADzB,EAEKh3B,SAFL,CAEe;AAAA,yBAAM,OAAI,CAAC23B,kBAAL,CAAwB,IAAxB,CAAN;AAAA,iBAFf;AAGH,eALD;AAMH;AACJ;;;wCACa;AACV,iBAAKX,UAAL,CAAgBzkB,IAAhB;;AACA,iBAAKykB,UAAL,CAAgBlkB,QAAhB;AACH;AACD;;;;;;;;;;qDAO2B;AACvB,gBAAI,KAAKykB,iBAAT,EAA4B;AACxB;AACH,aAHsB,CAIvB;;;AACA,gBAAIK,aAAa,GAAG,KAAKV,gBAAL,CAAsBW,SAAtB,CAAgC,KAAhC,CAApB;;AACAD,yBAAa,CAACE,IAAd,GAAqB,CAArB,CANuB,CAOvB;AACA;AACA;;AACAF,yBAAa,CAACtiB,KAAd,CAAoByiB,QAApB,GAA+B,UAA/B;AACAH,yBAAa,CAACtiB,KAAd,CAAoB0iB,UAApB,GAAiC,QAAjC;AACAJ,yBAAa,CAACtiB,KAAd,CAAoB2iB,MAApB,GAA6B,MAA7B;AACAL,yBAAa,CAACtiB,KAAd,CAAoB4iB,OAApB,GAA8B,GAA9B;AACAN,yBAAa,CAACtiB,KAAd,CAAoBqG,MAApB,GAA6B,EAA7B;AACAic,yBAAa,CAACtiB,KAAd,CAAoB+hB,SAApB,GAAgC,EAAhC;AACAO,yBAAa,CAACtiB,KAAd,CAAoBkiB,SAApB,GAAgC,EAAhC,CAhBuB,CAiBvB;AACA;AACA;AACA;AACA;;AACAI,yBAAa,CAACtiB,KAAd,CAAoB6iB,QAApB,GAA+B,QAA/B;;AACA,iBAAKjB,gBAAL,CAAsBla,UAAtB,CAAiC1M,WAAjC,CAA6CsnB,aAA7C;;AACA,iBAAKL,iBAAL,GAAyBK,aAAa,CAACQ,YAAvC;;AACA,iBAAKlB,gBAAL,CAAsBla,UAAtB,CAAiCvM,WAAjC,CAA6CmnB,aAA7C,EAzBuB,CA0BvB;;;AACA,iBAAKS,aAAL;;AACA,iBAAKC,aAAL;AACH;;;sCACW;AACR,gBAAI,KAAKvC,SAAL,CAAehb,SAAnB,EAA8B;AAC1B,mBAAK4c,kBAAL;AACH;AACJ;AACD;;;;;;;;+CAKkC;AAAA;;AAAA,gBAAfY,KAAe,uEAAP,KAAO;;AAC9B;AACA,gBAAI,CAAC,KAAKvuB,QAAV,EAAoB;AAChB;AACH;;AACD,iBAAKwuB,wBAAL,GAL8B,CAM9B;AACA;;;AACA,gBAAI,CAAC,KAAKjB,iBAAV,EAA6B;AACzB;AACH;;AACD,gBAAMkB,QAAQ,GAAG,KAAK1wC,WAAL,CAAiBM,aAAlC;AACA,gBAAMF,KAAK,GAAGswC,QAAQ,CAACtwC,KAAvB,CAZ8B,CAa9B;;AACA,gBAAI,CAACowC,KAAD,IAAU,KAAKG,QAAL,KAAkB,KAAKzB,gBAAjC,IAAqD9uC,KAAK,KAAK,KAAKwwC,cAAxE,EAAwF;AACpF;AACH;;AACD,gBAAMC,eAAe,GAAGH,QAAQ,CAACI,WAAjC,CAjB8B,CAkB9B;AACA;AACA;AACA;AACA;;AACAJ,oBAAQ,CAACpoB,SAAT,CAAmBtd,GAAnB,CAAuB,KAAKokC,eAA5B;AACAsB,oBAAQ,CAACI,WAAT,GAAuB,EAAvB,CAxB8B,CAyB9B;AACA;;AACA,gBAAMld,MAAM,GAAG8c,QAAQ,CAACK,YAAT,GAAwB,CAAvC,CA3B8B,CA4B9B;;AACAL,oBAAQ,CAACnjB,KAAT,CAAeqG,MAAf,aAA2BA,MAA3B;AACA8c,oBAAQ,CAACpoB,SAAT,CAAmBrd,MAAnB,CAA0B,KAAKmkC,eAA/B;AACAsB,oBAAQ,CAACI,WAAT,GAAuBD,eAAvB;;AACA,iBAAKne,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,kBAAI,OAAOya,qBAAP,KAAiC,WAArC,EAAkD;AAC9CA,qCAAqB,CAAC;AAAA,yBAAM,OAAI,CAACC,sBAAL,CAA4BP,QAA5B,CAAN;AAAA,iBAAD,CAArB;AACH,eAFD,MAGK;AACDla,0BAAU,CAAC;AAAA,yBAAM,OAAI,CAACya,sBAAL,CAA4BP,QAA5B,CAAN;AAAA,iBAAD,CAAV;AACH;AACJ,aAPD;;AAQA,iBAAKE,cAAL,GAAsBxwC,KAAtB;AACA,iBAAK8uC,gBAAL,GAAwB,KAAKyB,QAA7B;AACH;AACD;;;;;;kCAGQ;AACJ;AACA;AACA,gBAAI,KAAKhB,cAAL,KAAwBtsC,SAA5B,EAAuC;AACnC,mBAAK8rC,gBAAL,CAAsB5hB,KAAtB,CAA4BqG,MAA5B,GAAqC,KAAK+b,cAA1C;AACH;AACJ,W,CACD;AACA;AACA;AACA;;;;8CACoB,CAChB;AACH;AACD;;;;yCACe;AACX,mBAAO,KAAK5oB,SAAL,IAAkBF,QAAzB;AACH;AACD;;;;uCACa;AACT,gBAAMQ,GAAG,GAAG,KAAKC,YAAL,EAAZ;;AACA,mBAAOD,GAAG,CAACG,WAAJ,IAAmBC,MAA1B;AACH;AACD;;;;;;;;iDAKuBipB,Q,EAAU;AAAA,gBACrBQ,cADqB,GACYR,QADZ,CACrBQ,cADqB;AAAA,gBACLC,YADK,GACYT,QADZ,CACLS,YADK;;AAE7B,gBAAMtqB,QAAQ,GAAG,KAAKS,YAAL,EAAjB,CAF6B,CAG7B;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAI,CAAC,KAAK2nB,UAAL,CAAgBmC,SAAjB,IAA8BvqB,QAAQ,CAACwqB,aAAT,KAA2BX,QAA7D,EAAuE;AACnEA,sBAAQ,CAACY,iBAAT,CAA2BJ,cAA3B,EAA2CC,YAA3C;AACH;AACJ;;;8BA3La;AAAE,mBAAO,KAAKR,QAAZ;AAAuB,W;4BAC3BvwC,K,EAAO;AACf,iBAAKuwC,QAAL,GAAgB,mFAAqBvwC,KAArB,CAAhB;;AACA,iBAAKkwC,aAAL;AACH;AACD;;;;8BACc;AAAE,mBAAO,KAAKiB,QAAZ;AAAuB,W;4BAC3BnxC,K,EAAO;AACf,iBAAKmxC,QAAL,GAAgB,mFAAqBnxC,KAArB,CAAhB;;AACA,iBAAKmwC,aAAL;AACH;AACD;;;;8BACc;AAAE,mBAAO,KAAKtuB,QAAZ;AAAuB,W;4BAC3B7hB,K,EAAO;AACfA,iBAAK,GAAG,oFAAsBA,KAAtB,CAAR,CADe,CAEf;AACA;;AACA,gBAAI,KAAK6hB,QAAL,KAAkB7hB,KAAtB,EAA6B;AACzB,eAAC,KAAK6hB,QAAL,GAAgB7hB,KAAjB,IAA0B,KAAKwvC,kBAAL,CAAwB,IAAxB,CAA1B,GAA0D,KAAKrsC,KAAL,EAA1D;AACH;AACJ;;;;;;AAyKLyrC,yBAAmB,CAACvuC,IAApB,GAA2B,SAAS+wC,2BAAT,CAAqC7wC,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIquC,mBAAV,EAA+B,gEAAyB,wDAAzB,CAA/B,EAA4E,gEAAyB,8DAAzB,CAA5E,EAAuH,gEAAyB,oDAAzB,CAAvH,EAAgK,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAhK,CAAP;AAAgN,OAArR;;AACAA,yBAAmB,CAACpuC,IAApB,GAA2B,gEAAyB;AAAEC,YAAI,EAAEmuC,mBAAR;AAA6BluC,iBAAS,EAAE,CAAC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAD,CAAxC;AAAmF0d,iBAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,CAA9F;AAAyIzd,oBAAY,EAAE,SAAS0wC,gCAAT,CAA0CxwC,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACpQ,qEAAkB,OAAlB,EAA2B,SAASywC,4CAAT,GAAwD;AAAE,qBAAOxwC,GAAG,CAACywC,iBAAJ,EAAP;AAAiC,aAAtH;AACH;AAAE,SAF6C;AAE3ChmC,cAAM,EAAE;AAAE4jC,iBAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAX;AAA8CG,iBAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAvD;AAA0F1rC,iBAAO,EAAE,CAAC,qBAAD,EAAwB,SAAxB;AAAnG,SAFmC;AAEsGmY,gBAAQ,EAAE,CAAC,qBAAD;AAFhH,OAAzB,CAA3B;;AAGA6yB,yBAAmB,CAACvtC,cAApB,GAAqC;AAAA,eAAM,CACvC;AAAEZ,cAAI,EAAE;AAAR,SADuC,EAEvC;AAAEA,cAAI,EAAE;AAAR,SAFuC,EAGvC;AAAEA,cAAI,EAAE;AAAR,SAHuC,EAIvC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAJuC,CAAN;AAAA,OAArC;;AAMAstC,yBAAmB,CAACpjC,cAApB,GAAqC;AACjC2jC,eAAO,EAAE,CAAC;AAAE1uC,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CADwB;AAEjCguC,eAAO,EAAE,CAAC;AAAE7uC,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CAFwB;AAGjCsC,eAAO,EAAE,CAAC;AAAEnD,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,qBAAD;AAArB,SAAD,CAHwB;AAIjCiwC,yBAAiB,EAAE,CAAC;AAAE9wC,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAAC,OAAD;AAA5B,SAAD;AAJc,OAArC;AAMA;;AAAc,OAAC,YAAY;AAAE,wEAAyBstC,mBAAzB,EAA8C,CAAC;AACpEnuC,cAAI,EAAE,uDAD8D;AAEpEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,+BADX;AAECwa,oBAAQ,EAAE,qBAFX;AAGCva,gBAAI,EAAE;AACF,uBAAS,uBADP;AAEF;AACA;AACA,sBAAQ;AAJN;AAHP,WAAD;AAF8D,SAAD,CAA9C,EAYrB,YAAY;AAAE,iBAAO,CAAC;AAAEf,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAE;AAAR,WAAzD,EAAkF;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC/HtC,kBAAI,EAAE;AADyH,aAAD,EAE/H;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAF+H;AAA/B,WAAlF,CAAP;AAKF,SAjBS,EAiBP;AAAE6tC,iBAAO,EAAE,CAAC;AACtB1uC,gBAAI,EAAE,mDADgB;AAEtBa,gBAAI,EAAE,CAAC,oBAAD;AAFgB,WAAD,CAAX;AAGVguC,iBAAO,EAAE,CAAC;AACV7uC,gBAAI,EAAE,mDADI;AAEVa,gBAAI,EAAE,CAAC,oBAAD;AAFI,WAAD,CAHC;AAMVsC,iBAAO,EAAE,CAAC;AACVnD,gBAAI,EAAE,mDADI;AAEVa,gBAAI,EAAE,CAAC,qBAAD;AAFI,WAAD,CANC;AAUlB;AACA;AACA;AACA;AACAiwC,2BAAiB,EAAE,CAAC;AACZ9wC,gBAAI,EAAE,0DADM;AAEZa,gBAAI,EAAE,CAAC,OAAD;AAFM,WAAD;AAdD,SAjBO;AAkCb,OAlCF;AAoCd;;;;;;;;;UAOMkwC,e;;;;AAENA,qBAAe,CAACnuB,IAAhB,GAAuB,+DAAwB;AAAE5iB,YAAI,EAAE+wC;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAACluB,IAAhB,GAAuB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASknC,uBAAT,CAAiClxC,CAAjC,EAAoC;AAAE,iBAAO,KAAKA,CAAC,IAAIixC,eAAV,GAAP;AAAsC,SAAvF;AAAyFntB,eAAO,EAAE,CAAC,CAAC,oEAAD,CAAD;AAAlG,OAAxB,CAAvB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BguB,eAA1B,EAA2C;AAAE/tB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC+qB,WAAD,EAAcI,mBAAd,CAAP;AAA4C,WAA1E;AAA4EvqB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,oEAAD,CAAP;AAA0B,WAA7H;AAA+HX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC8qB,WAAD,EAAcI,mBAAd,CAAP;AAA4C;AAAlM,SAA3C,CAAnD;AAAsS,OAArT;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4C,eAAzB,EAA0C,CAAC;AAChE/wC,cAAI,EAAE,sDAD0D;AAEhEa,cAAI,EAAE,CAAC;AACCmiB,wBAAY,EAAE,CAAC+qB,WAAD,EAAcI,mBAAd,CADf;AAECvqB,mBAAO,EAAE,CAAC,oEAAD,CAFV;AAGCX,mBAAO,EAAE,CAAC8qB,WAAD,EAAcI,mBAAd;AAHV,WAAD;AAF0D,SAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,OAPR;AASd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACjbaA,UAAMxpB,GAAG,GAAG,CAAC,WAAD,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,qBAAD,CAAZ;AACA,UAAMG,GAAG,GAAG,CAAC,gBAAD,CAAZ;AACA,UAAMsiB,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,eAAS4J,oCAAT,CAA8C7wC,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,gFAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;AAAE;;AACH,eAAS8wC,2BAAT,CAAqC9wC,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAAS+wC,4CAAT,CAAsD/wC,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzE,gFAA+B,CAA/B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB;;AACA,+DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMgxC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,OAAO,CAAC1nC,QAAR,CAAiBumC,WAA1C;AACH;AAAE;;AACH,eAASoB,0CAAT,CAAoDjxC,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvE,qEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,eAASkxC,oCAAT,CAA8ClxC,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,+DAAc,CAAd,EAAiB,IAAjB;;AACA;AACH;AAAE;;AACH,eAASmxC,6BAAT,CAAuCnxC,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,cAAMoxC,IAAI,GAAG,gEAAb;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,mEAAkB,mBAAlB,EAAuC,SAASC,gEAAT,GAA4E;AAAE,wEAAqBD,IAArB;;AAA4B,gBAAME,OAAO,GAAG,6DAAhB;;AAAwC,mBAAOA,OAAO,CAACC,gBAAR,EAAP;AAAoC,WAA7N;;AACA,mEAAkB,CAAlB,EAAqBR,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,cAAzE,EAAyF,EAAzF;;AACA,mEAAkB,CAAlB,EAAqBE,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,YAAvE,EAAqF,EAArF;;AACA,mEAAkB,CAAlB,EAAqBC,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,MAAjE,EAAyE,EAAzE;;AACA;AACH;;AAAC,YAAIlxC,EAAE,GAAG,CAAT,EAAY;AACV,cAAMwxC,MAAM,GAAG,6DAAf;;AACA,oEAAmB,WAAnB,EAAgCA,MAAM,CAACloC,QAAP,CAAgBmoC,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAAP,EAA1D,EAAuF,sBAAvF,EAA+GF,MAAM,CAACloC,QAAP,CAAgBmoC,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAAP,EAAzI,EAAsK,YAAtK,EAAoLF,MAAM,CAACtpB,KAAP,IAAgB,QAApM,EAA8M,UAA9M,EAA0NspB,MAAM,CAACtpB,KAAP,IAAgB,MAA1O;;AACA,mEAAkB,2BAAlB,EAA+CspB,MAAM,CAACG,UAAP,IAAqB,SAApE,EAA+E,IAA/E,EAAqFH,MAAM,CAAChZ,QAA5F,EAAsG,UAAtG,EAAkHgZ,MAAM,CAACI,SAAP,EAAlH;;AACA,oEAAmB,KAAnB,EAA0BJ,MAAM,CAACloC,QAAP,CAAgByC,EAA1C,EAA8C,WAA9C,EAA2DylC,MAAM,CAACloC,QAAP,CAAgByC,EAA3E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAACylC,MAAM,CAACK,kBAAR,IAA8BL,MAAM,CAACloC,QAAP,CAAgBiX,QAA9C,IAA0D,CAACixB,MAAM,CAACloC,QAAP,CAAgBxG,QAArG;AACH;AAAE;;AACH,eAASgvC,4BAAT,CAAsC9xC,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAAS+xC,4BAAT,CAAsC/xC,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMgyC,MAAM,GAAG,6DAAf;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAAC9pB,KAAP,IAAgB,QAAjD,EAA2D,UAA3D,EAAuE8pB,MAAM,CAAC9pB,KAAP,IAAgB,MAAvF;AACH;AAAE;;AACH,eAAS+pB,4BAAT,CAAsCjyC,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMkyC,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACC,wBAAhD;AACH;AAAE;;AACH,eAASC,kCAAT,CAA4CpyC,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMqyC,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,mEAAkB,IAAlB,EAAwBA,OAAO,CAACC,YAAhC;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBD,OAAO,CAACE,SAAjC;AACH;AAAE;;AACH,eAASC,4BAAT,CAAsCxyC,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAkB,CAAlB,EAAqBoyC,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,EAAtE;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIpyC,EAAE,GAAG,CAAT,EAAY;AACV,cAAMyyC,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACN,wBAAhD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BM,MAAM,CAACF,SAAjC;AACH;AAAE;;AACH,UAAMrL,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAN,EAA+B,CAAC,CAAC,iBAAD,CAAD,CAA/B,EAAsD,CAAC,CAAC,WAAD,CAAD,CAAtD,EAAuE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAvE,EAAgG,CAAC,CAAC,WAAD,CAAD,CAAhG,EAAiH,CAAC,CAAC,UAAD,EAAa,CAAb,EAAgB,OAAhB,EAAyB,KAAzB,CAAD,CAAjH,EAAoJ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAAD,CAApJ,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,iBAArB,EAAwC,WAAxC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,6BAAjF,EAAgH,uBAAhH,CAAZ;AACA,UAAIuL,YAAY,GAAG,CAAnB;AACA;;;;;;AAKA,UAAMC,SAAS,GAAG,IAAI,4DAAJ,CAAmB,UAAnB,CAAlB;AACA;;UACMC,Q,GACF,oBAAc;AAAA;;AACV,aAAK7mC,EAAL,uBAAuB2mC,YAAY,EAAnC;AACH,O;;AAELE,cAAQ,CAACpzC,IAAT,GAAgB,SAASqzC,gBAAT,CAA0BnzC,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIkzC,QAAV,GAAP;AAA+B,OAA9E;;AACAA,cAAQ,CAACjzC,IAAT,GAAgB,gEAAyB;AAAEC,YAAI,EAAEgzC,QAAR;AAAkB/yC,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAA7B;AAA8C0d,iBAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,WAArB,CAAzD;AAA4F3Y,gBAAQ,EAAE,CAAtG;AAAyG9E,oBAAY,EAAE,SAASgzC,qBAAT,CAA+B9yC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9M,sEAAmB,IAAnB,EAAyBC,GAAG,CAAC8L,EAA7B;AACH;AAAE,SAFkC;AAEhCrB,cAAM,EAAE;AAAEqB,YAAE,EAAE;AAAN,SAFwB;AAEVxL,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAEi0C,SAAX;AAAsBh0C,qBAAW,EAAEi0C;AAAnC,SAAD,CAA1B,CAAD;AAFA,OAAzB,CAAhB;AAGAA,cAAQ,CAACjoC,cAAT,GAA0B;AACtBoB,UAAE,EAAE,CAAC;AAAEnM,cAAI,EAAE;AAAR,SAAD;AADkB,OAA1B;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBgzC,QAAzB,EAAmC,CAAC;AACzDhzC,cAAI,EAAE,uDADmD;AAEzDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,WADX;AAECC,gBAAI,EAAE;AACF,uBAAS,WADP;AAEF,sBAAQ,OAFN;AAGF,2BAAa;AAHX,aAFP;AAOCC,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAEi0C,SAAX;AAAsBh0C,yBAAW,EAAEi0C;AAAnC,aAAD;AAPZ,WAAD;AAFmD,SAAD,CAAnC,EAWrB,YAAY;AAAE,iBAAO,EAAP;AAAY,SAXL,EAWO;AAAE7mC,YAAE,EAAE,CAAC;AAC/BnM,gBAAI,EAAE;AADyB,WAAD;AAAN,SAXP;AAab,OAbF;AAed;;;;;;;;AAOA;;;;;;AAIA,UAAMmzC,sBAAsB,GAAG;AAC3B;AACAC,0BAAkB,EAAE,oEAAQ,oBAAR,EAA8B,CAC9C;AACA,0EAAM,OAAN,EAAe,kEAAM;AAAEjf,iBAAO,EAAE,CAAX;AAAcV,mBAAS,EAAE;AAAzB,SAAN,CAAf,CAF8C,EAG9C,uEAAW,eAAX,EAA4B,CACxB,kEAAM;AAAEU,iBAAO,EAAE,CAAX;AAAcV,mBAAS,EAAE;AAAzB,SAAN,CADwB,EAExB,oEAAQ,wCAAR,CAFwB,CAA5B,CAH8C,CAA9B;AAFO,OAA/B;AAYA;;;;;;;;AAOA;;UACM4f,mB;;;;AAENA,yBAAmB,CAACzzC,IAApB,GAA2B,SAAS0zC,2BAAT,CAAqCxzC,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIuzC,mBAAV,GAAP;AAA0C,OAA/G;;AACAA,yBAAmB,CAACtzC,IAApB,GAA2B,gEAAyB;AAAEC,YAAI,EAAEqzC;AAAR,OAAzB,CAA3B;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,mBAAzB,EAA8C,CAAC;AACpErzC,cAAI,EAAE;AAD8D,SAAD,CAA9C,EAErB,IAFqB,EAEf,IAFe;AAEP,OAFR;AAId;;;;;;;;AAOA;;;AACA,eAASuzC,uCAAT,GAAmD;AAC/C,eAAOrvC,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;;;AACA,eAASsvC,kCAAT,CAA4CzL,KAA5C,EAAmD;AAC/C,eAAO7jC,KAAK,oDAA4C6jC,KAA5C,UAAZ;AACH;AACD;;;AACA,eAAS0L,kCAAT,GAA8C;AAC1C,eAAOvvC,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;;;;;;;;;AAOA,UAAIwvC,cAAc,GAAG,CAArB;AACA;;;;;;;;;AAQA,UAAMC,SAAS,GAAG,IAAI,4DAAJ,CAAmB,SAAnB,CAAlB;AACA;;;UACMC,O,GACF,mBAAc;AAAA;;AACV;AACA,aAAK7L,KAAL,GAAa,OAAb;AACA;;AACA,aAAK57B,EAAL,sBAAsBunC,cAAc,EAApC;AACH,O;;AAELE,aAAO,CAACh0C,IAAR,GAAe,SAASi0C,eAAT,CAAyB/zC,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAI8zC,OAAV,GAAP;AAA8B,OAA3E;;AACAA,aAAO,CAAC7zC,IAAR,GAAe,gEAAyB;AAAEC,YAAI,EAAE4zC,OAAR;AAAiB3zC,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4C0d,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAAvD;AAAwE3Y,gBAAQ,EAAE,CAAlF;AAAqF9E,oBAAY,EAAE,SAAS4zC,oBAAT,CAA8B1zC,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACxL,sEAAmB,IAAnB,EAAyBC,GAAG,CAAC8L,EAA7B,EAAiC,OAAjC,EAA0C,IAA1C;;AACA,sEAAmB,yBAAnB,EAA8C9L,GAAG,CAAC0nC,KAAJ,KAAc,KAA5D;AACH;AAAE,SAHiC;AAG/Bj9B,cAAM,EAAE;AAAEi9B,eAAK,EAAE,OAAT;AAAkB57B,YAAE,EAAE;AAAtB,SAHuB;AAGOxL,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAE60C,SAAX;AAAsB50C,qBAAW,EAAE60C;AAAnC,SAAD,CAA1B,CAAD;AAHjB,OAAzB,CAAf;AAIAA,aAAO,CAAC7oC,cAAR,GAAyB;AACrBg9B,aAAK,EAAE,CAAC;AAAE/nC,cAAI,EAAE;AAAR,SAAD,CADc;AAErBmM,UAAE,EAAE,CAAC;AAAEnM,cAAI,EAAE;AAAR,SAAD;AAFiB,OAAzB;AAIA;;AAAc,OAAC,YAAY;AAAE,wEAAyB4zC,OAAzB,EAAkC,CAAC;AACxD5zC,cAAI,EAAE,uDADkD;AAExDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,UADX;AAECC,gBAAI,EAAE;AACF,uBAAS,UADP;AAEF,iDAAmC,iBAFjC;AAGF,2BAAa,IAHX;AAIF;AACA,8BAAgB;AALd,aAFP;AASCC,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAE60C,SAAX;AAAsB50C,yBAAW,EAAE60C;AAAnC,aAAD;AATZ,WAAD;AAFkD,SAAD,CAAlC,EAarB,YAAY;AAAE,iBAAO,EAAP;AAAY,SAbL,EAaO;AAAE7L,eAAK,EAAE,CAAC;AAClC/nC,gBAAI,EAAE;AAD4B,WAAD,CAAT;AAExBmM,YAAE,EAAE,CAAC;AACLnM,gBAAI,EAAE;AADD,WAAD;AAFoB,SAbP;AAiBb,OAjBF;AAmBd;;;;;;;;AAOA;;;UACM+zC,Q;;;;AAENA,cAAQ,CAACn0C,IAAT,GAAgB,SAASo0C,gBAAT,CAA0Bl0C,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIi0C,QAAV,GAAP;AAA+B,OAA9E;;AACAA,cAAQ,CAACh0C,IAAT,GAAgB,gEAAyB;AAAEC,YAAI,EAAE+zC,QAAR;AAAkB9zC,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD;AAA7B,OAAzB,CAAhB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyB8zC,QAAzB,EAAmC,CAAC;AACzD/zC,cAAI,EAAE,uDADmD;AAEzDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE;AADX,WAAD;AAFmD,SAAD,CAAnC,EAKrB,IALqB,EAKf,IALe;AAKP,OALR;AAOd;;;;;;;;AAOA;;;;;;;;UAMMmzC,c;;;;AAENA,oBAAc,CAACr0C,IAAf,GAAsB,SAASs0C,sBAAT,CAAgCp0C,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIm0C,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAACl0C,IAAf,GAAsB,gEAAyB;AAAEC,YAAI,EAAEi0C,cAAR;AAAwBh0C,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD;AAAnC,OAAzB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBg0C,cAAzB,EAAyC,CAAC;AAC/Dj0C,cAAI,EAAE,uDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE;AADX,WAAD;AAFyD,SAAD,CAAzC,EAKrB,IALqB,EAKf,IALe;AAKP,OALR;AAOd;;;;;;;;AAOA;;;;;;;AAKA,UAAMqzC,UAAU,GAAG,IAAI,4DAAJ,CAAmB,WAAnB,CAAnB;AACA;;UACMC,S;;;;AAENA,eAAS,CAACx0C,IAAV,GAAiB,SAASy0C,iBAAT,CAA2Bv0C,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIs0C,SAAV,GAAP;AAAgC,OAAjF;;AACAA,eAAS,CAACr0C,IAAV,GAAiB,gEAAyB;AAAEC,YAAI,EAAEo0C,SAAR;AAAmBn0C,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAEq1C,UAAX;AAAuBp1C,qBAAW,EAAEq1C;AAApC,SAAD,CAA1B,CAAD;AAAjE,OAAzB,CAAjB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,SAAzB,EAAoC,CAAC;AAC1Dp0C,cAAI,EAAE,uDADoD;AAE1Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,aADX;AAECE,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAEq1C,UAAX;AAAuBp1C,yBAAW,EAAEq1C;AAApC,aAAD;AAFZ,WAAD;AAFoD,SAAD,CAApC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAQd;;;;;;;;AAOA;;;;;;;AAKA,UAAME,UAAU,GAAG,IAAI,4DAAJ,CAAmB,WAAnB,CAAnB;AACA;;UACMC,S;;;;AAENA,eAAS,CAAC30C,IAAV,GAAiB,SAAS40C,iBAAT,CAA2B10C,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIy0C,SAAV,GAAP;AAAgC,OAAjF;;AACAA,eAAS,CAACx0C,IAAV,GAAiB,gEAAyB;AAAEC,YAAI,EAAEu0C,SAAR;AAAmBt0C,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDU,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAEw1C,UAAX;AAAuBv1C,qBAAW,EAAEw1C;AAApC,SAAD,CAA1B,CAAD;AAAjE,OAAzB,CAAjB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,SAAzB,EAAoC,CAAC;AAC1Dv0C,cAAI,EAAE,uDADoD;AAE1Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,aADX;AAECE,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAEw1C,UAAX;AAAuBv1C,yBAAW,EAAEw1C;AAApC,aAAD;AAFZ,WAAD;AAFoD,SAAD,CAApC,EAMrB,IANqB,EAMf,IANe;AAMP,OANR;AAQd;;;;;;;;;AAOA,UAAIE,cAAc,GAAG,CAArB;AACA,UAAMC,kBAAkB,GAAG,IAA3B;AACA,UAAMC,iBAAiB,GAAG,CAA1B;AACA;;;;;UAIMC,gB,GACF,0BAAYz1C,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;AAEL;;;;;;AAIA,UAAM01C,sBAAsB,GAAG,0EAAWD,gBAAX,EAA6B,SAA7B,CAA/B;AACA;;;;;;AAIA,UAAME,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AACA;;;;;;AAKA,UAAMC,cAAc,GAAG,IAAI,4DAAJ,CAAmB,cAAnB,CAAvB;AACA;;UACMC,Y;;;;;AACF,8BAAY71C,WAAZ,EAAyB26B,kBAAzB,EAA6Cmb,YAA7C,EAA2DvI,IAA3D,EAAiEwI,SAAjE,EAA4E/H,SAA5E,EAAuFtb,OAAvF,EAAgG8E,cAAhG,EAAgH;AAAA;;AAAA;;AAC5G,wCAAMx3B,WAAN;AACA,kBAAKA,WAAL,GAAmBA,WAAnB;AACA,kBAAK26B,kBAAL,GAA0BA,kBAA1B;AACA,kBAAK4S,IAAL,GAAYA,IAAZ;AACA,kBAAKwI,SAAL,GAAiBA,SAAjB;AACA,kBAAK/H,SAAL,GAAiBA,SAAjB;AACA,kBAAKtb,OAAL,GAAeA,OAAf;AACA;;;;;AAIA,kBAAKsjB,uCAAL,GAA+C,KAA/C;AACA;;AACA,kBAAKC,oCAAL,GAA4C,KAA5C;AACA,kBAAKhH,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;AACA,kBAAKiH,kBAAL,GAA0B,KAA1B;AACA;;AACA,kBAAK9C,wBAAL,GAAgC,EAAhC;AACA,kBAAK+C,UAAL,GAAkB,EAAlB,CApB4G,CAqB5G;;AACA,kBAAK5C,YAAL,sBAAgC+B,cAAc,EAA9C,EAtB4G,CAuB5G;;AACA,kBAAK7b,QAAL,kCAAwC6b,cAAc,EAAtD;AACA,kBAAKc,aAAL,GAAqBN,YAAY,GAAGA,YAAH,GAAkB,EAAnD;AACA,kBAAKO,UAAL,GAAkB,QAAKC,0BAAL,EAAlB;AACA,kBAAKC,kBAAL,GAA0B/e,cAAc,KAAK,gBAA7C,CA3B4G,CA4B5G;;AACA,kBAAKob,UAAL,GAAmBmD,SAAS,IAAIA,SAAS,CAACnD,UAAxB,GAAsCmD,SAAS,CAACnD,UAAhD,GAA6D,QAA/E;AACA,kBAAK4D,mBAAL,GAA4BT,SAAS,IAAIA,SAAS,CAACjD,kBAAV,IAAgC,IAA9C,GACvBiD,SAAS,CAACjD,kBADa,GACQ,KADnC;AA9B4G;AAgC/G;AACD;;;;;;AAcA;+CACqB;AACjB,mBAAO,KAAKuD,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKH,kBAA7C;AACH;AACD;;;;2CACiB;AAAE,mBAAO,KAAKG,UAAL,KAAoB,OAA3B;AAAqC;AACxD;;;;;AA+BA;;;uCAGa;AACT,mBAAO,KAAKI,iBAAL,KAA2B,KAAKhd,QAAhC,GAA2C,IAAlD;AACH;AACD;;;;;;;sDAI4B;AACxB,mBAAO,KAAKid,uBAAL,IAAgC,KAAK12C,WAA5C;AACH;;;+CACoB;AAAA;;AACjB,iBAAK22C,qBAAL;;AACA,gBAAMrzC,OAAO,GAAG,KAAKiH,QAArB;;AACA,gBAAIjH,OAAO,CAACszC,WAAZ,EAAyB;AACrB,mBAAK52C,WAAL,CAAiBM,aAAjB,CAA+BgoB,SAA/B,CAAyCtd,GAAzC,+BAAoE1H,OAAO,CAACszC,WAA5E;AACH,aALgB,CAMjB;;;AACAtzC,mBAAO,CAACwmB,YAAR,CAAqBxhB,IAArB,CAA0B,iEAAU,IAAV,CAA1B,EAA2C2P,SAA3C,CAAqD,YAAM;AACvD,qBAAI,CAAC4+B,qBAAL;;AACA,qBAAI,CAACC,mBAAL;;AACA,qBAAI,CAACnc,kBAAL,CAAwBM,YAAxB;AACH,aAJD,EAPiB,CAYjB;;AACA,gBAAI33B,OAAO,CAAC+mB,SAAR,IAAqB/mB,OAAO,CAAC+mB,SAAR,CAAkB7lB,YAA3C,EAAyD;AACrDlB,qBAAO,CAAC+mB,SAAR,CAAkB7lB,YAAlB,CACK8D,IADL,CACU,iEAAU,KAAK2mC,UAAf,CADV,EAEKh3B,SAFL,CAEe;AAAA,uBAAM,OAAI,CAAC0iB,kBAAL,CAAwBM,YAAxB,EAAN;AAAA,eAFf;AAGH,aAjBgB,CAkBjB;AACA;AACA;;;AACA,iBAAKvI,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,qBAAI,CAAC7D,OAAL,CAAaqkB,QAAb,CAAsBzuC,IAAtB,CAA2B,iEAAU,OAAI,CAAC2mC,UAAf,CAA3B,EAAuDh3B,SAAvD,CAAiE,YAAM;AACnE,oBAAI,OAAI,CAACg+B,oCAAT,EAA+C;AAC3C,yBAAI,CAACzD,gBAAL;AACH;AACJ,eAJD;AAKH,aAND,EArBiB,CA4BjB;;;AACA,+DAAM,KAAKwE,eAAL,CAAqBjkC,OAA3B,EAAoC,KAAKkkC,eAAL,CAAqBlkC,OAAzD,EAAkEkF,SAAlE,CAA4E,YAAM;AAC9E,qBAAI,CAACg+B,oCAAL,GAA4C,IAA5C;;AACA,qBAAI,CAACtb,kBAAL,CAAwBM,YAAxB;AACH,aAHD,EA7BiB,CAiCjB;;AACA,iBAAKic,aAAL,CAAmBnkC,OAAnB,CAA2BzK,IAA3B,CAAgC,iEAAU,IAAV,CAAhC,EAAiD2P,SAAjD,CAA2D,YAAM;AAC7D,qBAAI,CAACk/B,aAAL;;AACA,qBAAI,CAACxc,kBAAL,CAAwBM,YAAxB;AACH,aAHD,EAlCiB,CAsCjB;;;AACA,iBAAKmc,cAAL,CAAoBrkC,OAApB,CAA4BzK,IAA5B,CAAiC,iEAAU,IAAV,CAAjC,EAAkD2P,SAAlD,CAA4D,YAAM;AAC9D,qBAAI,CAAC6+B,mBAAL;;AACA,qBAAI,CAACnc,kBAAL,CAAwBM,YAAxB;AACH,aAHD;;AAIA,gBAAI,KAAKsS,IAAT,EAAe;AACX,mBAAKA,IAAL,CAAUr6B,MAAV,CAAiB5K,IAAjB,CAAsB,iEAAU,KAAK2mC,UAAf,CAAtB,EAAkDh3B,SAAlD,CAA4D,YAAM;AAC9D,oBAAI,OAAO+4B,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,yBAAI,CAACte,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjCya,yCAAqB,CAAC;AAAA,6BAAM,OAAI,CAACwB,gBAAL,EAAN;AAAA,qBAAD,CAArB;AACH,mBAFD;AAGH,iBAJD,MAKK;AACD,yBAAI,CAACA,gBAAL;AACH;AACJ,eATD;AAUH;AACJ;;;kDACuB;AACpB,iBAAKmE,qBAAL;;AACA,gBAAI,KAAKX,uCAAT,EAAkD;AAC9C,mBAAKxD,gBAAL;AACH;AACJ;;;4CACiB;AACd;AACA,iBAAKY,wBAAL,GAAgC,OAAhC;;AACA,iBAAKzY,kBAAL,CAAwB0c,aAAxB;AACH;;;wCACa;AACV,iBAAKpI,UAAL,CAAgBzkB,IAAhB;;AACA,iBAAKykB,UAAL,CAAgBlkB,QAAhB;AACH;AACD;;;;yCACeusB,I,EAAM;AACjB,gBAAMjtB,SAAS,GAAG,KAAK9f,QAAL,GAAgB,KAAKA,QAAL,CAAc8f,SAA9B,GAA0C,IAA5D;AACA,mBAAOA,SAAS,IAAIA,SAAS,CAACitB,IAAD,CAA7B;AACH;;;4CACiB;AACd,mBAAO,CAAC,EAAE,KAAK/sC,QAAL,IAAiB,KAAKA,QAAL,CAAcumC,WAA/B,IAA8C,KAAKyG,iBAArD,CAAR;AACH;;;sCACW;AACR,mBAAO,CAAC,EAAE,KAAKC,oBAAL,IAA6B,KAAKC,iBAApC,CAAR;AACH;;;8CACmB;AAChB,mBAAO,KAAKC,cAAL,OACD,KAAKntC,QAAL,IAAiB,KAAKA,QAAL,CAAcotC,gBAAhC,IAAqD,KAAKhF,kBAAL,EADnD,CAAP;AAEH;;;oDACyB;AACtB;AACA,mBAAO,KAAKC,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKC,SAAL,EAAjC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAK+E,iBAAL,EADzB;AAEH;;;8CACmB;AAChB;AACA,mBAAO,KAAK/E,SAAL,MAAoB,KAAKD,UAAL,KAAoB,QAApB,IAAgC,KAAKiF,eAAL,EAA3D;AACH;AACD;;;;kDACwB;AACpB,mBAAQ,KAAKT,cAAL,IAAuB,KAAKA,cAAL,CAAoB1wC,MAApB,GAA6B,CAApD,IACJ,KAAK6D,QAAL,CAAcsf,UADX,GACyB,OADzB,GACmC,MAD1C;AAEH;AACD;;;;iDACuB;AAAA;;AACnB,gBAAI,KAAK4sB,iBAAL,MAA4B,KAAKiB,cAAL,EAAhC,EAAuD;AACnD;AACA;AACA,kBAAI,KAAKnB,kBAAL,IAA2B,KAAKuB,MAApC,EAA4C;AACxC,qBAAK5B,kBAAL,GAA0B,IAA1B;AACA,uEAAU,KAAK4B,MAAL,CAAYx3C,aAAtB,EAAqC,eAArC,EAAsDgI,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,EAAoE2P,SAApE,CAA8E,YAAM;AAChF,yBAAI,CAACi+B,kBAAL,GAA0B,KAA1B;AACH,iBAFD;AAGH;;AACD,mBAAKG,UAAL,GAAkB,QAAlB;;AACA,mBAAK1b,kBAAL,CAAwBM,YAAxB;AACH;AACJ;AACD;;;;;;;kDAIwB;AACpB,gBAAI,KAAK1wB,QAAL,CAAcumC,WAAd,IAA6B,KAAKyG,iBAAlC,KACC,OAAOzyC,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,oBAAMsvC,uCAAuC,EAA7C;AACH;AACJ;AACD;;;;0CACgB;AACZ,iBAAK2D,cAAL;;AACA,iBAAKjB,mBAAL;AACH;AACD;;;;;;;2CAIiB;AAAA;;AACb,gBAAI,KAAKI,aAAL,KAAuB,OAAOpyC,SAAP,KAAqB,WAArB,IAAoCA,SAA3D,CAAJ,EAA2E;AACvE,kBAAIkzC,SAAJ;AACA,kBAAIC,OAAJ;;AACA,mBAAKf,aAAL,CAAmBtuC,OAAnB,CAA2B,UAACsvC,IAAD,EAAU;AACjC,oBAAIA,IAAI,CAACtP,KAAL,KAAe,OAAnB,EAA4B;AACxB,sBAAIoP,SAAS,IAAI,OAAI,CAACxE,SAAtB,EAAiC;AAC7B,0BAAMa,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACD2D,2BAAS,GAAGE,IAAZ;AACH,iBALD,MAMK,IAAIA,IAAI,CAACtP,KAAL,KAAe,KAAnB,EAA0B;AAC3B,sBAAIqP,OAAJ,EAAa;AACT,0BAAM5D,kCAAkC,CAAC,KAAD,CAAxC;AACH;;AACD4D,yBAAO,GAAGC,IAAV;AACH;AACJ,eAbD;AAcH;AACJ;AACD;;;;uDAC6B;AACzB,mBAAQ,KAAKnC,SAAL,IAAkB,KAAKA,SAAL,CAAeM,UAAlC,IAAiD,KAAKD,aAAL,SAAjD,IAA6E,MAApF;AACH;AACD;;;;;;;gDAIsB;AAClB,gBAAI,KAAK7rC,QAAT,EAAmB;AACf,kBAAI8E,GAAG,GAAG,EAAV,CADe,CAEf;;AACA,kBAAI,KAAK9E,QAAL,CAAc4tC,mBAAd,IACA,OAAO,KAAK5tC,QAAL,CAAc4tC,mBAArB,KAA6C,QADjD,EAC2D;AACvD9oC,mBAAG,CAACpF,IAAJ,OAAAoF,GAAG,qBAAS,KAAK9E,QAAL,CAAc4tC,mBAAd,CAAkC/qC,KAAlC,CAAwC,GAAxC,CAAT,EAAH;AACH;;AACD,kBAAI,KAAKgrC,qBAAL,OAAiC,MAArC,EAA6C;AACzC,oBAAMJ,SAAS,GAAG,KAAKd,aAAL,GACd,KAAKA,aAAL,CAAmBmB,IAAnB,CAAwB,UAAAH,IAAI;AAAA,yBAAIA,IAAI,CAACtP,KAAL,KAAe,OAAnB;AAAA,iBAA5B,CADc,GAC4C,IAD9D;AAEA,oBAAMqP,OAAO,GAAG,KAAKf,aAAL,GACZ,KAAKA,aAAL,CAAmBmB,IAAnB,CAAwB,UAAAH,IAAI;AAAA,yBAAIA,IAAI,CAACtP,KAAL,KAAe,KAAnB;AAAA,iBAA5B,CADY,GAC4C,IAD5D;;AAEA,oBAAIoP,SAAJ,EAAe;AACX3oC,qBAAG,CAACpF,IAAJ,CAAS+tC,SAAS,CAAChrC,EAAnB;AACH,iBAFD,MAGK,IAAI,KAAKmpC,UAAT,EAAqB;AACtB9mC,qBAAG,CAACpF,IAAJ,CAAS,KAAKspC,YAAd;AACH;;AACD,oBAAI0E,OAAJ,EAAa;AACT5oC,qBAAG,CAACpF,IAAJ,CAASguC,OAAO,CAACjrC,EAAjB;AACH;AACJ,eAdD,MAeK,IAAI,KAAKoqC,cAAT,EAAyB;AAC1B/nC,mBAAG,CAACpF,IAAJ,OAAAoF,GAAG,qBAAS,KAAK+nC,cAAL,CAAoBhvC,GAApB,CAAwB,UAAAkwC,KAAK;AAAA,yBAAIA,KAAK,CAACtrC,EAAV;AAAA,iBAA7B,CAAT,EAAH;AACH;;AACD,mBAAKzC,QAAL,CAAcguC,iBAAd,CAAgClpC,GAAhC;AACH;AACJ;AACD;;;;kDACwB;AACpB,gBAAI,CAAC,KAAK9E,QAAN,KAAmB,OAAOzF,SAAP,KAAqB,WAArB,IAAoCA,SAAvD,CAAJ,EAAuE;AACnE,oBAAMwvC,kCAAkC,EAAxC;AACH;AACJ;AACD;;;;;;;6CAImB;AACf,gBAAMkE,OAAO,GAAG,KAAKV,MAAL,GAAc,KAAKA,MAAL,CAAYx3C,aAA1B,GAA0C,IAA1D;;AACA,gBAAI,KAAKsyC,UAAL,KAAoB,SAApB,IAAiC,CAAC4F,OAAlC,IAA6C,CAACA,OAAO,CAACC,QAAR,CAAiB/xC,MAA/D,IACA,CAAC8xC,OAAO,CAAC5c,WAAR,CAAoBC,IAApB,EADL,EACiC;AAC7B;AACH;;AACD,gBAAI,CAAC,KAAKmS,SAAL,CAAehb,SAApB,EAA+B;AAC3B;AACA;AACH,aATc,CAUf;AACA;;;AACA,gBAAI,CAAC,KAAK0lB,gBAAL,EAAL,EAA8B;AAC1B,mBAAK1C,uCAAL,GAA+C,IAA/C;AACA;AACH;;AACD,gBAAI2C,UAAU,GAAG,CAAjB;AACA,gBAAIC,QAAQ,GAAG,CAAf;AACA,gBAAMt9B,SAAS,GAAG,KAAKo7B,uBAAL,CAA6Bp2C,aAA/C;AACA,gBAAMu4C,QAAQ,GAAGv9B,SAAS,CAACw9B,gBAAV,CAA2B,+BAA3B,CAAjB;AACA,gBAAMC,MAAM,GAAGz9B,SAAS,CAACw9B,gBAAV,CAA2B,6BAA3B,CAAf;;AACA,gBAAI,KAAKhB,MAAL,IAAe,KAAKA,MAAL,CAAYx3C,aAAZ,CAA0Bm4C,QAA1B,CAAmC/xC,MAAtD,EAA8D;AAC1D,kBAAMysB,aAAa,GAAG7X,SAAS,CAAC+X,qBAAV,EAAtB,CAD0D,CAE1D;AACA;AACA;AACA;AACA;AACA;;AACA,kBAAIF,aAAa,CAACO,KAAd,KAAwB,CAAxB,IAA6BP,aAAa,CAACS,MAAd,KAAyB,CAA1D,EAA6D;AACzD,qBAAKqiB,oCAAL,GAA4C,IAA5C;AACA,qBAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;;AACD,kBAAMgD,cAAc,GAAG,KAAKC,YAAL,CAAkB9lB,aAAlB,CAAvB;;AACA,kBAAM+lB,aAAa,GAAGV,OAAO,CAACC,QAA9B;;AACA,kBAAMU,UAAU,GAAG,KAAKF,YAAL,CAAkBC,aAAa,CAAC,CAAD,CAAb,CAAiB7lB,qBAAjB,EAAlB,CAAnB;;AACA,kBAAI+lB,UAAU,GAAG,CAAjB;;AACA,mBAAK,IAAIlvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgvC,aAAa,CAACxyC,MAAlC,EAA0CwD,CAAC,EAA3C,EAA+C;AAC3CkvC,0BAAU,IAAIF,aAAa,CAAChvC,CAAD,CAAb,CAAiBmvC,WAA/B;AACH;;AACDV,wBAAU,GAAGlqB,IAAI,CAACsI,GAAL,CAASoiB,UAAU,GAAGH,cAAtB,IAAwCxD,iBAArD;AACAoD,sBAAQ,GAAGQ,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAG7D,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,iBAAK,IAAItrC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG2uC,QAAQ,CAACnyC,MAA7B,EAAqCwD,GAAC,EAAtC,EAA0C;AACtC2uC,sBAAQ,CAAC3uC,GAAD,CAAR,CAAYqjB,KAAZ,CAAkBmG,KAAlB,aAA6BilB,UAA7B;AACH;;AACD,iBAAK,IAAIzuC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG6uC,MAAM,CAACryC,MAA3B,EAAmCwD,GAAC,EAApC,EAAwC;AACpC6uC,oBAAM,CAAC7uC,GAAD,CAAN,CAAUqjB,KAAV,CAAgBmG,KAAhB,aAA2BklB,QAA3B;AACH;;AACD,iBAAK3C,oCAAL,GACI,KAAKD,uCAAL,GAA+C,KADnD;AAEH;AACD;;;;uCACanf,I,EAAM;AACf,mBAAQ,KAAK0W,IAAL,IAAa,KAAKA,IAAL,CAAUntC,KAAV,KAAoB,KAAlC,GAA2Cy2B,IAAI,CAACG,KAAhD,GAAwDH,IAAI,CAACpD,IAApE;AACH;AACD;;;;6CACmB;AACf,gBAAMrC,OAAO,GAAG,KAAKpxB,WAAL,CAAiBM,aAAjC;;AACA,gBAAI8wB,OAAO,CAACkoB,WAAZ,EAAyB;AACrB,kBAAMC,QAAQ,GAAGnoB,OAAO,CAACkoB,WAAR,EAAjB,CADqB,CAErB;AACA;;AACA,qBAAOC,QAAQ,IAAIA,QAAQ,KAAKnoB,OAAhC;AACH,aAPc,CAQf;AACA;;;AACA,mBAAOvK,QAAQ,CAACumB,eAAT,CAAyB5yB,QAAzB,CAAkC4W,OAAlC,CAAP;AACH;;;8BA7UgB;AAAE,mBAAO,KAAKooB,WAAZ;AAA0B,W;4BAC9Bp5C,K,EAAO;AAClB,gBAAMq5C,QAAQ,GAAG,KAAKD,WAAtB;AACA,iBAAKA,WAAL,GAAmBp5C,KAAK,IAAK,KAAK21C,SAAL,IAAkB,KAAKA,SAAL,CAAenD,UAA3C,IAA0D,QAA7E;;AACA,gBAAI,KAAK4G,WAAL,KAAqB,SAArB,IAAkCC,QAAQ,KAAKr5C,KAAnD,EAA0D;AACtD,mBAAK61C,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;;;;8BACyB;AAAE,mBAAO,KAAKO,mBAAZ;AAAkC,W;4BACtCp2C,K,EAAO;AAC1B,iBAAKo2C,mBAAL,GAA2B,oFAAsBp2C,KAAtB,CAA3B;AACH;;;8BAQe;AAAE,mBAAO,KAAK+1C,UAAZ;AAAyB,W;4BAC7B/1C,K,EAAO;AACjB,iBAAK+1C,UAAL,GAAkB/1C,KAAlB;;AACA,iBAAK+2C,aAAL;AACH;AACD;;;;;;;;;;;8BAQiB;AACb,mBAAO,KAAKvE,UAAL,KAAoB,QAApB,IAAgC,KAAK8G,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH,W;4BACct5C,K,EAAO;AAClB,gBAAIA,KAAK,KAAK,KAAKs5C,WAAnB,EAAgC;AAC5B,mBAAKA,WAAL,GAAmBt5C,KAAK,IAAI,KAAKk2C,0BAAL,EAA5B;;AACA,mBAAK3b,kBAAL,CAAwBM,YAAxB;AACH;AACJ;;;8BACc;AACX;AACA;AACA,mBAAO,KAAK0e,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH,W;4BACYz5C,K,EAAO;AAChB,iBAAKu5C,yBAAL,GAAiCv5C,KAAjC;AACH;;;;QApFsBs1C,sB;;AAkX3BG,kBAAY,CAACp1C,IAAb,GAAoB,SAASq5C,oBAAT,CAA8Bn5C,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIk1C,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,+EAAzB,EAAmD,CAAnD,CAAzH,EAAgL,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAhL,EAAoO,gEAAyBF,8BAAzB,EAAyD,CAAzD,CAApO,EAAiS,gEAAyB,8DAAzB,CAAjS,EAA4U,gEAAyB,oDAAzB,CAA5U,EAAqX,gEAAyB,2FAAzB,EAAgD,CAAhD,CAArX,CAAP;AAAkb,OAAze;;AACAE,kBAAY,CAACrd,IAAb,GAAoB,gEAAyB;AAAE33B,YAAI,EAAEg1C,YAAR;AAAsB/0C,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuDi5C,sBAAc,EAAE,SAASC,2BAAT,CAAqC/4C,EAArC,EAAyCC,GAAzC,EAA8C+4C,QAA9C,EAAwD;AAAE,cAAIh5C,EAAE,GAAG,CAAT,EAAY;AAClL,yEAAsBg5C,QAAtB,EAAgC/F,mBAAhC,EAAqD,IAArD;;AACA,+EAA4B+F,QAA5B,EAAsC/F,mBAAtC,EAA2D,IAA3D;;AACA,yEAAsB+F,QAAtB,EAAgCrF,QAAhC,EAA0C,IAA1C;;AACA,+EAA4BqF,QAA5B,EAAsCrF,QAAtC,EAAgD,IAAhD;;AACA,yEAAsBqF,QAAtB,EAAgCnF,cAAhC,EAAgD,IAAhD;;AACA,yEAAsBmF,QAAtB,EAAgCrG,SAAhC,EAA2C,IAA3C;;AACA,yEAAsBqG,QAAtB,EAAgCzF,SAAhC,EAA2C,IAA3C;;AACA,yEAAsByF,QAAtB,EAAgCjF,UAAhC,EAA4C,IAA5C;;AACA,yEAAsBiF,QAAtB,EAAgC9E,UAAhC,EAA4C,IAA5C;AACH;;AAAC,cAAIl0C,EAAE,GAAG,CAAT,EAAY;AACV,gBAAI6qC,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAAC04C,iBAAJ,GAAwB9N,EAAE,CAACpgB,KAAhF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAAC24C,cAAJ,GAAqB/N,EAAE,CAACpgB,KAA7E;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACs2C,oBAAJ,GAA2B1L,EAAE,CAACpgB,KAAnF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACu2C,iBAAJ,GAAwB3L,EAAE,CAACpgB,KAAhF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACq2C,iBAAJ,GAAwBzL,EAAE,CAACpgB,KAAhF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACk2C,cAAJ,GAAqBtL,EAA1E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACg2C,aAAJ,GAAoBpL,EAAzE;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAAC81C,eAAJ,GAAsBlL,EAA3E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAAC+1C,eAAJ,GAAsBnL,EAA3E;AACH;AAAE,SArBsC;AAqBpCF,iBAAS,EAAE,SAASsO,kBAAT,CAA4Bj5C,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,sEAAmBukB,GAAnB,EAAwB,IAAxB;;AACA,4EAAyBC,GAAzB,EAA8B,IAA9B;;AACA,sEAAmBG,GAAnB,EAAwB,IAAxB;;AACA,sEAAmBsiB,GAAnB,EAAwB,IAAxB;AACH;;AAAC,cAAIjnC,EAAE,GAAG,CAAT,EAAY;AACV,gBAAI6qC,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACi5C,YAAJ,GAAmBrO,EAAE,CAACpgB,KAA3E;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACw1C,uBAAJ,GAA8B5K,EAAE,CAACpgB,KAAtF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAACk5C,kBAAJ,GAAyBtO,EAAE,CAACpgB,KAAjF;AACA,yEAAsBogB,EAAE,GAAG,2DAA3B,MAAqD5qC,GAAG,CAAC42C,MAAJ,GAAahM,EAAE,CAACpgB,KAArE;AACH;AAAE,SAhCsC;AAgCpClN,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,CAhCyB;AAgCF3Y,gBAAQ,EAAE,EAhCR;AAgCY9E,oBAAY,EAAE,SAASs5C,yBAAT,CAAmCp5C,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzH,sEAAmB,oCAAnB,EAAyDC,GAAG,CAAC0xC,UAAJ,IAAkB,UAA3E,EAAuF,gCAAvF,EAAyH1xC,GAAG,CAAC0xC,UAAJ,IAAkB,MAA3I,EAAmJ,mCAAnJ,EAAwL1xC,GAAG,CAAC0xC,UAAJ,IAAkB,SAA1M,EAAqN,kCAArN,EAAyP1xC,GAAG,CAAC0xC,UAAJ,IAAkB,QAA3Q,EAAqR,wBAArR,EAA+S1xC,GAAG,CAACqJ,QAAJ,CAAasf,UAA5T,EAAwU,0BAAxU,EAAoW3oB,GAAG,CAACw2C,cAAJ,EAApW,EAA0X,6BAA1X,EAAyZx2C,GAAG,CAAC02C,iBAAJ,EAAzZ,EAAkb,0BAAlb,EAA8c12C,GAAG,CAACu1C,iBAAJ,EAA9c,EAAue,iCAAve,EAA0gBv1C,GAAG,CAACo5C,uBAAJ,EAA1gB,EAAyiB,yBAAziB,EAAokBp5C,GAAG,CAACqJ,QAAJ,CAAaxG,QAAjlB,EAA2lB,2BAA3lB,EAAwnB7C,GAAG,CAACqJ,QAAJ,CAAagwC,UAAroB,EAAipB,aAAjpB,EAAgqBr5C,GAAG,CAACqJ,QAAJ,CAAaiwC,OAA7qB,EAAsrB,YAAtrB,EAAosBt5C,GAAG,CAACioB,KAAJ,IAAa,QAAjtB,EAA2tB,UAA3tB,EAAuuBjoB,GAAG,CAACioB,KAAJ,IAAa,MAApvB,EAA4vB,cAA5vB,EAA4wBjoB,GAAG,CAACu5C,cAAJ,CAAmB,WAAnB,CAA5wB,EAA6yB,YAA7yB,EAA2zBv5C,GAAG,CAACu5C,cAAJ,CAAmB,SAAnB,CAA3zB,EAA01B,aAA11B,EAAy2Bv5C,GAAG,CAACu5C,cAAJ,CAAmB,UAAnB,CAAz2B,EAAy4B,UAAz4B,EAAq5Bv5C,GAAG,CAACu5C,cAAJ,CAAmB,OAAnB,CAAr5B,EAAk7B,UAAl7B,EAA87Bv5C,GAAG,CAACu5C,cAAJ,CAAmB,OAAnB,CAA97B,EAA29B,YAA39B,EAAy+Bv5C,GAAG,CAACu5C,cAAJ,CAAmB,SAAnB,CAAz+B,EAAwgC,YAAxgC,EAAshCv5C,GAAG,CAACu5C,cAAJ,CAAmB,SAAnB,CAAthC,EAAqjC,yBAArjC,EAAglC,CAACv5C,GAAG,CAACq1C,kBAArlC;AACH;AAAE,SAlCsC;AAkCpC5qC,cAAM,EAAE;AAAEwd,eAAK,EAAE,OAAT;AAAkBktB,oBAAU,EAAE,YAA9B;AAA4CzD,oBAAU,EAAE,YAAxD;AAAsEE,4BAAkB,EAAE,oBAA1F;AAAgHU,mBAAS,EAAE;AAA3H,SAlC4B;AAkC8Gr3B,gBAAQ,EAAE,CAAC,cAAD,CAlCxH;AAkC0I3a,gBAAQ,EAAE,CAAC,iEAA0B,CAChN;AAAE7B,iBAAO,EAAEi2C,cAAX;AAA2Bh2C,qBAAW,EAAEi2C;AAAxC,SADgN,CAA1B,CAAD,EAErL,wEAFqL,CAlCpJ;AAoCG3b,0BAAkB,EAAEkO,GApCvB;AAoC4B1P,aAAK,EAAE,EApCnC;AAoCuCC,YAAI,EAAE,CApC7C;AAoCgDwB,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,wBAAJ,CAAD,EAAgC,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhC,EAAwE,CAAC,qBAAD,EAAwB,EAAxB,CAAxE,EAAqG,CAAC,CAAD,EAAI,MAAJ,CAArG,EAAkH,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAAlH,EAAiK,CAAC,CAAD,EAAI,sBAAJ,CAAjK,EAA8L,CAAC,gBAAD,EAAmB,EAAnB,CAA9L,EAAsN,CAAC,CAAD,EAAI,8BAAJ,CAAtN,EAA2P,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,2BAArC,EAAkE,IAAlE,EAAwE,WAAxE,EAAqF,sBAArF,EAA6G,YAA7G,EAA2H,UAA3H,EAAuI,UAAvI,EAAmJ,mBAAnJ,EAAwK,CAAxK,EAA2K,MAA3K,CAA3P,EAA+a,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA/a,EAA8d,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9d,EAAghB,CAAC,CAAD,EAAI,kCAAJ,EAAwC,CAAxC,EAA2C,UAA3C,CAAhhB,EAAwkB,CAAC,CAAD,EAAI,cAAJ,CAAxkB,EAA6lB,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,cAA5C,CAA7lB,EAA0pB,CAAC,CAAD,EAAI,wBAAJ,CAA1pB,EAAyrB,CAAC,CAAD,EAAI,8BAAJ,CAAzrB,EAA8tB,CAAC,CAAD,EAAI,4BAAJ,CAA9tB,EAAiwB,CAAC,CAAD,EAAI,4BAAJ,CAAjwB,EAAoyB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,8BAA9B,CAApyB,EAAm2B,CAAC,CAAD,EAAI,uBAAJ,CAAn2B,EAAi4B,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,2BAA/B,EAA4D,IAA5D,EAAkE,UAAlE,EAA8E,mBAA9E,CAAj4B,EAAq+B,CAAC,OAAD,EAAU,EAAV,CAAr+B,EAAo/B,CAAC,OAAD,EAAU,yDAAV,EAAqE,aAArE,EAAoF,MAApF,EAA4F,CAA5F,EAA+F,MAA/F,CAAp/B,EAA4lC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,0BAA3B,EAAuD,gCAAvD,CAA5lC,EAAsrC,CAAC,CAAD,EAAI,uBAAJ,CAAtrC,EAAotC,CAAC,CAAD,EAAI,0BAAJ,CAAptC,EAAqvC,CAAC,WAAD,EAAc,EAAd,CAArvC,EAAwwC,CAAC,CAAD,EAAI,uBAAJ,CAAxwC,EAAsyC,CAAC,CAAD,EAAI,6BAAJ,CAAtyC,EAA00C,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,EAAkC,MAAlC,CAA10C,EAAq3C,CAAC,CAAD,EAAI,4BAAJ,CAAr3C,EAAw5C,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,IAAnB,CAAx5C,CApCxD;AAoC2+CvB,gBAAQ,EAAE,SAAS8hB,qBAAT,CAA+Bz5C,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAChlD,0EAAuBknC,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAkB,OAAlB,EAA2B,SAASwS,0CAAT,CAAoDv5C,MAApD,EAA4D;AAAE,qBAAOF,GAAG,CAACqJ,QAAJ,CAAaqwC,gBAAb,IAAiC15C,GAAG,CAACqJ,QAAJ,CAAaqwC,gBAAb,CAA8Bx5C,MAA9B,CAAxC;AAAgF,aAAzK;;AACA,qEAAkB,CAAlB,EAAqB0wC,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,cAAjE,EAAiF,CAAjF;;AACA,qEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,uEAAoB,CAApB;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,qEAAkB,CAAlB,EAAqBK,6BAArB,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,OAA3D,EAAoE,CAApE;;AACA;;AACA;;AACA,qEAAkB,EAAlB,EAAsBW,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;;AACA;;AACA,qEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,yEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,qEAAkB,EAAlB,EAAsBE,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,qEAAkB,EAAlB,EAAsBO,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA;;AACA;AACH;;AAAC,cAAIxyC,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BC,GAAG,CAAC0xC,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0B1xC,GAAG,CAAC81C,eAAJ,CAAoBtwC,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BxF,GAAG,CAACu1C,iBAAJ,EAA1B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0Bv1C,GAAG,CAAC+1C,eAAJ,CAAoBvwC,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BxF,GAAG,CAAC0xC,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,UAAlB,EAA8B1xC,GAAG,CAACk3C,qBAAJ,EAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,OAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,MAAlC;AACH;AAAE,SA1EsC;AA0EpCxkC,kBAAU,EAAE,CAAC,oDAAD,EAAc,wDAAd,EAA+B,4DAA/B,EAAoD,wEAApD,CA1EwB;AA0EuDklB,cAAM,EAAE,CAAC,6pGAAD,EAAgqG,u/BAAhqG,EAAypI,kjJAAzpI,EAA6sR,o4CAA7sR,EAAmlU,+kGAAnlU,EAAoqa,uoCAApqa,CA1E/D;AA0E62cC,qBAAa,EAAE,CA1E53c;AA0E+3c8hB,YAAI,EAAE;AAAEtnB,mBAAS,EAAE,CAACygB,sBAAsB,CAACC,kBAAxB;AAAb,SA1Er4c;AA0Ei8cjb,uBAAe,EAAE;AA1El9c,OAAzB,CAApB;;AA2EA6c,kBAAY,CAACp0C,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAEZ,cAAI,EAAE;AAAR,SADgC,EAEhC;AAAEA,cAAI,EAAE;AAAR,SAFgC,EAGhC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,+EAAD;AAAtB,WAArB;AAA/B,SAHgC,EAIhC;AAAEb,cAAI,EAAE,gEAAR;AAAwBsC,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD;AAApC,SAJgC,EAKhC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACi0C,8BAAD;AAAtB,WAArB;AAA/B,SALgC,EAMhC;AAAE90C,cAAI,EAAE;AAAR,SANgC,EAOhC;AAAEA,cAAI,EAAE;AAAR,SAPgC,EAQhC;AAAEA,cAAI,EAAEme,MAAR;AAAgB7b,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,2FAAD;AAAtB,WAArB;AAA5B,SARgC,CAAN;AAAA,OAA9B;;AAUAm0C,kBAAY,CAACjqC,cAAb,GAA8B;AAC1BgnC,kBAAU,EAAE,CAAC;AAAE/xC,cAAI,EAAE;AAAR,SAAD,CADc;AAE1BiyC,0BAAkB,EAAE,CAAC;AAAEjyC,cAAI,EAAE;AAAR,SAAD,CAFM;AAG1B2yC,iBAAS,EAAE,CAAC;AAAE3yC,cAAI,EAAE;AAAR,SAAD,CAHe;AAI1Bw1C,kBAAU,EAAE,CAAC;AAAEx1C,cAAI,EAAE;AAAR,SAAD,CAJc;AAK1Bs5C,oBAAY,EAAE,CAAC;AAAEt5C,cAAI,EAAE,uDAAR;AAAmBa,cAAI,EAAE,CAAC,WAAD;AAAzB,SAAD,CALY;AAM1Bg1C,+BAAuB,EAAE,CAAC;AAAE71C,cAAI,EAAE,uDAAR;AAAmBa,cAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,sBAAQ;AAAV,WAAxB;AAAzB,SAAD,CANC;AAO1B04C,0BAAkB,EAAE,CAAC;AAAEv5C,cAAI,EAAE,uDAAR;AAAmBa,cAAI,EAAE,CAAC,gBAAD;AAAzB,SAAD,CAPM;AAQ1Bo2C,cAAM,EAAE,CAAC;AAAEj3C,cAAI,EAAE,uDAAR;AAAmBa,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CARkB;AAS1Bk4C,yBAAiB,EAAE,CAAC;AAAE/4C,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAACwyC,mBAAD;AAA5B,SAAD,CATO;AAU1B2F,sBAAc,EAAE,CAAC;AAAEh5C,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAACwyC,mBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAA5B,SAAD,CAVU;AAW1BsD,4BAAoB,EAAE,CAAC;AAAE32C,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAACkzC,QAAD;AAA5B,SAAD,CAXI;AAY1B6C,yBAAiB,EAAE,CAAC;AAAE52C,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAACkzC,QAAD,EAAW;AAAE,sBAAQ;AAAV,WAAX;AAA5B,SAAD,CAZO;AAa1B2C,yBAAiB,EAAE,CAAC;AAAE12C,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAACozC,cAAD;AAA5B,SAAD,CAbO;AAc1BsC,sBAAc,EAAE,CAAC;AAAEv2C,cAAI,EAAE,6DAAR;AAAyBa,cAAI,EAAE,CAACkyC,SAAD,EAAY;AAAEkH,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAdU;AAe1B5D,qBAAa,EAAE,CAAC;AAAEr2C,cAAI,EAAE,6DAAR;AAAyBa,cAAI,EAAE,CAAC8yC,SAAD,EAAY;AAAEsG,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAfW;AAgB1B9D,uBAAe,EAAE,CAAC;AAAEn2C,cAAI,EAAE,6DAAR;AAAyBa,cAAI,EAAE,CAACszC,UAAD,EAAa;AAAE8F,uBAAW,EAAE;AAAf,WAAb;AAA/B,SAAD,CAhBS;AAiB1B7D,uBAAe,EAAE,CAAC;AAAEp2C,cAAI,EAAE,6DAAR;AAAyBa,cAAI,EAAE,CAACyzC,UAAD,EAAa;AAAE2F,uBAAW,EAAE;AAAf,WAAb;AAA/B,SAAD;AAjBS,OAA9B;AAmBA;;AAAc,OAAC,YAAY;AAAE,wEAAyBjF,YAAzB,EAAuC,CAAC;AAC7Dh1C,cAAI,EAAE,uDADuD;AAE7Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,gBADX;AAECwa,oBAAQ,EAAE,cAFX;AAGCyc,oBAAQ,EAAE,25HAHX;AAICmiB,sBAAU,EAAE,CAAC/G,sBAAsB,CAACC,kBAAxB,CAJb;AAKCryC,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,4DAA8C,0BAF5C;AAGF,wDAA0C,sBAHxC;AAIF,2DAA6C,yBAJ3C;AAKF,0DAA4C,wBAL1C;AAMF,gDAAkC,qBANhC;AAOF,kDAAoC,kBAPlC;AAQF,qDAAuC,qBARrC;AASF,kDAAoC,qBATlC;AAUF,yDAA2C,2BAVzC;AAWF,iDAAmC,mBAXjC;AAYF,mDAAqC,qBAZnC;AAaF,qCAAuB,kBAbrB;AAcF,oCAAsB,mBAdpB;AAeF,kCAAoB,iBAflB;AAgBF,sCAAwB,6BAhBtB;AAiBF,oCAAsB,2BAjBpB;AAkBF,qCAAuB,4BAlBrB;AAmBF,kCAAoB,yBAnBlB;AAoBF,kCAAoB,yBApBlB;AAqBF,oCAAsB,2BArBpB;AAsBF,oCAAsB,2BAtBpB;AAuBF,iDAAmC;AAvBjC,aALP;AA8BC+J,kBAAM,EAAE,CAAC,OAAD,CA9BT;AA+BCotB,yBAAa,EAAE,gEAAkBE,IA/BlC;AAgCCD,2BAAe,EAAE,sEAAwBE,MAhC1C;AAiCCr3B,qBAAS,EAAE,CACP;AAAElC,qBAAO,EAAEi2C,cAAX;AAA2Bh2C,yBAAW,EAAEi2C;AAAxC,aADO,CAjCZ;AAoCC/c,kBAAM,EAAE,CAAC,6pGAAD,EAAgqG,u/BAAhqG,EAAypI,kjJAAzpI,EAA6sR,o4CAA7sR,EAAmlU,+kGAAnlU,EAAoqa,uoCAApqa;AApCT,WAAD;AAFuD,SAAD,CAAvC,EAwCrB,YAAY;AAAE,iBAAO,CAAC;AAAEj4B,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC/GtC,kBAAI,EAAE;AADyG,aAAD,EAE/G;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,+EAAD;AAFP,aAF+G;AAA/B,WAAlE,EAKX;AAAEb,gBAAI,EAAE,gEAAR;AAA+BsC,sBAAU,EAAE,CAAC;AAC9CtC,kBAAI,EAAE;AADwC,aAAD;AAA3C,WALW,EAOX;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClCtC,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACi0C,8BAAD;AAFP,aAFkC;AAA/B,WAPW,EAYX;AAAE90C,gBAAI,EAAE;AAAR,WAZW,EAYgB;AAAEA,gBAAI,EAAE;AAAR,WAZhB,EAYyC;AAAEA,gBAAI,EAAEme,MAAR;AAAgB7b,sBAAU,EAAE,CAAC;AACnFtC,kBAAI,EAAE;AAD6E,aAAD,EAEnF;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,2FAAD;AAFP,aAFmF;AAA5B,WAZzC,CAAP;AAiBF,SAzDS,EAyDP;AAAE20C,oBAAU,EAAE,CAAC;AACzBx1C,gBAAI,EAAE;AADmB,WAAD,CAAd;AAEV+xC,oBAAU,EAAE,CAAC;AACb/xC,gBAAI,EAAE;AADO,WAAD,CAFF;AAIViyC,4BAAkB,EAAE,CAAC;AACrBjyC,gBAAI,EAAE;AADe,WAAD,CAJV;AAMV2yC,mBAAS,EAAE,CAAC;AACZ3yC,gBAAI,EAAE;AADM,WAAD,CAND;AAQVs5C,sBAAY,EAAE,CAAC;AACft5C,gBAAI,EAAE,uDADS;AAEfa,gBAAI,EAAE,CAAC,WAAD;AAFS,WAAD,CARJ;AAWVg1C,iCAAuB,EAAE,CAAC;AAC1B71C,gBAAI,EAAE,uDADoB;AAE1Ba,gBAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,wBAAQ;AAAV,aAAxB;AAFoB,WAAD,CAXf;AAcV04C,4BAAkB,EAAE,CAAC;AACrBv5C,gBAAI,EAAE,uDADe;AAErBa,gBAAI,EAAE,CAAC,gBAAD;AAFe,WAAD,CAdV;AAiBVo2C,gBAAM,EAAE,CAAC;AACTj3C,gBAAI,EAAE,uDADG;AAETa,gBAAI,EAAE,CAAC,OAAD;AAFG,WAAD,CAjBE;AAoBVk4C,2BAAiB,EAAE,CAAC;AACpB/4C,gBAAI,EAAE,0DADc;AAEpBa,gBAAI,EAAE,CAACwyC,mBAAD;AAFc,WAAD,CApBT;AAuBV2F,wBAAc,EAAE,CAAC;AACjBh5C,gBAAI,EAAE,0DADW;AAEjBa,gBAAI,EAAE,CAACwyC,mBAAD,EAAsB;AAAE,wBAAQ;AAAV,aAAtB;AAFW,WAAD,CAvBN;AA0BVsD,8BAAoB,EAAE,CAAC;AACvB32C,gBAAI,EAAE,0DADiB;AAEvBa,gBAAI,EAAE,CAACkzC,QAAD;AAFiB,WAAD,CA1BZ;AA6BV6C,2BAAiB,EAAE,CAAC;AACpB52C,gBAAI,EAAE,0DADc;AAEpBa,gBAAI,EAAE,CAACkzC,QAAD,EAAW;AAAE,wBAAQ;AAAV,aAAX;AAFc,WAAD,CA7BT;AAgCV2C,2BAAiB,EAAE,CAAC;AACpB12C,gBAAI,EAAE,0DADc;AAEpBa,gBAAI,EAAE,CAACozC,cAAD;AAFc,WAAD,CAhCT;AAmCVsC,wBAAc,EAAE,CAAC;AACjBv2C,gBAAI,EAAE,6DADW;AAEjBa,gBAAI,EAAE,CAACkyC,SAAD,EAAY;AAAEkH,yBAAW,EAAE;AAAf,aAAZ;AAFW,WAAD,CAnCN;AAsCV5D,uBAAa,EAAE,CAAC;AAChBr2C,gBAAI,EAAE,6DADU;AAEhBa,gBAAI,EAAE,CAAC8yC,SAAD,EAAY;AAAEsG,yBAAW,EAAE;AAAf,aAAZ;AAFU,WAAD,CAtCL;AAyCV9D,yBAAe,EAAE,CAAC;AAClBn2C,gBAAI,EAAE,6DADY;AAElBa,gBAAI,EAAE,CAACszC,UAAD,EAAa;AAAE8F,yBAAW,EAAE;AAAf,aAAb;AAFY,WAAD,CAzCP;AA4CV7D,yBAAe,EAAE,CAAC;AAClBp2C,gBAAI,EAAE,6DADY;AAElBa,gBAAI,EAAE,CAACyzC,UAAD,EAAa;AAAE2F,yBAAW,EAAE;AAAf,aAAb;AAFY,WAAD;AA5CP,SAzDO;AAwGb,OAxGF;AA0Gd;;;;;;;;;UAOME,kB;;;;AAENA,wBAAkB,CAACv3B,IAAnB,GAA0B,+DAAwB;AAAE5iB,YAAI,EAAEm6C;AAAR,OAAxB,CAA1B;AACAA,wBAAkB,CAACt3B,IAAnB,GAA0B,+DAAwB;AAAE/Y,eAAO,EAAE,SAASswC,0BAAT,CAAoCt6C,CAApC,EAAuC;AAAE,iBAAO,KAAKA,CAAC,IAAIq6C,kBAAV,GAAP;AAAyC,SAA7F;AAA+Fv2B,eAAO,EAAE,CAAC,CAC/I,4DAD+I,EAE/I,sEAF+I,EAG/I,sEAH+I,CAAD,EAI/I,sEAJ+I;AAAxG,OAAxB,CAA1B;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bo3B,kBAA1B,EAA8C;AAAEn3B,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACgwB,QAAD,EAAWgC,YAAX,EAAyBpB,OAAzB,EAAkCG,QAAlC,EAA4CE,cAA5C,EAA4DG,SAA5D,EAAuEG,SAAvE,CAAP;AAA2F,WAAzH;AAA2H3wB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,EACjQ,sEADiQ,EAEjQ,sEAFiQ,CAAP;AAEvO,WAFqF;AAEnFX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EAAkB+vB,QAAlB,EAA4BgC,YAA5B,EAA0CpB,OAA1C,EAAmDG,QAAnD,EAA6DE,cAA7D,EAA6EG,SAA7E,EAAwFG,SAAxF,CAAP;AAA4G;AAFhD,SAA9C,CAAnD;AAEuJ,OAFtK;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB4F,kBAAzB,EAA6C,CAAC;AACnEn6C,cAAI,EAAE,sDAD6D;AAEnEa,cAAI,EAAE,CAAC;AACCmiB,wBAAY,EAAE,CACVgwB,QADU,EAEVgC,YAFU,EAGVpB,OAHU,EAIVG,QAJU,EAKVE,cALU,EAMVG,SANU,EAOVG,SAPU,CADf;AAUC3wB,mBAAO,EAAE,CACL,4DADK,EAEL,sEAFK,EAGL,sEAHK,CAVV;AAeCX,mBAAO,EAAE,CACL,sEADK,EAEL+vB,QAFK,EAGLgC,YAHK,EAILpB,OAJK,EAKLG,QALK,EAMLE,cANK,EAOLG,SAPK,EAQLG,SARK;AAfV,WAAD;AAF6D,SAAD,CAA7C,EA4BrB,IA5BqB,EA4Bf,IA5Be;AA4BP,OA5BR;AA8Bd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;ACjiCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;AAOA;AACA;;;AAEA,UAAI8F,kBAAJ,C,CACA;AACA;AACA;AACA;AACA;;AACA,UAAI;AACAA,0BAAkB,GAAI,OAAO7uB,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,CAAC8uB,eAA1D;AACH,OAFD,CAGA,OAAO7uB,EAAP,EAAW;AACP4uB,0BAAkB,GAAG,KAArB;AACH;AACD;;;;;;UAIME,Q,GACF,kBAAYC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB,CADqB,CAErB;AACA;AACA;;AACA;;AACA,aAAKroB,SAAL,GAAiB,KAAKqoB,WAAL,GACb,0EAAkB,KAAKA,WAAvB,CADa,GACyB,OAAOx0B,QAAP,KAAoB,QAApB,IAAgC,CAAC,CAACA,QAD5E;AAEA;;AACA,aAAKuG,IAAL,GAAY,KAAK4F,SAAL,IAAkB,UAAU7wB,IAAV,CAAem5C,SAAS,CAACr5C,SAAzB,CAA9B;AACA;;AACA,aAAKirB,OAAL,GAAe,KAAK8F,SAAL,IAAkB,kBAAkB7wB,IAAlB,CAAuBm5C,SAAS,CAACr5C,SAAjC,CAAjC,CAXqB,CAYrB;;AACA;;AACA,aAAKs5C,KAAL,GAAa,KAAKvoB,SAAL,IAAmB,CAAC,EAAEvL,MAAM,CAAC+zB,MAAP,IAAiBN,kBAAnB,CAAD,IAC5B,OAAOO,GAAP,KAAe,WADa,IACE,CAAC,KAAKruB,IADR,IACgB,CAAC,KAAKF,OADtD,CAdqB,CAgBrB;AACA;;AACA;;AACA,aAAKwuB,MAAL,GAAc,KAAK1oB,SAAL,IACV,eAAe7wB,IAAf,CAAoBm5C,SAAS,CAACr5C,SAA9B,CADU,IACkC,CAAC,KAAKs5C,KADxC,IACiD,CAAC,KAAKnuB,IADvD,IAC+D,CAAC,KAAKF,OADnF;AAEA;;AACA,aAAKyuB,GAAL,GAAW,KAAK3oB,SAAL,IAAkB,mBAAmB7wB,IAAnB,CAAwBm5C,SAAS,CAACr5C,SAAlC,CAAlB,IACP,EAAE,cAAcwlB,MAAhB,CADJ,CAtBqB,CAwBrB;AACA;AACA;AACA;;AACA;;AACA,aAAK4nB,OAAL,GAAe,KAAKrc,SAAL,IAAkB,uBAAuB7wB,IAAvB,CAA4Bm5C,SAAS,CAACr5C,SAAtC,CAAjC;AACA;AACA;;AACA,aAAK25C,OAAL,GAAe,KAAK5oB,SAAL,IAAkB,WAAW7wB,IAAX,CAAgBm5C,SAAS,CAACr5C,SAA1B,CAAlB,IAA0D,CAAC,KAAKirB,OAA/E,CAhCqB,CAiCrB;AACA;AACA;;AACA;;AACA,aAAK2uB,MAAL,GAAc,KAAK7oB,SAAL,IAAkB,UAAU7wB,IAAV,CAAem5C,SAAS,CAACr5C,SAAzB,CAAlB,IAAyD,KAAKy5C,MAA5E;AACH,O;;AAELN,cAAQ,CAAC36C,IAAT,GAAgB,SAASq7C,gBAAT,CAA0Bn7C,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIy6C,QAAV,EAAoB,uDAAgB,yDAAhB,CAApB,CAAP;AAA2D,OAA1G;;AACAA,cAAQ,CAAC3wC,KAAT,GAAiB,yEAAmB;AAAEE,eAAO,EAAE,SAASmxC,gBAAT,GAA4B;AAAE,iBAAO,IAAIV,QAAJ,CAAa,+DAAS,yDAAT,CAAb,CAAP;AAA6C,SAAtF;AAAwF1wC,aAAK,EAAE0wC,QAA/F;AAAyG30B,kBAAU,EAAE;AAArH,OAAnB,CAAjB;;AACA20B,cAAQ,CAAC35C,cAAT,GAA0B;AAAA,eAAM,CAC5B;AAAEZ,cAAI,EAAEgI,MAAR;AAAgB1F,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,yDAAD;AAAtB,WAAD;AAA5B,SAD4B,CAAN;AAAA,OAA1B;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB05C,QAAzB,EAAmC,CAAC;AACzDv6C,cAAI,EAAE,wDADmD;AAEzDa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFmD,SAAD,CAAnC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAEgI,MAAR;AAAgB1F,sBAAU,EAAE,CAAC;AAC3CtC,kBAAI,EAAE,oDADqC;AAE3Ca,kBAAI,EAAE,CAAC,yDAAD;AAFqC,aAAD;AAA5B,WAAD,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAQd;;;;;;;;;UAOMq6C,c;;;;AAENA,oBAAc,CAACt4B,IAAf,GAAsB,+DAAwB;AAAE5iB,YAAI,EAAEk7C;AAAR,OAAxB,CAAtB;AACAA,oBAAc,CAACr4B,IAAf,GAAsB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASqxC,sBAAT,CAAgCr7C,CAAhC,EAAmC;AAAE,iBAAO,KAAKA,CAAC,IAAIo7C,cAAV,GAAP;AAAqC;AAArF,OAAxB,CAAtB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,cAAzB,EAAyC,CAAC;AAC/Dl7C,cAAI,EAAE,sDADyD;AAE/Da,cAAI,EAAE,CAAC,EAAD;AAFyD,SAAD,CAAzC,EAGrB,IAHqB,EAGf,IAHe;AAGP,OAHR;AAKd;;;;;;;;AAOA;;;AACA,UAAIu6C,mBAAJ;AACA;;AACA,UAAMC,mBAAmB,GAAG,CACxB;AACA;AACA;AACA;AACA,aALwB,EAMxB,QANwB,EAOxB,UAPwB,EAQxB,MARwB,EASxB,gBATwB,EAUxB,OAVwB,EAWxB,MAXwB,EAYxB,QAZwB,EAaxB,OAbwB,EAcxB,OAdwB,EAexB,QAfwB,EAgBxB,UAhBwB,EAiBxB,OAjBwB,EAkBxB,OAlBwB,EAmBxB,OAnBwB,EAoBxB,QApBwB,EAqBxB,QArBwB,EAsBxB,KAtBwB,EAuBxB,MAvBwB,EAwBxB,MAxBwB,EAyBxB,KAzBwB,EA0BxB,MA1BwB,CAA5B;AA4BA;;AACA,eAASC,sBAAT,GAAkC;AAC9B;AACA,YAAIF,mBAAJ,EAAyB;AACrB,iBAAOA,mBAAP;AACH,SAJ6B,CAK9B;AACA;AACA;;;AACA,YAAI,OAAOp1B,QAAP,KAAoB,QAApB,IAAgC,CAACA,QAArC,EAA+C;AAC3Co1B,6BAAmB,GAAG,IAAInpB,GAAJ,CAAQopB,mBAAR,CAAtB;AACA,iBAAOD,mBAAP;AACH;;AACD,YAAIG,gBAAgB,GAAGv1B,QAAQ,CAACwB,aAAT,CAAuB,OAAvB,CAAvB;AACA4zB,2BAAmB,GAAG,IAAInpB,GAAJ,CAAQopB,mBAAmB,CAACn0C,MAApB,CAA2B,UAAA3H,KAAK,EAAI;AAC9Dg8C,0BAAgB,CAACC,YAAjB,CAA8B,MAA9B,EAAsCj8C,KAAtC;AACA,iBAAOg8C,gBAAgB,CAACv7C,IAAjB,KAA0BT,KAAjC;AACH,SAH6B,CAAR,CAAtB;AAIA,eAAO67C,mBAAP;AACH;AAED;;;;;;;;AAOA;;;AACA,UAAIK,qBAAJ;AACA;;;;;AAIA,eAASC,6BAAT,GAAyC;AACrC,YAAID,qBAAqB,IAAI,IAAzB,IAAiC,OAAO70B,MAAP,KAAkB,WAAvD,EAAoE;AAChE,cAAI;AACAA,kBAAM,CAACiP,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsC7tB,MAAM,CAAC2zC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACvE1xC,iBAAG,EAAE;AAAA,uBAAMwxC,qBAAqB,GAAG,IAA9B;AAAA;AADkE,aAArC,CAAtC;AAGH,WAJD,SAKQ;AACJA,iCAAqB,GAAGA,qBAAqB,IAAI,KAAjD;AACH;AACJ;;AACD,eAAOA,qBAAP;AACH;AACD;;;;;;;;AAMA,eAASG,+BAAT,CAAyC7sC,OAAzC,EAAkD;AAC9C,eAAO2sC,6BAA6B,KAAK3sC,OAAL,GAAe,CAAC,CAACA,OAAO,CAAC8sC,OAA7D;AACH;AAED;;;;;;;;AAOA;;;AACA,UAAIC,iBAAJ;AACA;;AACA,UAAIC,uBAAJ;AACA;;AACA,eAASC,sBAAT,GAAkC;AAC9B,YAAID,uBAAuB,IAAI,IAA/B,EAAqC;AACjC;AACA,cAAI,OAAO/1B,QAAP,KAAoB,QAApB,IAAgC,CAACA,QAArC,EAA+C;AAC3C+1B,mCAAuB,GAAG,KAA1B;AACH,WAJgC,CAKjC;;;AACA,cAAI,oBAAoB/1B,QAAQ,CAACumB,eAAT,CAAyB7f,KAAjD,EAAwD;AACpDqvB,mCAAuB,GAAG,IAA1B;AACH,WAFD,MAGK;AACD;AACA;AACA,gBAAME,gBAAgB,GAAGC,OAAO,CAACC,SAAR,CAAkBC,QAA3C;;AACA,gBAAIH,gBAAJ,EAAsB;AAClB;AACA;AACA;AACA;AACAF,qCAAuB,GAAG,CAAC,4BAA4Bz6C,IAA5B,CAAiC26C,gBAAgB,CAACl1C,QAAjB,EAAjC,CAA3B;AACH,aAND,MAOK;AACDg1C,qCAAuB,GAAG,KAA1B;AACH;AACJ;AACJ;;AACD,eAAOA,uBAAP;AACH;AACD;;;;;;AAIA,eAASM,oBAAT,GAAgC;AAC5B;AACA,YAAI,OAAOr2B,QAAP,KAAoB,QAApB,IAAgC,CAACA,QAArC,EAA+C;AAC3C,iBAAO;AAAE;AAAT;AACH;;AACD,YAAI81B,iBAAiB,IAAI,IAAzB,EAA+B;AAC3B;AACA,cAAMQ,eAAe,GAAGt2B,QAAQ,CAACwB,aAAT,CAAuB,KAAvB,CAAxB;AACA,cAAM+0B,cAAc,GAAGD,eAAe,CAAC5vB,KAAvC;AACA4vB,yBAAe,CAAC1sC,GAAhB,GAAsB,KAAtB;AACA2sC,wBAAc,CAAC1pB,KAAf,GAAuB,KAAvB;AACA0pB,wBAAc,CAAChN,QAAf,GAA0B,MAA1B;AACAgN,wBAAc,CAACnN,UAAf,GAA4B,QAA5B;AACAmN,wBAAc,CAACC,aAAf,GAA+B,MAA/B;AACAD,wBAAc,CAACpN,QAAf,GAA0B,UAA1B;AACA,cAAMsN,OAAO,GAAGz2B,QAAQ,CAACwB,aAAT,CAAuB,KAAvB,CAAhB;AACA,cAAMk1B,YAAY,GAAGD,OAAO,CAAC/vB,KAA7B;AACAgwB,sBAAY,CAAC7pB,KAAb,GAAqB,KAArB;AACA6pB,sBAAY,CAAC3pB,MAAb,GAAsB,KAAtB;AACAupB,yBAAe,CAAC50B,WAAhB,CAA4B+0B,OAA5B;AACAz2B,kBAAQ,CAACqB,IAAT,CAAcK,WAAd,CAA0B40B,eAA1B;AACAR,2BAAiB,GAAG;AAAE;AAAtB,WAhB2B,CAiB3B;AACA;AACA;;AACA,cAAIQ,eAAe,CAACK,UAAhB,KAA+B,CAAnC,EAAsC;AAClC;AACA;AACA;AACA;AACAL,2BAAe,CAACK,UAAhB,GAA6B,CAA7B;AACAb,6BAAiB,GACbQ,eAAe,CAACK,UAAhB,KAA+B,CAA/B,GAAmC;AAAE;AAArC,cAAqD;AAAE;AAD3D;AAEH;;AACDL,yBAAe,CAACloB,UAAhB,CAA2BvM,WAA3B,CAAuCy0B,eAAvC;AACH;;AACD,eAAOR,iBAAP;AACH;AAED;;;;;;;;;AAOA,UAAIc,oBAAJ;AACA;;AACA,eAASC,kBAAT,GAA8B;AAC1B,YAAID,oBAAoB,IAAI,IAA5B,EAAkC;AAC9B,cAAME,IAAI,GAAG,OAAO92B,QAAP,KAAoB,WAApB,GAAkCA,QAAQ,CAAC82B,IAA3C,GAAkD,IAA/D;AACAF,8BAAoB,GAAG,CAAC,EAAEE,IAAI,KAAKA,IAAI,CAACC,gBAAL,IAAyBD,IAAI,CAACE,YAAnC,CAAN,CAAxB;AACH;;AACD,eAAOJ,oBAAP;AACH;AACD;;;AACA,eAASK,cAAT,CAAwB1sB,OAAxB,EAAiC;AAC7B,YAAIssB,kBAAkB,EAAtB,EAA0B;AACtB,cAAMnE,QAAQ,GAAGnoB,OAAO,CAACkoB,WAAR,GAAsBloB,OAAO,CAACkoB,WAAR,EAAtB,GAA8C,IAA/D,CADsB,CAEtB;AACA;;AACA,cAAI,OAAOyE,UAAP,KAAsB,WAAtB,IAAqCA,UAArC,IAAmDxE,QAAQ,YAAYwE,UAA3E,EAAuF;AACnF,mBAAOxE,QAAP;AACH;AACJ;;AACD,eAAO,IAAP;AACH;AAED;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;AChUA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;;;AAOA;;;;;;;UAWMyE,mB;;;;;;;;;;;;;8BACuB;AAAE,mBAAO,KAAKzO,OAAZ;AAAsB,W;4BAC1BnvC,K,EAAO;AAAE,iBAAKmvC,OAAL,GAAenvC,KAAf;AAAuB;;;8BAC9B;AAAE,mBAAO,KAAKsvC,OAAZ;AAAsB,W;4BAC1BtvC,K,EAAO;AAAE,iBAAKsvC,OAAL,GAAetvC,KAAf;AAAuB;;;8BACrC;AAAE,mBAAO,KAAK4D,OAAZ;AAAsB,W;4BAC1B5D,K,EAAO;AAAE,iBAAK4D,OAAL,GAAe5D,KAAf;AAAuB;;;8BACtB;AAAE,mBAAO,KAAK4D,OAAZ;AAAsB,W;4BAC1B5D,K,EAAO;AAAE,iBAAK4D,OAAL,GAAe5D,KAAf;AAAuB;;;;QAR1B,2E;;AAUlC49C,yBAAmB,CAACv9C,IAApB,GAA2B,SAASw9C,2BAAT,CAAqCt9C,CAArC,EAAwC;AAAE,eAAOu9C,gCAAgC,CAACv9C,CAAC,IAAIq9C,mBAAN,CAAvC;AAAoE,OAAzI;;AACAA,yBAAmB,CAACp9C,IAApB,GAA2B,gEAAyB;AAAEC,YAAI,EAAEm9C,mBAAR;AAA6Bl9C,iBAAS,EAAE,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAnC,CAAxC;AAAqH0d,iBAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,EAA0C,cAA1C,CAAhI;AAA2L7S,cAAM,EAAE;AAAEwyC,4BAAkB,EAAE,oBAAtB;AAA4CC,4BAAkB,EAAE,oBAAhE;AAAsFC,4BAAkB,EAAE,oBAA1G;AAAgIC,4BAAkB,EAAE,oBAApJ;AAA0KC,qBAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvL;AAAwNC,6BAAmB,EAAE;AAA7O,SAAnM;AAAycriC,gBAAQ,EAAE,CAAC,qBAAD,CAAnd;AAA4e3a,gBAAQ,EAAE,CAAC,wEAAD;AAAtf,OAAzB,CAA3B;AACAw8C,yBAAmB,CAACpyC,cAApB,GAAqC;AACjCyyC,0BAAkB,EAAE,CAAC;AAAEx9C,cAAI,EAAE;AAAR,SAAD,CADa;AAEjCy9C,0BAAkB,EAAE,CAAC;AAAEz9C,cAAI,EAAE;AAAR,SAAD,CAFa;AAGjC09C,mBAAW,EAAE,CAAC;AAAE19C,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD,CAHoB;AAIjC88C,2BAAmB,EAAE,CAAC;AAAE39C,cAAI,EAAE;AAAR,SAAD;AAJY,OAArC;;AAMA,UAAMq9C,gCAAgC,GAAG,aAAc,oEAA6BF,mBAA7B,CAAvD;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBA,mBAAzB,EAA8C,CAAC;AACpEn9C,cAAI,EAAE,uDAD8D;AAEpEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,uDADX;AAECwa,oBAAQ,EAAE,qBAFX;AAGCxQ,kBAAM,EAAE,CAAC,oBAAD,EAAuB,oBAAvB,CAHT;AAIC/J,gBAAI,EAAE;AACF,uBAAS,oCADP;AAEF;AACA;AACA,sBAAQ;AAJN;AAJP,WAAD;AAF8D,SAAD,CAA9C,EAarB,IAbqB,EAaf;AAAEy8C,4BAAkB,EAAE,CAAC;AACzBx9C,gBAAI,EAAE;AADmB,WAAD,CAAtB;AAEFy9C,4BAAkB,EAAE,CAAC;AACrBz9C,gBAAI,EAAE;AADe,WAAD,CAFlB;AAIF09C,qBAAW,EAAE,CAAC;AACd19C,gBAAI,EAAE,mDADQ;AAEda,gBAAI,EAAE,CAAC,cAAD;AAFQ,WAAD,CAJX;AAOF88C,6BAAmB,EAAE,CAAC;AACtB39C,gBAAI,EAAE;AADgB,WAAD;AAPnB,SAbe;AAsBb,OAtBF;AAwBd;;;;;;;;AAOA;;;AACA,eAAS49C,+BAAT,CAAyC59C,IAAzC,EAA+C;AAC3C,eAAOkE,KAAK,wBAAgBlE,IAAhB,qCAAZ;AACH;AAED;;;;;;;;AAOA;;;;;;;;AAMA,UAAM69C,wBAAwB,GAAG,IAAI,4DAAJ,CAAmB,0BAAnB,CAAjC;AAEA;;;;;;;AAOA;;AACA,UAAMC,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA,UAAIhL,YAAY,GAAG,CAAnB,C,CACA;;AACA;;UACMiL,Y,GACF,sBAAYx0B,yBAAZ,EAAuCH,WAAvC,EAAoDD,gBAApD;AACA;AACAK,eAFA,EAEW;AAAA;;AACP,aAAKD,yBAAL,GAAiCA,yBAAjC;AACA,aAAKH,WAAL,GAAmBA,WAAnB;AACA,aAAKD,gBAAL,GAAwBA,gBAAxB;AACA,aAAKK,SAAL,GAAiBA,SAAjB;AACH,O;;AAEL,UAAMw0B,kBAAkB,GAAG,+EAAgBD,YAAhB,CAA3B;AACA;;;UACME,Q;;;;;AACF,0BAAY9+C,WAAZ,EAAyBguC,SAAzB;AACA;AACA3jB,iBAFA,EAEWJ,WAFX,EAEwBD,gBAFxB,EAE0CI,yBAF1C,EAEqE20B,kBAFrE,EAEyFlQ,gBAFzF,EAE2GvX,MAF3G,EAGA;AACA;AACA0nB,kBALA,EAKY;AAAA;;AAAA;;AACR,wCAAM50B,yBAAN,EAAiCH,WAAjC,EAA8CD,gBAA9C,EAAgEK,SAAhE;AACA,kBAAKrqB,WAAL,GAAmBA,WAAnB;AACA,kBAAKguC,SAAL,GAAiBA,SAAjB;AACA,kBAAK3jB,SAAL,GAAiBA,SAAjB;AACA,kBAAKwkB,gBAAL,GAAwBA,gBAAxB;AACA,kBAAKmQ,UAAL,GAAkBA,UAAlB;AACA,kBAAKC,IAAL,uBAAyBtL,YAAY,EAArC;AACA;;;;;AAIA,kBAAK6G,OAAL,GAAe,KAAf;AACA;;;;;AAIA,kBAAK1wB,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;;;;AAIA,kBAAK8sB,WAAL,GAAmB,WAAnB;AACA;;;;;AAIA,kBAAK2D,UAAL,GAAkB,KAAlB;AACA,kBAAKvxB,SAAL,GAAiB,KAAjB;AACA,kBAAKzH,SAAL,GAAiB,KAAjB;AACA,kBAAK29B,KAAL,GAAa,MAAb;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3Br3C,MAP2B,CAOpB,UAAApH,CAAC;AAAA,mBAAI,uFAAyBmN,GAAzB,CAA6BnN,CAA7B,CAAJ;AAAA,WAPmB,CAA7B;AAQA,cAAMywB,OAAO,GAAG,QAAKpxB,WAAL,CAAiBM,aAAjC;AACA,cAAM++C,QAAQ,GAAGjuB,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,EAAjB,CAzCQ,CA0CR;AACA;;AACA,kBAAKk9C,mBAAL,GAA2BP,kBAAkB,IAAI3tB,OAAjD;AACA,kBAAKmuB,oBAAL,GAA4B,QAAKn/C,KAAjC,CA7CQ,CA8CR;;AACA,kBAAK4M,EAAL,GAAU,QAAKA,EAAf,CA/CQ,CAgDR;AACA;AACA;;AACA,cAAIghC,SAAS,CAAC2N,GAAd,EAAmB;AACfrkB,kBAAM,CAACf,iBAAP,CAAyB,YAAM;AAC3Bv2B,yBAAW,CAACM,aAAZ,CAA0Bo2B,gBAA1B,CAA2C,OAA3C,EAAoD,UAACrB,KAAD,EAAW;AAC3D,oBAAIhhB,EAAE,GAAGghB,KAAK,CAACh0B,MAAf;;AACA,oBAAI,CAACgT,EAAE,CAACjU,KAAJ,IAAa,CAACiU,EAAE,CAAC68B,cAAjB,IAAmC,CAAC78B,EAAE,CAAC88B,YAA3C,EAAyD;AACrD;AACA;AACA;AACA;AACA98B,oBAAE,CAACi9B,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACAj9B,oBAAE,CAACi9B,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,eAVD;AAWH,aAZD;AAaH;;AACD,kBAAKkO,SAAL,GAAiB,CAAC,QAAKxR,SAAL,CAAehb,SAAjC;AACA,kBAAKysB,eAAL,GAAuBJ,QAAQ,KAAK,QAApC;AACA,kBAAKK,WAAL,GAAmBL,QAAQ,KAAK,UAAhC;;AACA,cAAI,QAAKI,eAAT,EAA0B;AACtB,oBAAK7I,WAAL,GAAmBxlB,OAAO,CAACsK,QAAR,GAAmB,4BAAnB,GACf,mBADJ;AAEH;;AAxEO;AAyEX;AACD;;;;;;;;4CAyDkB;AAAA;;AACd,gBAAI,KAAKsS,SAAL,CAAehb,SAAnB,EAA8B;AAC1B,mBAAK6b,gBAAL,CAAsBzD,OAAtB,CAA8B,KAAKprC,WAAL,CAAiBM,aAA/C,EAA8D2X,SAA9D,CAAwE,UAAAod,KAAK,EAAI;AAC7E,uBAAI,CAACklB,UAAL,GAAkBllB,KAAK,CAACmZ,YAAxB;;AACA,uBAAI,CAAC1kB,YAAL,CAAkBU,IAAlB;AACH,eAHD;AAIH;AACJ;;;wCACa;AACV,iBAAKV,YAAL,CAAkBU,IAAlB;AACH;;;wCACa;AACV,iBAAKV,YAAL,CAAkBiB,QAAlB;;AACA,gBAAI,KAAKijB,SAAL,CAAehb,SAAnB,EAA8B;AAC1B,mBAAK6b,gBAAL,CAAsBxD,cAAtB,CAAqC,KAAKrrC,WAAL,CAAiBM,aAAtD;AACH;AACJ;;;sCACW;AACR,gBAAI,KAAK+pB,SAAT,EAAoB;AAChB;AACA;AACA;AACA,mBAAKs1B,gBAAL;AACH,aANO,CAOR;AACA;AACA;;;AACA,iBAAKC,sBAAL,GAVQ,CAWR;AACA;;;AACA,iBAAKC,sBAAL;AACH;AACD;;;;gCACMjwC,O,EAAS;AACX,iBAAK5P,WAAL,CAAiBM,aAAjB,CAA+B+6B,KAA/B,CAAqCzrB,OAArC;AACH,W,CACD;AACA;AACA;AACA;;AACA;AACA;AACA;;;;wCACckwC,S,EAAW;AACrB,gBAAIA,SAAS,KAAK,KAAKtF,OAAnB,KAA+B,CAAC,KAAKuF,QAAN,IAAkB,CAACD,SAAlD,CAAJ,EAAkE;AAC9D,mBAAKtF,OAAL,GAAesF,SAAf;AACA,mBAAKh2B,YAAL,CAAkBU,IAAlB;AACH;AACJ,W,CACD;AACA;AACA;AACA;AACA;;;;qCACW,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD;;;;mDACyB;AACrB,gBAAI8B,EAAJ,EAAQ0zB,EAAR,CADqB,CAErB;AACA;AACA;AACA;;;AACA,gBAAMlP,WAAW,GAAG,CAAC,CAACkP,EAAE,GAAG,CAAC1zB,EAAE,GAAG,KAAK0yB,UAAX,MAA2B,IAA3B,IAAmC1yB,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACguB,uBAArE,MAAkG,IAAlG,IAA0G0F,EAAE,KAAK,KAAK,CAAtH,GAA0H,KAAK,CAA/H,GAAmIA,EAAE,CAACC,IAAH,CAAQ3zB,EAAR,CAApI,IAAmJ,IAAnJ,GAA0J,KAAKwkB,WAAnL;;AACA,gBAAIA,WAAW,KAAK,KAAKoP,oBAAzB,EAA+C;AAC3C,kBAAM9uB,OAAO,GAAG,KAAKpxB,WAAL,CAAiBM,aAAjC;AACA,mBAAK4/C,oBAAL,GAA4BpP,WAA5B;AACAA,yBAAW,GACP1f,OAAO,CAACirB,YAAR,CAAqB,aAArB,EAAoCvL,WAApC,CADO,GAC4C1f,OAAO,CAAC+uB,eAAR,CAAwB,aAAxB,CADvD;AAEH;AACJ;AACD;;;;mDACyB;AACrB,gBAAMxuC,QAAQ,GAAG,KAAK3R,WAAL,CAAiBM,aAAjB,CAA+BF,KAAhD;;AACA,gBAAI,KAAKm/C,oBAAL,KAA8B5tC,QAAlC,EAA4C;AACxC,mBAAK4tC,oBAAL,GAA4B5tC,QAA5B;AACA,mBAAKmY,YAAL,CAAkBU,IAAlB;AACH;AACJ;AACD;;;;0CACgB;AACZ,gBAAIm0B,uBAAuB,CAAClvC,OAAxB,CAAgC,KAAKyvC,KAArC,IAA8C,CAAC,CAA/C,KACC,OAAOp6C,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,oBAAM25C,+BAA+B,CAAC,KAAKS,KAAN,CAArC;AACH;AACJ;AACD;;;;0CACgB;AACZ,mBAAO,KAAKE,qBAAL,CAA2B3vC,OAA3B,CAAmC,KAAKyvC,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;;wCACc;AACV;AACA,gBAAIkB,QAAQ,GAAG,KAAKpgD,WAAL,CAAiBM,aAAjB,CAA+B8/C,QAA9C;AACA,mBAAOA,QAAQ,IAAIA,QAAQ,CAACC,QAA5B;AACH;AACD;;;;;;;;AA4BA;;;;4CAIkBhxC,G,EAAK;AACnB,gBAAIA,GAAG,CAAC3I,MAAR,EAAgB;AACZ,mBAAK1G,WAAL,CAAiBM,aAAjB,CAA+B+7C,YAA/B,CAA4C,kBAA5C,EAAgEhtC,GAAG,CAACsD,IAAJ,CAAS,GAAT,CAAhE;AACH,aAFD,MAGK;AACD,mBAAK3S,WAAL,CAAiBM,aAAjB,CAA+B6/C,eAA/B,CAA+C,kBAA/C;AACH;AACJ;AACD;;;;;;;6CAImB;AACf;AACA;AACA;AACA,gBAAI,CAAC,KAAK3F,OAAV,EAAmB;AACf,mBAAKnf,KAAL;AACH;AACJ;;;8BA/Mc;AACX,gBAAI,KAAKhR,SAAL,IAAkB,KAAKA,SAAL,CAAetmB,QAAf,KAA4B,IAAlD,EAAwD;AACpD,qBAAO,KAAKsmB,SAAL,CAAetmB,QAAtB;AACH;;AACD,mBAAO,KAAKilB,SAAZ;AACH,W;4BACY5oB,K,EAAO;AAChB,iBAAK4oB,SAAL,GAAiB,oFAAsB5oB,KAAtB,CAAjB,CADgB,CAEhB;AACA;;AACA,gBAAI,KAAKo6C,OAAT,EAAkB;AACd,mBAAKA,OAAL,GAAe,KAAf;AACA,mBAAK1wB,YAAL,CAAkBU,IAAlB;AACH;AACJ;AACD;;;;;;;8BAIS;AAAE,mBAAO,KAAK81B,GAAZ;AAAkB,W;4BACtBlgD,K,EAAO;AAAE,iBAAKkgD,GAAL,GAAWlgD,KAAK,IAAI,KAAK6+C,IAAzB;AAAgC;AAChD;;;;;;;8BAIe;AAAE,mBAAO,KAAK19B,SAAZ;AAAwB,W;4BAC5BnhB,K,EAAO;AAAE,iBAAKmhB,SAAL,GAAiB,oFAAsBnhB,KAAtB,CAAjB;AAAgD;AACtE;;;;8BACW;AAAE,mBAAO,KAAK8+C,KAAZ;AAAoB,W;4BACxB9+C,K,EAAO;AACZ,iBAAK8+C,KAAL,GAAa9+C,KAAK,IAAI,MAAtB;;AACA,iBAAKmgD,aAAL,GAFY,CAGZ;AACA;AACA;;;AACA,gBAAI,CAAC,KAAKb,WAAN,IAAqB,uFAAyB5xC,GAAzB,CAA6B,KAAKoxC,KAAlC,CAAzB,EAAmE;AAC/D,mBAAKl/C,WAAL,CAAiBM,aAAjB,CAA+BO,IAA/B,GAAsC,KAAKq+C,KAA3C;AACH;AACJ;AACD;;;;;;;8BAIY;AAAE,mBAAO,KAAKI,mBAAL,CAAyBl/C,KAAhC;AAAwC,W;4BAC5CA,K,EAAO;AACb,gBAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;AACtB,mBAAKk/C,mBAAL,CAAyBl/C,KAAzB,GAAiCA,KAAjC;AACA,mBAAK0pB,YAAL,CAAkBU,IAAlB;AACH;AACJ;AACD;;;;8BACe;AAAE,mBAAO,KAAK20B,SAAZ;AAAwB,W;4BAC5B/+C,K,EAAO;AAAE,iBAAK++C,SAAL,GAAiB,oFAAsB/+C,KAAtB,CAAjB;AAAgD;;;8BA4G1D;AACR,mBAAO,CAAC,KAAKogD,aAAL,EAAD,IAAyB,CAAC,KAAKxgD,WAAL,CAAiBM,aAAjB,CAA+BF,KAAzD,IAAkE,CAAC,KAAKqgD,WAAL,EAAnE,IACH,CAAC,KAAKlG,UADV;AAEH;AACD;;;;;;;8BAIuB;AACnB,gBAAI,KAAKkF,eAAT,EAA0B;AACtB;AACA;AACA;AACA,kBAAMiB,aAAa,GAAG,KAAK1gD,WAAL,CAAiBM,aAAvC;AACA,kBAAMqgD,WAAW,GAAGD,aAAa,CAAC9wC,OAAd,CAAsB,CAAtB,CAApB,CALsB,CAMtB;AACA;;AACA,qBAAO,KAAK4qC,OAAL,IAAgBkG,aAAa,CAAChlB,QAA9B,IAA0C,CAAC,KAAKgX,KAAhD,IACH,CAAC,EAAEgO,aAAa,CAACE,aAAd,GAA8B,CAAC,CAA/B,IAAoCD,WAApC,IAAmDA,WAAW,CAAC/mB,KAAjE,CADL;AAEH,aAVD,MAWK;AACD,qBAAO,KAAK4gB,OAAL,IAAgB,CAAC,KAAK9H,KAA7B;AACH;AACJ;;;;QA3QkBmM,kB;;AAqSvBC,cAAQ,CAACr+C,IAAT,GAAgB,SAASogD,gBAAT,CAA0BlgD,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIm+C,QAAV,EAAoB,gEAAyB,wDAAzB,CAApB,EAAiE,gEAAyB,8DAAzB,CAAjE,EAA4G,gEAAyB,wDAAzB,EAA2C,EAA3C,CAA5G,EAA4J,gEAAyB,qDAAzB,EAAwC,CAAxC,CAA5J,EAAwM,gEAAyB,iEAAzB,EAAoD,CAApD,CAAxM,EAAgQ,gEAAyB,wEAAzB,CAAhQ,EAAoT,gEAAyBJ,wBAAzB,EAAmD,EAAnD,CAApT,EAA4W,gEAAyB,uEAAzB,CAA5W,EAA8Z,gEAAyB,oDAAzB,CAA9Z,EAAuc,gEAAyB,2EAAzB,EAAyC,CAAzC,CAAvc,CAAP;AAA6f,OAA5iB;;AACAI,cAAQ,CAACl+C,IAAT,GAAgB,gEAAyB;AAAEC,YAAI,EAAEi+C,QAAR;AAAkBh+C,iBAAS,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,EAAtB,CAAD,EAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,EAAzB,CAA5B,EAA0D,CAAC,QAAD,EAAW,kBAAX,EAA+B,EAA/B,CAA1D,EAA8F,CAAC,OAAD,EAAU,kBAAV,EAA8B,EAA9B,CAA9F,EAAiI,CAAC,UAAD,EAAa,kBAAb,EAAiC,EAAjC,CAAjI,CAA7B;AAAqM0d,iBAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ,EAAyB,iCAAzB,CAAhN;AAA6Q3Y,gBAAQ,EAAE,CAAvR;AAA0R9E,oBAAY,EAAE,SAAS+/C,qBAAT,CAA+B7/C,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/X,qEAAkB,OAAlB,EAA2B,SAAS8/C,iCAAT,GAA6C;AAAE,qBAAO7/C,GAAG,CAAC8/C,aAAJ,CAAkB,IAAlB,CAAP;AAAiC,aAA3G,EAA6G,MAA7G,EAAqH,SAASC,gCAAT,GAA4C;AAAE,qBAAO//C,GAAG,CAAC8/C,aAAJ,CAAkB,KAAlB,CAAP;AAAkC,aAArM,EAAuM,OAAvM,EAAgN,SAASE,iCAAT,GAA6C;AAAE,qBAAOhgD,GAAG,CAACigD,QAAJ,EAAP;AAAwB,aAAvR;AACH;;AAAC,cAAIlgD,EAAE,GAAG,CAAT,EAAY;AACV,yEAAsB,UAAtB,EAAkCC,GAAG,CAAC6C,QAAtC,EAAgD,UAAhD,EAA4D7C,GAAG,CAACsgB,QAAhE;;AACA,sEAAmB,IAAnB,EAAyBtgB,GAAG,CAAC8L,EAA7B,EAAiC,kBAAjC,EAAqD9L,GAAG,CAAC4vC,WAAzD,EAAsE,UAAtE,EAAkF5vC,GAAG,CAAC6+C,QAAJ,IAAgB,CAAC7+C,GAAG,CAACu+C,eAArB,IAAwC,IAA1H,EAAgI,cAAhI,EAAgJv+C,GAAG,CAAC2oB,UAApJ,EAAgK,eAAhK,EAAiL3oB,GAAG,CAACsgB,QAAJ,CAAa5Z,QAAb,EAAjL;;AACA,sEAAmB,kBAAnB,EAAuC1G,GAAG,CAACs+C,SAA3C;AACH;AAAE,SANkC;AAMhC7zC,cAAM,EAAE;AAAEqB,YAAE,EAAE,IAAN;AAAYjJ,kBAAQ,EAAE,UAAtB;AAAkCyd,kBAAQ,EAAE,UAA5C;AAAwD3gB,cAAI,EAAE,MAA9D;AAAsET,eAAK,EAAE,OAA7E;AAAsF2/C,kBAAQ,EAAE,UAAhG;AAA4GjP,qBAAW,EAAE,aAAzH;AAAwI3mB,2BAAiB,EAAE,mBAA3J;AAAgLguB,6BAAmB,EAAE,CAAC,kBAAD,EAAqB,qBAArB;AAArM,SANwB;AAM4Nh8B,gBAAQ,EAAE,CAAC,UAAD,CANtO;AAMoP3a,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAE7B,iBAAO,EAAE,gFAAX;AAAgCC,qBAAW,EAAEk/C;AAA7C,SAAD,CAA1B,CAAD,EAAuF,wEAAvF,EAA0H,kEAA1H;AAN9P,OAAzB,CAAhB;;AAOAA,cAAQ,CAACr9C,cAAT,GAA0B;AAAA,eAAM,CAC5B;AAAEZ,cAAI,EAAE;AAAR,SAD4B,EAE5B;AAAEA,cAAI,EAAE;AAAR,SAF4B,EAG5B;AAAEA,cAAI,EAAE,wDAAR;AAAmBsC,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE;AAAR,WAArB;AAA/B,SAH4B,EAI5B;AAAEA,cAAI,EAAE,qDAAR;AAAgBsC,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD;AAA5B,SAJ4B,EAK5B;AAAEA,cAAI,EAAE,iEAAR;AAA4BsC,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD;AAAxC,SAL4B,EAM5B;AAAEA,cAAI,EAAE;AAAR,SAN4B,EAO5B;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE;AAAR,WAArB,EAAqC;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACg9C,wBAAD;AAAtB,WAArC;AAA/B,SAP4B,EAQ5B;AAAE79C,cAAI,EAAE;AAAR,SAR4B,EAS5B;AAAEA,cAAI,EAAE;AAAR,SAT4B,EAU5B;AAAEA,cAAI,EAAE,yEAAR;AAAsBsC,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,2EAAD;AAAtB,WAArB;AAAlC,SAV4B,CAAN;AAAA,OAA1B;;AAYAo9C,cAAQ,CAAClzC,cAAT,GAA0B;AACtB7H,gBAAQ,EAAE,CAAC;AAAElD,cAAI,EAAE;AAAR,SAAD,CADY;AAEtBmM,UAAE,EAAE,CAAC;AAAEnM,cAAI,EAAE;AAAR,SAAD,CAFkB;AAGtBiwC,mBAAW,EAAE,CAAC;AAAEjwC,cAAI,EAAE;AAAR,SAAD,CAHS;AAItB2gB,gBAAQ,EAAE,CAAC;AAAE3gB,cAAI,EAAE;AAAR,SAAD,CAJY;AAKtBA,YAAI,EAAE,CAAC;AAAEA,cAAI,EAAE;AAAR,SAAD,CALgB;AAMtBspB,yBAAiB,EAAE,CAAC;AAAEtpB,cAAI,EAAE;AAAR,SAAD,CANG;AAOtBs3C,2BAAmB,EAAE,CAAC;AAAEt3C,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,kBAAD;AAArB,SAAD,CAPC;AAQtBtB,aAAK,EAAE,CAAC;AAAES,cAAI,EAAE;AAAR,SAAD,CARe;AAStBk/C,gBAAQ,EAAE,CAAC;AAAEl/C,cAAI,EAAE;AAAR,SAAD,CATY;AAUtBmgD,qBAAa,EAAE,CAAC;AAAEngD,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAA5B,SAAD,EAAqD;AAAEb,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAA5B,SAArD,CAVO;AAWtBy/C,gBAAQ,EAAE,CAAC;AAAEtgD,cAAI,EAAE,0DAAR;AAAsBa,cAAI,EAAE,CAAC,OAAD;AAA5B,SAAD;AAXY,OAA1B;AAaA;;AAAc,OAAC,YAAY;AAAE,wEAAyBo9C,QAAzB,EAAmC,CAAC;AACzDj+C,cAAI,EAAE,uDADmD;AAEzDa,cAAI,EAAE,CAAC;AACCC,oBAAQ,6HADT;AAGCwa,oBAAQ,EAAE,UAHX;AAICva,gBAAI,EAAE;AACF;;;AAGA,uBAAS,mDAJP;AAKF,0CAA4B,WAL1B;AAMF;AACA;AACA,2BAAa,IARX;AASF;AACA;AACA;AACA,yCAA2B,aAZzB;AAaF,4BAAc,UAbZ;AAcF,4BAAc,UAdZ;AAeF,iCAAmB,sCAfjB;AAgBF,qCAAuB,YAhBrB;AAiBF,sCAAwB;AAjBtB,aAJP;AAuBCC,qBAAS,EAAE,CAAC;AAAElC,qBAAO,EAAE,gFAAX;AAAgCC,yBAAW,EAAEk/C;AAA7C,aAAD;AAvBZ,WAAD;AAFmD,SAAD,CAAnC,EA2BrB,YAAY;AAAE,iBAAO,CAAC;AAAEj+C,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAyD;AAAEA,gBAAI,EAAE,wDAAR;AAA0BsC,sBAAU,EAAE,CAAC;AAC7GtC,kBAAI,EAAE;AADuG,aAAD,EAE7G;AACCA,kBAAI,EAAE;AADP,aAF6G;AAAtC,WAAzD,EAIX;AAAEA,gBAAI,EAAE,qDAAR;AAAuBsC,sBAAU,EAAE,CAAC;AACtCtC,kBAAI,EAAE;AADgC,aAAD;AAAnC,WAJW,EAMX;AAAEA,gBAAI,EAAE,iEAAR;AAAmCsC,sBAAU,EAAE,CAAC;AAClDtC,kBAAI,EAAE;AAD4C,aAAD;AAA/C,WANW,EAQX;AAAEA,gBAAI,EAAE;AAAR,WARW,EAQyB;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACtEtC,kBAAI,EAAE;AADgE,aAAD,EAEtE;AACCA,kBAAI,EAAE;AADP,aAFsE,EAItE;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACg9C,wBAAD;AAFP,aAJsE;AAA/B,WARzB,EAeX;AAAE79C,gBAAI,EAAE;AAAR,WAfW,EAeuB;AAAEA,gBAAI,EAAE;AAAR,WAfvB,EAegD;AAAEA,gBAAI,EAAE,yEAAR;AAA6BsC,sBAAU,EAAE,CAAC;AACvGtC,kBAAI,EAAE;AADiG,aAAD,EAEvG;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,2EAAD;AAFP,aAFuG;AAAzC,WAfhD,CAAP;AAoBF,SA/CS,EA+CP;AAAEsL,YAAE,EAAE,CAAC;AACjBnM,gBAAI,EAAE;AADW,WAAD,CAAN;AAEVkD,kBAAQ,EAAE,CAAC;AACXlD,gBAAI,EAAE;AADK,WAAD,CAFA;AAIV2gB,kBAAQ,EAAE,CAAC;AACX3gB,gBAAI,EAAE;AADK,WAAD,CAJA;AAMVA,cAAI,EAAE,CAAC;AACPA,gBAAI,EAAE;AADC,WAAD,CANI;AAQVT,eAAK,EAAE,CAAC;AACRS,gBAAI,EAAE;AADE,WAAD,CARG;AAUVk/C,kBAAQ,EAAE,CAAC;AACXl/C,gBAAI,EAAE;AADK,WAAD,CAVA;AAalB;AACA;AACA;AACA;;AACA;AACA;AACA;AACAmgD,uBAAa,EAAE,CAAC;AACRngD,gBAAI,EAAE,0DADE;AAERa,gBAAI,EAAE,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV;AAFE,WAAD,EAGR;AACCb,gBAAI,EAAE,0DADP;AAECa,gBAAI,EAAE,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT;AAFP,WAHQ,CApBG;AA2BlB;AACA;AACA;AACA;AACA;AACAy/C,kBAAQ,EAAE,CAAC;AACHtgD,gBAAI,EAAE,0DADH;AAEHa,gBAAI,EAAE,CAAC,OAAD;AAFH,WAAD,CAhCQ;AAmCVovC,qBAAW,EAAE,CAAC;AACdjwC,gBAAI,EAAE;AADQ,WAAD,CAnCH;AAqCVspB,2BAAiB,EAAE,CAAC;AACpBtpB,gBAAI,EAAE;AADc,WAAD,CArCT;AAuCVs3C,6BAAmB,EAAE,CAAC;AACtBt3C,gBAAI,EAAE,mDADgB;AAEtBa,gBAAI,EAAE,CAAC,kBAAD;AAFgB,WAAD;AAvCX,SA/CO;AAyFb,OAzFF;AA2Fd;;;;;;;;;UAOM0/C,c;;;;AAENA,oBAAc,CAAC39B,IAAf,GAAsB,+DAAwB;AAAE5iB,YAAI,EAAEugD;AAAR,OAAxB,CAAtB;AACAA,oBAAc,CAAC19B,IAAf,GAAsB,+DAAwB;AAAE/Y,eAAO,EAAE,SAAS02C,sBAAT,CAAgC1gD,CAAhC,EAAmC;AAAE,iBAAO,KAAKA,CAAC,IAAIygD,cAAV,GAAP;AAAqC,SAArF;AAAuFv/C,iBAAS,EAAE,CAAC,wEAAD,CAAlG;AAAuH4iB,eAAO,EAAE,CAAC,CACnK,uEADmK,EAEnK,+EAFmK,CAAD,EAGnK,uEAHmK,EAItK;AACA;AACA,uFANsK;AAAhI,OAAxB,CAAtB;;AAOA,OAAC,YAAY;AAAE,SAAC,OAAOb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bw9B,cAA1B,EAA0C;AAAEv9B,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACi7B,QAAD,EAAWd,mBAAX,CAAP;AAAyC,WAAvE;AAAyEv5B,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,uEAAD,EAC3M,+EAD2M,CAAP;AAC9K,WAD8E;AAC5EX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,uEAAD,EACtD;AACA;AACA,2FAHsD,EAGlCg7B,QAHkC,EAGxBd,mBAHwB,CAAP;AAGM;AAJ+C,SAA1C,CAAnD;AAIoD,OAJnE;AAKA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBoD,cAAzB,EAAyC,CAAC;AAC/DvgD,cAAI,EAAE,sDADyD;AAE/Da,cAAI,EAAE,CAAC;AACCmiB,wBAAY,EAAE,CAACi7B,QAAD,EAAWd,mBAAX,CADf;AAECv5B,mBAAO,EAAE,CACL,uEADK,EAEL,+EAFK,CAFV;AAMCX,mBAAO,EAAE,CACL,uEADK,EAEL;AACA;AACA,2FAJK,EAKLg7B,QALK,EAMLd,mBANK,CANV;AAcCn8C,qBAAS,EAAE,CAAC,wEAAD;AAdZ,WAAD;AAFyD,SAAD,CAAzC,EAkBrB,IAlBqB,EAkBf,IAlBe;AAkBP,OAlBR;AAoBd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;AC5ly/C,YAAY,GAAG,GAArB;AACA;;;;;AAIA,eAASC,mBAAT,CAA6BltC,EAA7B,EAAiC82B,IAAjC,EAAuCn+B,EAAvC,EAA2C;AACvC,YAAMqC,GAAG,GAAGmyC,mBAAmB,CAACntC,EAAD,EAAK82B,IAAL,CAA/B;;AACA,YAAI97B,GAAG,CAACkE,IAAJ,CAAS,UAAAkuC,UAAU;AAAA,iBAAIA,UAAU,CAAC5lB,IAAX,MAAqB7uB,EAAE,CAAC6uB,IAAH,EAAzB;AAAA,SAAnB,CAAJ,EAA4D;AACxD;AACH;;AACDxsB,WAAG,CAACpF,IAAJ,CAAS+C,EAAE,CAAC6uB,IAAH,EAAT;AACAxnB,UAAE,CAACgoC,YAAH,CAAgBlR,IAAhB,EAAsB97B,GAAG,CAACsD,IAAJ,CAAS2uC,YAAT,CAAtB;AACH;AACD;;;;;;AAIA,eAASI,sBAAT,CAAgCrtC,EAAhC,EAAoC82B,IAApC,EAA0Cn+B,EAA1C,EAA8C;AAC1C,YAAMqC,GAAG,GAAGmyC,mBAAmB,CAACntC,EAAD,EAAK82B,IAAL,CAA/B;AACA,YAAMwW,WAAW,GAAGtyC,GAAG,CAACtH,MAAJ,CAAW,UAAA+H,GAAG;AAAA,iBAAIA,GAAG,IAAI9C,EAAE,CAAC6uB,IAAH,EAAX;AAAA,SAAd,CAApB;;AACA,YAAI8lB,WAAW,CAACj7C,MAAhB,EAAwB;AACpB2N,YAAE,CAACgoC,YAAH,CAAgBlR,IAAhB,EAAsBwW,WAAW,CAAChvC,IAAZ,CAAiB2uC,YAAjB,CAAtB;AACH,SAFD,MAGK;AACDjtC,YAAE,CAAC8rC,eAAH,CAAmBhV,IAAnB;AACH;AACJ;AACD;;;;;;AAIA,eAASqW,mBAAT,CAA6BntC,EAA7B,EAAiC82B,IAAjC,EAAuC;AACnC;AACA,eAAO,CAAC92B,EAAE,CAACutC,YAAH,CAAgBzW,IAAhB,KAAyB,EAA1B,EAA8B0W,KAA9B,CAAoC,MAApC,KAA+C,EAAtD;AACH;AAED;;;;;;;;AAOA;;;AACA,UAAMC,qBAAqB,GAAG,mCAA9B;AACA;;AACA,UAAMC,yBAAyB,GAAG,yBAAlC;AACA;;AACA,UAAMC,8BAA8B,GAAG,sBAAvC;AACA;;AACA,UAAIC,MAAM,GAAG,CAAb;AACA;;AACA,UAAMC,eAAe,GAAG,IAAI50C,GAAJ,EAAxB;AACA;;AACA,UAAI60C,iBAAiB,GAAG,IAAxB;AACA;;;;;;UAKMC,a;AACF,+BAAYr7B,SAAZ;AACA;;;AAGAinB,iBAJA,EAIW;AAAA;;AACP,eAAKA,SAAL,GAAiBA,SAAjB;AACA,eAAKjnB,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;mCAKSs7B,W,EAAa5vC,O,EAAS;AAC3B,gBAAI,CAAC,KAAK6vC,eAAL,CAAqBD,WAArB,EAAkC5vC,OAAlC,CAAL,EAAiD;AAC7C;AACH;;AACD,gBAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7B;AACA,mBAAK8vC,aAAL,CAAmB9vC,OAAnB;;AACAyvC,6BAAe,CAACxzC,GAAhB,CAAoB+D,OAApB,EAA6B;AAAE+vC,8BAAc,EAAE/vC,OAAlB;AAA2BgwC,8BAAc,EAAE;AAA3C,eAA7B;AACH,aAJD,MAKK,IAAI,CAACP,eAAe,CAACp0C,GAAhB,CAAoB2E,OAApB,CAAL,EAAmC;AACpC,mBAAKiwC,qBAAL,CAA2BjwC,OAA3B;AACH;;AACD,gBAAI,CAAC,KAAKkwC,4BAAL,CAAkCN,WAAlC,EAA+C5vC,OAA/C,CAAL,EAA8D;AAC1D,mBAAKmwC,oBAAL,CAA0BP,WAA1B,EAAuC5vC,OAAvC;AACH;AACJ;AACD;;;;4CACkB4vC,W,EAAa5vC,O,EAAS;AACpC,gBAAI,CAACA,OAAD,IAAY,CAAC,KAAKowC,cAAL,CAAoBR,WAApB,CAAjB,EAAmD;AAC/C;AACH;;AACD,gBAAI,KAAKM,4BAAL,CAAkCN,WAAlC,EAA+C5vC,OAA/C,CAAJ,EAA6D;AACzD,mBAAKqwC,uBAAL,CAA6BT,WAA7B,EAA0C5vC,OAA1C;AACH,aANmC,CAOpC;AACA;;;AACA,gBAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,kBAAMswC,iBAAiB,GAAGb,eAAe,CAACp3C,GAAhB,CAAoB2H,OAApB,CAA1B;;AACA,kBAAIswC,iBAAiB,IAAIA,iBAAiB,CAACN,cAAlB,KAAqC,CAA9D,EAAiE;AAC7D,qBAAKO,qBAAL,CAA2BvwC,OAA3B;AACH;AACJ;;AACD,gBAAI0vC,iBAAiB,IAAIA,iBAAiB,CAACc,UAAlB,CAA6Bv8C,MAA7B,KAAwC,CAAjE,EAAoE;AAChE,mBAAKw8C,wBAAL;AACH;AACJ;AACD;;;;wCACc;AACV,gBAAMC,iBAAiB,GAAG,KAAKp8B,SAAL,CAAe+xB,gBAAf,YAAoCkJ,8BAApC,OAA1B;;AACA,iBAAK,IAAI93C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGi5C,iBAAiB,CAACz8C,MAAtC,EAA8CwD,CAAC,EAA/C,EAAmD;AAC/C,mBAAKk5C,iCAAL,CAAuCD,iBAAiB,CAACj5C,CAAD,CAAxD;;AACAi5C,+BAAiB,CAACj5C,CAAD,CAAjB,CAAqBi2C,eAArB,CAAqC6B,8BAArC;AACH;;AACD,gBAAIG,iBAAJ,EAAuB;AACnB,mBAAKe,wBAAL;AACH;;AACDhB,2BAAe,CAACmB,KAAhB;AACH;AACD;;;;;;;gDAIsB5wC,O,EAAS;AAC3B,gBAAM+vC,cAAc,GAAG,KAAKz7B,SAAL,CAAesB,aAAf,CAA6B,KAA7B,CAAvB;;AACA,iBAAKk6B,aAAL,CAAmBC,cAAnB;;AACAA,0BAAc,CAAC5mB,WAAf,GAA6BnpB,OAA7B;;AACA,iBAAK6wC,wBAAL;;AACAnB,6BAAiB,CAAC55B,WAAlB,CAA8Bi6B,cAA9B;AACAN,2BAAe,CAACxzC,GAAhB,CAAoB+D,OAApB,EAA6B;AAAE+vC,4BAAc,EAAdA,cAAF;AAAkBC,4BAAc,EAAE;AAAlC,aAA7B;AACH;AACD;;;;wCACcrxB,O,EAAS;AACnB,gBAAI,CAACA,OAAO,CAACpkB,EAAb,EAAiB;AACbokB,qBAAO,CAACpkB,EAAR,aAAgB+0C,yBAAhB,cAA6CE,MAAM,EAAnD;AACH;AACJ;AACD;;;;gDACsBxvC,O,EAAS;AAC3B,gBAAMswC,iBAAiB,GAAGb,eAAe,CAACp3C,GAAhB,CAAoB2H,OAApB,CAA1B;AACA,gBAAM+vC,cAAc,GAAGO,iBAAiB,IAAIA,iBAAiB,CAACP,cAA9D;;AACA,gBAAIL,iBAAiB,IAAIK,cAAzB,EAAyC;AACrCL,+BAAiB,CAACz5B,WAAlB,CAA8B85B,cAA9B;AACH;;AACDN,2BAAe,UAAf,CAAuBzvC,OAAvB;AACH;AACD;;;;qDAC2B;AACvB,gBAAI,CAAC0vC,iBAAL,EAAwB;AACpB;AACA,kBAAMoB,eAAe,GAAG,CAAC,KAAKvV,SAAN,IAAoB,CAAC,KAAKA,SAAL,CAAe5gB,IAAhB,IAAwB,CAAC,KAAK4gB,SAAL,CAAe9gB,OAApF;;AACA,kBAAMs2B,oBAAoB,GAAG,KAAKz8B,SAAL,CAAe08B,cAAf,CAA8B3B,qBAA9B,CAA7B,CAHoB,CAIpB;AACA;AACA;AACA;;;AACA,kBAAI0B,oBAAoB,IAAIA,oBAAoB,CAACvuB,UAAjD,EAA6D;AACzDuuB,oCAAoB,CAACvuB,UAArB,CAAgCvM,WAAhC,CAA4C86B,oBAA5C;AACH;;AACDrB,+BAAiB,GAAG,KAAKp7B,SAAL,CAAesB,aAAf,CAA6B,KAA7B,CAApB;AACA85B,+BAAiB,CAACn1C,EAAlB,GAAuB80C,qBAAvB;AACAK,+BAAiB,CAAC75B,SAAlB,CAA4Btd,GAA5B,CAAgC,qBAAhC,EAboB,CAcpB;AACA;AACA;AACA;;AACAm3C,+BAAiB,CAAC9F,YAAlB,CAA+B,aAA/B,EAA8CkH,eAAe,GAAG,EAAhE;;AACA,mBAAKx8B,SAAL,CAAemB,IAAf,CAAoBK,WAApB,CAAgC45B,iBAAhC;AACH;AACJ;AACD;;;;qDAC2B;AACvB,gBAAIA,iBAAiB,IAAIA,iBAAiB,CAACltB,UAA3C,EAAuD;AACnDktB,+BAAiB,CAACltB,UAAlB,CAA6BvM,WAA7B,CAAyCy5B,iBAAzC;AACAA,+BAAiB,GAAG,IAApB;AACH;AACJ;AACD;;;;4DACkC/wB,O,EAAS;AACvC;AACA,gBAAMsyB,oBAAoB,GAAGlC,mBAAmB,CAACpwB,OAAD,EAAU,kBAAV,CAAnB,CACxBrpB,MADwB,CACjB,UAAAiF,EAAE;AAAA,qBAAIA,EAAE,CAACyC,OAAH,CAAWsyC,yBAAX,KAAyC,CAA7C;AAAA,aADe,CAA7B;AAEA3wB,mBAAO,CAACirB,YAAR,CAAqB,kBAArB,EAAyCqH,oBAAoB,CAAC/wC,IAArB,CAA0B,GAA1B,CAAzC;AACH;AACD;;;;;;;+CAIqBye,O,EAAS3e,O,EAAS;AACnC,gBAAMswC,iBAAiB,GAAGb,eAAe,CAACp3C,GAAhB,CAAoB2H,OAApB,CAA1B,CADmC,CAEnC;AACA;;AACA8uC,+BAAmB,CAACnwB,OAAD,EAAU,kBAAV,EAA8B2xB,iBAAiB,CAACP,cAAlB,CAAiCx1C,EAA/D,CAAnB;AACAokB,mBAAO,CAACirB,YAAR,CAAqB2F,8BAArB,EAAqD,EAArD;AACAe,6BAAiB,CAACN,cAAlB;AACH;AACD;;;;;;;kDAIwBrxB,O,EAAS3e,O,EAAS;AACtC,gBAAMswC,iBAAiB,GAAGb,eAAe,CAACp3C,GAAhB,CAAoB2H,OAApB,CAA1B;AACAswC,6BAAiB,CAACN,cAAlB;AACAf,kCAAsB,CAACtwB,OAAD,EAAU,kBAAV,EAA8B2xB,iBAAiB,CAACP,cAAlB,CAAiCx1C,EAA/D,CAAtB;AACAokB,mBAAO,CAAC+uB,eAAR,CAAwB6B,8BAAxB;AACH;AACD;;;;uDAC6B5wB,O,EAAS3e,O,EAAS;AAC3C,gBAAMkxC,YAAY,GAAGnC,mBAAmB,CAACpwB,OAAD,EAAU,kBAAV,CAAxC;AACA,gBAAM2xB,iBAAiB,GAAGb,eAAe,CAACp3C,GAAhB,CAAoB2H,OAApB,CAA1B;AACA,gBAAMmxC,SAAS,GAAGb,iBAAiB,IAAIA,iBAAiB,CAACP,cAAlB,CAAiCx1C,EAAxE;AACA,mBAAO,CAAC,CAAC42C,SAAF,IAAeD,YAAY,CAACl0C,OAAb,CAAqBm0C,SAArB,KAAmC,CAAC,CAA1D;AACH;AACD;;;;0CACgBxyB,O,EAAS3e,O,EAAS;AAC9B,gBAAI,CAAC,KAAKowC,cAAL,CAAoBzxB,OAApB,CAAL,EAAmC;AAC/B,qBAAO,KAAP;AACH;;AACD,gBAAI3e,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;AACxC;AACA;AACA;AACA,qBAAO,IAAP;AACH;;AACD,gBAAMoxC,cAAc,GAAGpxC,OAAO,IAAI,IAAX,GAAkB,EAAlB,GAAuB,UAAGA,OAAH,EAAaopB,IAAb,EAA9C;AACA,gBAAMioB,SAAS,GAAG1yB,OAAO,CAACwwB,YAAR,CAAqB,YAArB,CAAlB,CAX8B,CAY9B;AACA;;AACA,mBAAOiC,cAAc,GAAI,CAACC,SAAD,IAAcA,SAAS,CAACjoB,IAAV,OAAqBgoB,cAAvC,GAAyD,KAA9E;AACH;AACD;;;;yCACezyB,O,EAAS;AACpB,mBAAOA,OAAO,CAAC2yB,QAAR,KAAqB,KAAKh9B,SAAL,CAAei9B,YAA3C;AACH;;;;;;AAEL5B,mBAAa,CAAC3hD,IAAd,GAAqB,SAASwjD,qBAAT,CAA+BtjD,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIyhD,aAAV,EAAyB,uDAAgB,wDAAhB,CAAzB,EAAoD,uDAAgB,8DAAhB,CAApD,CAAP;AAA+F,OAAxJ;;AACAA,mBAAa,CAAC33C,KAAd,GAAsB,yEAAmB;AAAEE,eAAO,EAAE,SAASs5C,qBAAT,GAAiC;AAAE,iBAAO,IAAI7B,aAAJ,CAAkB,+DAAS,wDAAT,CAAlB,EAAsC,+DAAS,8DAAT,CAAtC,CAAP;AAAmE,SAAjH;AAAmH13C,aAAK,EAAE03C,aAA1H;AAAyI37B,kBAAU,EAAE;AAArJ,OAAnB,CAAtB;;AACA27B,mBAAa,CAAC3gD,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEZ,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SADiC,EAEjC;AAAEb,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBuhD,aAAzB,EAAwC,CAAC;AAC9DvhD,cAAI,EAAE,wDADwD;AAE9Da,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFwD,SAAD,CAAxC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC9CtC,kBAAI,EAAE,oDADwC;AAE9Ca,kBAAI,EAAE,CAAC,wDAAD;AAFwC,aAAD;AAA/B,WAAD,EAGX;AAAEb,gBAAI,EAAE;AAAR,WAHW,CAAP;AAGyB,SANlB,EAMoB,IANpB;AAM4B,OAN3C;AAQd;;;;;;;;AAOA;;;;;;UAIMqjD,c;AACF,gCAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAChB,eAAKA,MAAL,GAAcA,MAAd;AACA,eAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,eAAKC,WAAL,GAAmB,IAAnB;AACA,eAAKC,KAAL,GAAa,KAAb;AACA,eAAKC,gBAAL,GAAwB,IAAI,4CAAJ,EAAxB;AACA,eAAKC,sBAAL,GAA8B,kDAAaC,KAA3C;AACA,eAAKC,SAAL,GAAiB,IAAjB;AACA,eAAKC,oBAAL,GAA4B,EAA5B;AACA,eAAKC,WAAL,GAAmB,KAAnB;AACA;;;;;AAIA,eAAKC,gBAAL,GAAwB,UAACh1C,IAAD;AAAA,mBAAUA,IAAI,CAAC9L,QAAf;AAAA,WAAxB,CAdgB,CAehB;;;AACA,eAAK+gD,eAAL,GAAuB,EAAvB;AACA;;;;;AAIA,eAAKC,MAAL,GAAc,IAAI,4CAAJ,EAAd;AACA;;AACA,eAAK7xC,MAAL,GAAc,IAAI,4CAAJ,EAAd,CAvBgB,CAwBhB;AACA;AACA;;AACA,cAAIixC,MAAM,YAAY,uDAAtB,EAAiC;AAC7BA,kBAAM,CAACpxC,OAAP,CAAekF,SAAf,CAAyB,UAAC+sC,QAAD,EAAc;AACnC,kBAAI,OAAI,CAACX,WAAT,EAAsB;AAClB,oBAAMY,SAAS,GAAGD,QAAQ,CAACloB,OAAT,EAAlB;AACA,oBAAMooB,QAAQ,GAAGD,SAAS,CAACx1C,OAAV,CAAkB,OAAI,CAAC40C,WAAvB,CAAjB;;AACA,oBAAIa,QAAQ,GAAG,CAAC,CAAZ,IAAiBA,QAAQ,KAAK,OAAI,CAACd,gBAAvC,EAAyD;AACrD,yBAAI,CAACA,gBAAL,GAAwBc,QAAxB;AACH;AACJ;AACJ,aARD;AASH;AACJ;AACD;;;;;;;;;wCAKcC,S,EAAW;AACrB,iBAAKN,gBAAL,GAAwBM,SAAxB;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;;qCAK4B;AAAA,gBAAnBC,UAAmB,uEAAN,IAAM;AACxB,iBAAKd,KAAL,GAAac,UAAb;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;oDAIwC;AAAA,gBAAhBphD,OAAgB,uEAAN,IAAM;AACpC,iBAAK0gD,SAAL,GAAiB1gD,OAAjB;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;;oDAK0BqhD,S,EAAW;AACjC,iBAAKC,WAAL,GAAmBD,SAAnB;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;kDAIwBt8C,I,EAAM;AAC1B,iBAAK47C,oBAAL,GAA4B57C,IAA5B;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;0CAIsC;AAAA;;AAAA,gBAAxBw8C,gBAAwB,uEAAL,GAAK;;AAClC,gBAAI,CAAC,OAAOzgD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAoD,KAAKq/C,MAAL,CAAYz9C,MAAZ,IACpD,KAAKy9C,MAAL,CAAY5wC,IAAZ,CAAiB,UAAA1D,IAAI;AAAA,qBAAI,OAAOA,IAAI,CAAC21C,QAAZ,KAAyB,UAA7B;AAAA,aAArB,CADJ,EACoE;AAChE,oBAAMzgD,KAAK,CAAC,8EAAD,CAAX;AACH;;AACD,iBAAKy/C,sBAAL,CAA4BrsC,WAA5B,GALkC,CAMlC;AACA;AACA;;;AACA,iBAAKqsC,sBAAL,GAA8B,KAAKD,gBAAL,CAAsBj8C,IAAtB,CAA2B,2DAAI,UAAAm9C,MAAM;AAAA,qBAAI,OAAI,CAACX,eAAL,CAAqB76C,IAArB,CAA0Bw7C,MAA1B,CAAJ;AAAA,aAAV,CAA3B,EAA6E,oEAAaF,gBAAb,CAA7E,EAA6G,8DAAO;AAAA,qBAAM,OAAI,CAACT,eAAL,CAAqBp+C,MAArB,GAA8B,CAApC;AAAA,aAAP,CAA7G,EAA4J,2DAAI;AAAA,qBAAM,OAAI,CAACo+C,eAAL,CAAqBnyC,IAArB,CAA0B,EAA1B,CAAN;AAAA,aAAJ,CAA5J,EAAsMsF,SAAtM,CAAgN,UAAAytC,WAAW,EAAI;AACzP,kBAAMC,KAAK,GAAG,OAAI,CAACC,cAAL,EAAd,CADyP,CAEzP;AACA;;;AACA,mBAAK,IAAI17C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGy7C,KAAK,CAACj/C,MAAN,GAAe,CAAnC,EAAsCwD,CAAC,EAAvC,EAA2C;AACvC,oBAAMoK,KAAK,GAAG,CAAC,OAAI,CAAC8vC,gBAAL,GAAwBl6C,CAAzB,IAA8By7C,KAAK,CAACj/C,MAAlD;AACA,oBAAMmJ,IAAI,GAAG81C,KAAK,CAACrxC,KAAD,CAAlB;;AACA,oBAAI,CAAC,OAAI,CAACuwC,gBAAL,CAAsBh1C,IAAtB,CAAD,IACAA,IAAI,CAAC21C,QAAL,GAAgBK,WAAhB,GAA8BhqB,IAA9B,GAAqCpsB,OAArC,CAA6Ci2C,WAA7C,MAA8D,CADlE,EACqE;AACjE,yBAAI,CAACI,aAAL,CAAmBxxC,KAAnB;;AACA;AACH;AACJ;;AACD,qBAAI,CAACwwC,eAAL,GAAuB,EAAvB;AACH,aAd6B,CAA9B;AAeA,mBAAO,IAAP;AACH;AACD;;;;;;;;2CAK+B;AAAA,gBAAhB9gD,OAAgB,uEAAN,IAAM;AAC3B,iBAAK4gD,WAAL,GAAmB5gD,OAAnB;AACA,mBAAO,IAAP;AACH;;;wCACa6L,I,EAAM;AAChB,gBAAMk2C,kBAAkB,GAAG,KAAK1B,WAAhC;AACA,iBAAK2B,gBAAL,CAAsBn2C,IAAtB;;AACA,gBAAI,KAAKw0C,WAAL,KAAqB0B,kBAAzB,EAA6C;AACzC,mBAAK7yC,MAAL,CAAYsX,IAAZ,CAAiB,KAAK45B,gBAAtB;AACH;AACJ;AACD;;;;;;;oCAIU/uB,K,EAAO;AAAA;;AACb,gBAAMkG,OAAO,GAAGlG,KAAK,CAACkG,OAAtB;AACA,gBAAMqK,SAAS,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,UAAjC,CAAlB;AACA,gBAAMqgB,iBAAiB,GAAGrgB,SAAS,CAACsgB,KAAV,CAAgB,UAAArgB,QAAQ,EAAI;AAClD,qBAAO,CAACxQ,KAAK,CAACwQ,QAAD,CAAN,IAAoB,OAAI,CAAC8e,oBAAL,CAA0Bl1C,OAA1B,CAAkCo2B,QAAlC,IAA8C,CAAC,CAA1E;AACH,aAFyB,CAA1B;;AAGA,oBAAQtK,OAAR;AACI,mBAAK,yDAAL;AACI,qBAAKwpB,MAAL,CAAYv6B,IAAZ;AACA;;AACJ,mBAAK,gEAAL;AACI,oBAAI,KAAKk6B,SAAL,IAAkBuB,iBAAtB,EAAyC;AACrC,uBAAKE,iBAAL;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL,mBAAK,8DAAL;AACI,oBAAI,KAAKzB,SAAL,IAAkBuB,iBAAtB,EAAyC;AACrC,uBAAKG,qBAAL;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL,mBAAK,iEAAL;AACI,oBAAI,KAAKd,WAAL,IAAoBW,iBAAxB,EAA2C;AACvC,uBAAKX,WAAL,KAAqB,KAArB,GAA6B,KAAKc,qBAAL,EAA7B,GAA4D,KAAKD,iBAAL,EAA5D;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL,mBAAK,gEAAL;AACI,oBAAI,KAAKb,WAAL,IAAoBW,iBAAxB,EAA2C;AACvC,uBAAKX,WAAL,KAAqB,KAArB,GAA6B,KAAKa,iBAAL,EAA7B,GAAwD,KAAKC,qBAAL,EAAxD;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL,mBAAK,0DAAL;AACI,oBAAI,KAAKxB,WAAL,IAAoBqB,iBAAxB,EAA2C;AACvC,uBAAKI,kBAAL;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL,mBAAK,yDAAL;AACI,oBAAI,KAAKzB,WAAL,IAAoBqB,iBAAxB,EAA2C;AACvC,uBAAKK,iBAAL;AACA;AACH,iBAHD,MAIK;AACD;AACH;;AACL;AACI,oBAAIL,iBAAiB,IAAI,6EAAe5wB,KAAf,EAAsB,UAAtB,CAAzB,EAA4D;AACxD;AACA;AACA,sBAAIA,KAAK,CAACkxB,GAAN,IAAalxB,KAAK,CAACkxB,GAAN,CAAU7/C,MAAV,KAAqB,CAAtC,EAAyC;AACrC,yBAAK69C,gBAAL,CAAsB/5B,IAAtB,CAA2B6K,KAAK,CAACkxB,GAAN,CAAUC,iBAAV,EAA3B;AACH,mBAFD,MAGK,IAAKjrB,OAAO,IAAI,uDAAX,IAAgBA,OAAO,IAAI,uDAA5B,IAAmCA,OAAO,IAAI,0DAAX,IAAmBA,OAAO,IAAI,0DAArE,EAA4E;AAC7E,yBAAKgpB,gBAAL,CAAsB/5B,IAAtB,CAA2BxL,MAAM,CAACynC,YAAP,CAAoBlrB,OAApB,CAA3B;AACH;AACJ,iBAVL,CAWI;AACA;;;AACA;AAjER;;AAmEA,iBAAKupB,eAAL,GAAuB,EAAvB;AACAzvB,iBAAK,CAACoG,cAAN;AACH;AACD;;;;;AAQA;qCACW;AACP,mBAAO,KAAKqpB,eAAL,CAAqBp+C,MAArB,GAA8B,CAArC;AACH;AACD;;;;+CACqB;AACjB,iBAAKggD,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B;AACH;AACD;;;;8CACoB;AAChB,iBAAKA,qBAAL,CAA2B,KAAKvC,MAAL,CAAYz9C,MAAZ,GAAqB,CAAhD,EAAmD,CAAC,CAApD;AACH;AACD;;;;8CACoB;AAChB,iBAAK09C,gBAAL,GAAwB,CAAxB,GAA4B,KAAKiC,kBAAL,EAA5B,GAAwD,KAAKM,qBAAL,CAA2B,CAA3B,CAAxD;AACH;AACD;;;;kDACwB;AACpB,iBAAKvC,gBAAL,GAAwB,CAAxB,IAA6B,KAAKE,KAAlC,GAA0C,KAAKgC,iBAAL,EAA1C,GACM,KAAKK,qBAAL,CAA2B,CAAC,CAA5B,CADN;AAEH;;;2CACgB92C,I,EAAM;AACnB,gBAAMo1C,SAAS,GAAG,KAAKW,cAAL,EAAlB;;AACA,gBAAMtxC,KAAK,GAAG,OAAOzE,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCo1C,SAAS,CAACx1C,OAAV,CAAkBI,IAAlB,CAAhD;AACA,gBAAM+2C,UAAU,GAAG3B,SAAS,CAAC3wC,KAAD,CAA5B,CAHmB,CAInB;;AACA,iBAAK+vC,WAAL,GAAmBuC,UAAU,IAAI,IAAd,GAAqB,IAArB,GAA4BA,UAA/C;AACA,iBAAKxC,gBAAL,GAAwB9vC,KAAxB;AACH;AACD;;;;;;;;gDAKsBuyC,K,EAAO;AACzB,iBAAKvC,KAAL,GAAa,KAAKwC,oBAAL,CAA0BD,KAA1B,CAAb,GAAgD,KAAKE,uBAAL,CAA6BF,KAA7B,CAAhD;AACH;AACD;;;;;;;;+CAKqBA,K,EAAO;AACxB,gBAAMlB,KAAK,GAAG,KAAKC,cAAL,EAAd;;AACA,iBAAK,IAAI17C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIy7C,KAAK,CAACj/C,MAA3B,EAAmCwD,CAAC,EAApC,EAAwC;AACpC,kBAAMoK,KAAK,GAAG,CAAC,KAAK8vC,gBAAL,GAAyByC,KAAK,GAAG38C,CAAjC,GAAsCy7C,KAAK,CAACj/C,MAA7C,IAAuDi/C,KAAK,CAACj/C,MAA3E;AACA,kBAAMmJ,IAAI,GAAG81C,KAAK,CAACrxC,KAAD,CAAlB;;AACA,kBAAI,CAAC,KAAKuwC,gBAAL,CAAsBh1C,IAAtB,CAAL,EAAkC;AAC9B,qBAAKi2C,aAAL,CAAmBxxC,KAAnB;AACA;AACH;AACJ;AACJ;AACD;;;;;;;;kDAKwBuyC,K,EAAO;AAC3B,iBAAKH,qBAAL,CAA2B,KAAKtC,gBAAL,GAAwByC,KAAnD,EAA0DA,KAA1D;AACH;AACD;;;;;;;;gDAKsBvyC,K,EAAO0yC,a,EAAe;AACxC,gBAAMrB,KAAK,GAAG,KAAKC,cAAL,EAAd;;AACA,gBAAI,CAACD,KAAK,CAACrxC,KAAD,CAAV,EAAmB;AACf;AACH;;AACD,mBAAO,KAAKuwC,gBAAL,CAAsBc,KAAK,CAACrxC,KAAD,CAA3B,CAAP,EAA4C;AACxCA,mBAAK,IAAI0yC,aAAT;;AACA,kBAAI,CAACrB,KAAK,CAACrxC,KAAD,CAAV,EAAmB;AACf;AACH;AACJ;;AACD,iBAAKwxC,aAAL,CAAmBxxC,KAAnB;AACH;AACD;;;;2CACiB;AACb,mBAAO,KAAK6vC,MAAL,YAAuB,uDAAvB,GAAmC,KAAKA,MAAL,CAAYrnB,OAAZ,EAAnC,GAA2D,KAAKqnB,MAAvE;AACH;;;8BAzFqB;AAClB,mBAAO,KAAKC,gBAAZ;AACH;AACD;;;;8BACiB;AACb,mBAAO,KAAKC,WAAZ;AACH;;;;;AAsFL;;;;;;;;;UAOM4C,0B;;;;;;;;;;;;;wCACY3yC,K,EAAO;AACjB,gBAAI,KAAKsyC,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgBM,iBAAhB;AACH;;AACD,0GAAoB5yC,KAApB;;AACA,gBAAI,KAAKsyC,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgBO,eAAhB;AACH;AACJ;;;;QAToCjD,c;AAYzC;;;;;;;;;UAOMkD,e;;;;;AACF,mCAAc;AAAA;;AAAA;;AACV,yCAASniD,SAAT;AACA,kBAAKk2B,OAAL,GAAe,SAAf;AAFU;AAGb;AACD;;;;;;;;yCAIemQ,M,EAAQ;AACnB,iBAAKnQ,OAAL,GAAemQ,MAAf;AACA,mBAAO,IAAP;AACH;;;wCACaz7B,I,EAAM;AAChB,+FAAoBA,IAApB;;AACA,gBAAI,KAAK+2C,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgBvrB,KAAhB,CAAsB,KAAKF,OAA3B;AACH;AACJ;;;;QAlByB+oB,c;AAqB9B;;;;;;;;AAOA;;;;;UAGMmD,iB,GACF,6BAAc;AAAA;;AACV;;;AAGA,aAAKC,gBAAL,GAAwB,KAAxB;AACH,O,EAEL;AACA;AACA;;AACA;;;;;;UAIMC,oB;AACF,sCAAYvZ,SAAZ,EAAuB;AAAA;;AACnB,eAAKA,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;;qCAMW5c,O,EAAS;AAChB;AACA;AACA,mBAAOA,OAAO,CAACsa,YAAR,CAAqB,UAArB,CAAP;AACH;AACD;;;;;;;;;;;oCAQUta,O,EAAS;AACf,mBAAOo2B,WAAW,CAACp2B,OAAD,CAAX,IAAwBjJ,gBAAgB,CAACiJ,OAAD,CAAhB,CAA0B6e,UAA1B,KAAyC,SAAxE;AACH;AACD;;;;;;;;;;qCAOW7e,O,EAAS;AAChB;AACA,gBAAI,CAAC,KAAK4c,SAAL,CAAehb,SAApB,EAA+B;AAC3B,qBAAO,KAAP;AACH;;AACD,gBAAMy0B,YAAY,GAAGC,eAAe,CAACC,SAAS,CAACv2B,OAAD,CAAV,CAApC;;AACA,gBAAIq2B,YAAJ,EAAkB;AACd;AACA,kBAAIG,gBAAgB,CAACH,YAAD,CAAhB,KAAmC,CAAC,CAAxC,EAA2C;AACvC,uBAAO,KAAP;AACH,eAJa,CAKd;;;AACA,kBAAI,CAAC,KAAKrxB,SAAL,CAAeqxB,YAAf,CAAL,EAAmC;AAC/B,uBAAO,KAAP;AACH;AACJ;;AACD,gBAAIpI,QAAQ,GAAGjuB,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,EAAf;AACA,gBAAIylD,aAAa,GAAGD,gBAAgB,CAACx2B,OAAD,CAApC;;AACA,gBAAIA,OAAO,CAACsa,YAAR,CAAqB,iBAArB,CAAJ,EAA6C;AACzC,qBAAOmc,aAAa,KAAK,CAAC,CAA1B;AACH;;AACD,gBAAIxI,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,QAA1C,EAAoD;AAChD;AACA;AACA;AACA,qBAAO,KAAP;AACH,aA1Be,CA2BhB;;;AACA,gBAAI,KAAKrR,SAAL,CAAe0N,MAAf,IAAyB,KAAK1N,SAAL,CAAe2N,GAAxC,IAA+C,CAACmM,wBAAwB,CAAC12B,OAAD,CAA5E,EAAuF;AACnF,qBAAO,KAAP;AACH;;AACD,gBAAIiuB,QAAQ,KAAK,OAAjB,EAA0B;AACtB;AACA;AACA,kBAAI,CAACjuB,OAAO,CAACsa,YAAR,CAAqB,UAArB,CAAL,EAAuC;AACnC,uBAAO,KAAP;AACH,eALqB,CAMtB;AACA;;;AACA,qBAAOmc,aAAa,KAAK,CAAC,CAA1B;AACH;;AACD,gBAAIxI,QAAQ,KAAK,OAAjB,EAA0B;AACtB;AACA;AACA;AACA;AACA,kBAAIwI,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACtB,uBAAO,KAAP;AACH,eAPqB,CAQtB;AACA;;;AACA,kBAAIA,aAAa,KAAK,IAAtB,EAA4B;AACxB,uBAAO,IAAP;AACH,eAZqB,CAatB;AACA;AACA;;;AACA,qBAAO,KAAK7Z,SAAL,CAAeqB,OAAf,IAA0Bje,OAAO,CAACsa,YAAR,CAAqB,UAArB,CAAjC;AACH;;AACD,mBAAOta,OAAO,CAACub,QAAR,IAAoB,CAA3B;AACH;AACD;;;;;;;;;;sCAOYvb,O,EAASS,M,EAAQ;AACzB;AACA;AACA,mBAAOk2B,sBAAsB,CAAC32B,OAAD,CAAtB,IAAmC,CAAC,KAAK5wB,UAAL,CAAgB4wB,OAAhB,CAApC,KACF,CAACS,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACy1B,gBAAxD,KAA6E,KAAKlxB,SAAL,CAAehF,OAAf,CAD3E,CAAP;AAEH;;;;;;AAELm2B,0BAAoB,CAAC9mD,IAArB,GAA4B,SAASunD,4BAAT,CAAsCrnD,CAAtC,EAAyC;AAAE,eAAO,KAAKA,CAAC,IAAI4mD,oBAAV,EAAgC,uDAAgB,8DAAhB,CAAhC,CAAP;AAA2E,OAAlJ;;AACAA,0BAAoB,CAAC98C,KAArB,GAA6B,yEAAmB;AAAEE,eAAO,EAAE,SAASq9C,4BAAT,GAAwC;AAAE,iBAAO,IAAIT,oBAAJ,CAAyB,+DAAS,8DAAT,CAAzB,CAAP;AAAsD,SAA3G;AAA6G78C,aAAK,EAAE68C,oBAApH;AAA0I9gC,kBAAU,EAAE;AAAtJ,OAAnB,CAA7B;;AACA8gC,0BAAoB,CAAC9lD,cAArB,GAAsC;AAAA,eAAM,CACxC;AAAEZ,cAAI,EAAE;AAAR,SADwC,CAAN;AAAA,OAAtC;AAGA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB0mD,oBAAzB,EAA+C,CAAC;AACrE1mD,cAAI,EAAE,wDAD+D;AAErEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAF+D,SAAD,CAA/C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAqC,SAH9B,EAGgC,IAHhC;AAGwC,OAHvD;AAId;;;;;;;AAKA,eAAS6mD,eAAT,CAAyBjgC,MAAzB,EAAiC;AAC7B,YAAI;AACA,iBAAOA,MAAM,CAACggC,YAAd;AACH,SAFD,CAGA,OAAOn7B,EAAP,EAAW;AACP,iBAAO,IAAP;AACH;AACJ;AACD;;;AACA,eAASk7B,WAAT,CAAqBp2B,OAArB,EAA8B;AAC1B;AACA;AACA,eAAO,CAAC,EAAEA,OAAO,CAACioB,WAAR,IAAuBjoB,OAAO,CAAC62B,YAA/B,IACL,OAAO72B,OAAO,CAAC82B,cAAf,KAAkC,UAAlC,IAAgD92B,OAAO,CAAC82B,cAAR,GAAyBxhD,MADtE,CAAR;AAEH;AACD;;;AACA,eAASyhD,mBAAT,CAA6B/2B,OAA7B,EAAsC;AAClC,YAAIiuB,QAAQ,GAAGjuB,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,EAAf;AACA,eAAOi9C,QAAQ,KAAK,OAAb,IACHA,QAAQ,KAAK,QADV,IAEHA,QAAQ,KAAK,QAFV,IAGHA,QAAQ,KAAK,UAHjB;AAIH;AACD;;;AACA,eAAS+I,aAAT,CAAuBh3B,OAAvB,EAAgC;AAC5B,eAAOi3B,cAAc,CAACj3B,OAAD,CAAd,IAA2BA,OAAO,CAACvwB,IAAR,IAAgB,QAAlD;AACH;AACD;;;AACA,eAASynD,gBAAT,CAA0Bl3B,OAA1B,EAAmC;AAC/B,eAAOm3B,eAAe,CAACn3B,OAAD,CAAf,IAA4BA,OAAO,CAACsa,YAAR,CAAqB,MAArB,CAAnC;AACH;AACD;;;AACA,eAAS2c,cAAT,CAAwBj3B,OAAxB,EAAiC;AAC7B,eAAOA,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,MAAkC,OAAzC;AACH;AACD;;;AACA,eAASmmD,eAAT,CAAyBn3B,OAAzB,EAAkC;AAC9B,eAAOA,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,MAAkC,GAAzC;AACH;AACD;;;AACA,eAASomD,gBAAT,CAA0Bp3B,OAA1B,EAAmC;AAC/B,YAAI,CAACA,OAAO,CAACsa,YAAR,CAAqB,UAArB,CAAD,IAAqCta,OAAO,CAACub,QAAR,KAAqBtpC,SAA9D,EAAyE;AACrE,iBAAO,KAAP;AACH;;AACD,YAAIspC,QAAQ,GAAGvb,OAAO,CAACwwB,YAAR,CAAqB,UAArB,CAAf,CAJ+B,CAK/B;;AACA,YAAIjV,QAAQ,IAAI,QAAhB,EAA0B;AACtB,iBAAO,KAAP;AACH;;AACD,eAAO,CAAC,EAAEA,QAAQ,IAAI,CAACzlC,KAAK,CAACub,QAAQ,CAACkqB,QAAD,EAAW,EAAX,CAAT,CAApB,CAAR;AACH;AACD;;;;;;AAIA,eAASib,gBAAT,CAA0Bx2B,OAA1B,EAAmC;AAC/B,YAAI,CAACo3B,gBAAgB,CAACp3B,OAAD,CAArB,EAAgC;AAC5B,iBAAO,IAAP;AACH,SAH8B,CAI/B;;;AACA,YAAMub,QAAQ,GAAGlqB,QAAQ,CAAC2O,OAAO,CAACwwB,YAAR,CAAqB,UAArB,KAAoC,EAArC,EAAyC,EAAzC,CAAzB;AACA,eAAO16C,KAAK,CAACylC,QAAD,CAAL,GAAkB,CAAC,CAAnB,GAAuBA,QAA9B;AACH;AACD;;;AACA,eAASmb,wBAAT,CAAkC12B,OAAlC,EAA2C;AACvC,YAAIiuB,QAAQ,GAAGjuB,OAAO,CAACiuB,QAAR,CAAiBj9C,WAAjB,EAAf;AACA,YAAIqmD,SAAS,GAAGpJ,QAAQ,KAAK,OAAb,IAAwBjuB,OAAO,CAACvwB,IAAhD;AACA,eAAO4nD,SAAS,KAAK,MAAd,IACAA,SAAS,KAAK,UADd,IAEApJ,QAAQ,KAAK,QAFb,IAGAA,QAAQ,KAAK,UAHpB;AAIH;AACD;;;;;;AAIA,eAAS0I,sBAAT,CAAgC32B,OAAhC,EAAyC;AACrC;AACA,YAAIg3B,aAAa,CAACh3B,OAAD,CAAjB,EAA4B;AACxB,iBAAO,KAAP;AACH;;AACD,eAAO+2B,mBAAmB,CAAC/2B,OAAD,CAAnB,IACHk3B,gBAAgB,CAACl3B,OAAD,CADb,IAEHA,OAAO,CAACsa,YAAR,CAAqB,iBAArB,CAFG,IAGH8c,gBAAgB,CAACp3B,OAAD,CAHpB;AAIH;AACD;;;AACA,eAASu2B,SAAT,CAAmBe,IAAnB,EAAyB;AACrB;AACA,eAAOA,IAAI,CAACC,aAAL,IAAsBD,IAAI,CAACC,aAAL,CAAmBnhC,WAAzC,IAAwDC,MAA/D;AACH;AAED;;;;;;;;AAOA;;;;;;;;;;;;UAUMmhC,S;AACF,2BAAYr6C,QAAZ,EAAsBs6C,QAAtB,EAAgCn2B,OAAhC,EAAyC3L,SAAzC,EAA0E;AAAA;;AAAA,cAAtB+hC,YAAsB,uEAAP,KAAO;;AAAA;;AACtE,eAAKv6C,QAAL,GAAgBA,QAAhB;AACA,eAAKs6C,QAAL,GAAgBA,QAAhB;AACA,eAAKn2B,OAAL,GAAeA,OAAf;AACA,eAAK3L,SAAL,GAAiBA,SAAjB;AACA,eAAKgiC,YAAL,GAAoB,KAApB,CALsE,CAMtE;;AACA,eAAKC,mBAAL,GAA2B;AAAA,mBAAM,OAAI,CAACC,wBAAL,EAAN;AAAA,WAA3B;;AACA,eAAKC,iBAAL,GAAyB;AAAA,mBAAM,OAAI,CAACC,yBAAL,EAAN;AAAA,WAAzB;;AACA,eAAKlnC,QAAL,GAAgB,IAAhB;;AACA,cAAI,CAAC6mC,YAAL,EAAmB;AACf,iBAAKM,aAAL;AACH;AACJ;AACD;;;;;;AASA;oCACU;AACN,gBAAMC,WAAW,GAAG,KAAKC,YAAzB;AACA,gBAAMC,SAAS,GAAG,KAAKC,UAAvB;;AACA,gBAAIH,WAAJ,EAAiB;AACbA,yBAAW,CAAC1yB,mBAAZ,CAAgC,OAAhC,EAAyC,KAAKqyB,mBAA9C;;AACA,kBAAIK,WAAW,CAACp0B,UAAhB,EAA4B;AACxBo0B,2BAAW,CAACp0B,UAAZ,CAAuBvM,WAAvB,CAAmC2gC,WAAnC;AACH;AACJ;;AACD,gBAAIE,SAAJ,EAAe;AACXA,uBAAS,CAAC5yB,mBAAV,CAA8B,OAA9B,EAAuC,KAAKuyB,iBAA5C;;AACA,kBAAIK,SAAS,CAACt0B,UAAd,EAA0B;AACtBs0B,yBAAS,CAACt0B,UAAV,CAAqBvM,WAArB,CAAiC6gC,SAAjC;AACH;AACJ;;AACD,iBAAKD,YAAL,GAAoB,KAAKE,UAAL,GAAkB,IAAtC;AACA,iBAAKT,YAAL,GAAoB,KAApB;AACH;AACD;;;;;;;;;0CAMgB;AAAA;;AACZ;AACA,gBAAI,KAAKA,YAAT,EAAuB;AACnB,qBAAO,IAAP;AACH;;AACD,iBAAKr2B,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,kBAAI,CAAC,OAAI,CAAC+yB,YAAV,EAAwB;AACpB,uBAAI,CAACA,YAAL,GAAoB,OAAI,CAACG,aAAL,EAApB;;AACA,uBAAI,CAACH,YAAL,CAAkB5yB,gBAAlB,CAAmC,OAAnC,EAA4C,OAAI,CAACsyB,mBAAjD;AACH;;AACD,kBAAI,CAAC,OAAI,CAACQ,UAAV,EAAsB;AAClB,uBAAI,CAACA,UAAL,GAAkB,OAAI,CAACC,aAAL,EAAlB;;AACA,uBAAI,CAACD,UAAL,CAAgB9yB,gBAAhB,CAAiC,OAAjC,EAA0C,OAAI,CAACwyB,iBAA/C;AACH;AACJ,aATD;;AAUA,gBAAI,KAAK36C,QAAL,CAAc0mB,UAAlB,EAA8B;AAC1B,mBAAK1mB,QAAL,CAAc0mB,UAAd,CAAyBy0B,YAAzB,CAAsC,KAAKJ,YAA3C,EAAyD,KAAK/6C,QAA9D;;AACA,mBAAKA,QAAL,CAAc0mB,UAAd,CAAyBy0B,YAAzB,CAAsC,KAAKF,UAA3C,EAAuD,KAAKj7C,QAAL,CAAco7C,WAArE;;AACA,mBAAKZ,YAAL,GAAoB,IAApB;AACH;;AACD,mBAAO,KAAKA,YAAZ;AACH;AACD;;;;;;;;;yDAM+B;AAAA;;AAC3B,mBAAO,IAAIhuC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,qBAAI,CAAC4uC,gBAAL,CAAsB;AAAA,uBAAM5uC,OAAO,CAAC,OAAI,CAAC6uC,mBAAL,EAAD,CAAb;AAAA,eAAtB;AACH,aAFM,CAAP;AAGH;AACD;;;;;;;;;+DAMqC;AAAA;;AACjC,mBAAO,IAAI9uC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,qBAAI,CAAC4uC,gBAAL,CAAsB;AAAA,uBAAM5uC,OAAO,CAAC,OAAI,CAACmuC,yBAAL,EAAD,CAAb;AAAA,eAAtB;AACH,aAFM,CAAP;AAGH;AACD;;;;;;;;;8DAMoC;AAAA;;AAChC,mBAAO,IAAIpuC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,qBAAI,CAAC4uC,gBAAL,CAAsB;AAAA,uBAAM5uC,OAAO,CAAC,OAAI,CAACiuC,wBAAL,EAAD,CAAb;AAAA,eAAtB;AACH,aAFM,CAAP;AAGH;AACD;;;;;;;;6CAKmBa,K,EAAO;AACtB;AACA,gBAAIC,OAAO,GAAG,KAAKx7C,QAAL,CAAcuqC,gBAAd,CAA+B,4BAAqBgR,KAArB,oCACvBA,KADuB,gCAE3BA,KAF2B,MAA/B,CAAd;;AAGA,iBAAK,IAAI5/C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6/C,OAAO,CAACrjD,MAA5B,EAAoCwD,CAAC,EAArC,EAAyC;AACrC;AACA,kBAAI6/C,OAAO,CAAC7/C,CAAD,CAAP,CAAWwhC,YAAX,qBAAqCoe,KAArC,EAAJ,EAAmD;AAC/Cp9C,uBAAO,CAACC,IAAR,CAAa,uDAAgDm9C,KAAhD,wCACaA,KADb,uEAAb,EAE2CC,OAAO,CAAC7/C,CAAD,CAFlD;AAGH,eAJD,MAKK,IAAI6/C,OAAO,CAAC7/C,CAAD,CAAP,CAAWwhC,YAAX,4BAA4Coe,KAA5C,EAAJ,EAA0D;AAC3Dp9C,uBAAO,CAACC,IAAR,CAAa,8DAAuDm9C,KAAvD,wCACaA,KADb,uEAAb,EAEiCC,OAAO,CAAC7/C,CAAD,CAFxC;AAGH;AACJ;;AACD,gBAAI4/C,KAAK,IAAI,OAAb,EAAsB;AAClB,qBAAOC,OAAO,CAACrjD,MAAR,GAAiBqjD,OAAO,CAAC,CAAD,CAAxB,GAA8B,KAAKC,wBAAL,CAA8B,KAAKz7C,QAAnC,CAArC;AACH;;AACD,mBAAOw7C,OAAO,CAACrjD,MAAR,GACHqjD,OAAO,CAACA,OAAO,CAACrjD,MAAR,GAAiB,CAAlB,CADJ,GAC2B,KAAKujD,uBAAL,CAA6B,KAAK17C,QAAlC,CADlC;AAEH;AACD;;;;;;;gDAIsB;AAClB;AACA,gBAAM27C,iBAAiB,GAAG,KAAK37C,QAAL,CAAc47C,aAAd,CAA4B,6CAA5B,CAA1B;;AAEA,gBAAID,iBAAJ,EAAuB;AACnB;AACA,kBAAIA,iBAAiB,CAACxe,YAAlB,qBAAJ,EAAyD;AACrDh/B,uBAAO,CAACC,IAAR,CAAa,mJAAb,EAEgCu9C,iBAFhC;AAGH,eANkB,CAOnB;AACA;;;AACA,kBAAI,CAAC,OAAOplD,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KACA,CAAC,KAAK+jD,QAAL,CAAcuB,WAAd,CAA0BF,iBAA1B,CADL,EACmD;AAC/Cx9C,uBAAO,CAACC,IAAR,2DAAuEu9C,iBAAvE;AACH;;AACDA,+BAAiB,CAAC7uB,KAAlB;AACA,qBAAO,IAAP;AACH;;AACD,mBAAO,KAAK8tB,yBAAL,EAAP;AACH;AACD;;;;;;;sDAI4B;AACxB,gBAAMe,iBAAiB,GAAG,KAAKG,kBAAL,CAAwB,OAAxB,CAA1B;;AACA,gBAAIH,iBAAJ,EAAuB;AACnBA,+BAAiB,CAAC7uB,KAAlB;AACH;;AACD,mBAAO,CAAC,CAAC6uB,iBAAT;AACH;AACD;;;;;;;qDAI2B;AACvB,gBAAMA,iBAAiB,GAAG,KAAKG,kBAAL,CAAwB,KAAxB,CAA1B;;AACA,gBAAIH,iBAAJ,EAAuB;AACnBA,+BAAiB,CAAC7uB,KAAlB;AACH;;AACD,mBAAO,CAAC,CAAC6uB,iBAAT;AACH;AACD;;;;;;wCAGc;AACV,mBAAO,KAAKnB,YAAZ;AACH;AACD;;;;mDACyBuB,I,EAAM;AAC3B,gBAAI,KAAKzB,QAAL,CAAcuB,WAAd,CAA0BE,IAA1B,KAAmC,KAAKzB,QAAL,CAAc0B,UAAd,CAAyBD,IAAzB,CAAvC,EAAuE;AACnE,qBAAOA,IAAP;AACH,aAH0B,CAI3B;AACA;;;AACA,gBAAI7R,QAAQ,GAAG6R,IAAI,CAAC7R,QAAL,IAAiB6R,IAAI,CAACrH,UAArC;;AACA,iBAAK,IAAI/4C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuuC,QAAQ,CAAC/xC,MAA7B,EAAqCwD,CAAC,EAAtC,EAA0C;AACtC,kBAAIsgD,aAAa,GAAG/R,QAAQ,CAACvuC,CAAD,CAAR,CAAY65C,QAAZ,KAAyB,KAAKh9B,SAAL,CAAei9B,YAAxC,GAChB,KAAKgG,wBAAL,CAA8BvR,QAAQ,CAACvuC,CAAD,CAAtC,CADgB,GAEhB,IAFJ;;AAGA,kBAAIsgD,aAAJ,EAAmB;AACf,uBAAOA,aAAP;AACH;AACJ;;AACD,mBAAO,IAAP;AACH;AACD;;;;kDACwBF,I,EAAM;AAC1B,gBAAI,KAAKzB,QAAL,CAAcuB,WAAd,CAA0BE,IAA1B,KAAmC,KAAKzB,QAAL,CAAc0B,UAAd,CAAyBD,IAAzB,CAAvC,EAAuE;AACnE,qBAAOA,IAAP;AACH,aAHyB,CAI1B;;;AACA,gBAAI7R,QAAQ,GAAG6R,IAAI,CAAC7R,QAAL,IAAiB6R,IAAI,CAACrH,UAArC;;AACA,iBAAK,IAAI/4C,CAAC,GAAGuuC,QAAQ,CAAC/xC,MAAT,GAAkB,CAA/B,EAAkCwD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C,kBAAIsgD,aAAa,GAAG/R,QAAQ,CAACvuC,CAAD,CAAR,CAAY65C,QAAZ,KAAyB,KAAKh9B,SAAL,CAAei9B,YAAxC,GAChB,KAAKiG,uBAAL,CAA6BxR,QAAQ,CAACvuC,CAAD,CAArC,CADgB,GAEhB,IAFJ;;AAGA,kBAAIsgD,aAAJ,EAAmB;AACf,uBAAOA,aAAP;AACH;AACJ;;AACD,mBAAO,IAAP;AACH;AACD;;;;0CACgB;AACZ,gBAAMC,MAAM,GAAG,KAAK1jC,SAAL,CAAesB,aAAf,CAA6B,KAA7B,CAAf;;AACA,iBAAKqiC,qBAAL,CAA2B,KAAKzoC,QAAhC,EAA0CwoC,MAA1C;;AACAA,kBAAM,CAACniC,SAAP,CAAiBtd,GAAjB,CAAqB,qBAArB;AACAy/C,kBAAM,CAACniC,SAAP,CAAiBtd,GAAjB,CAAqB,uBAArB;AACAy/C,kBAAM,CAACpO,YAAP,CAAoB,aAApB,EAAmC,MAAnC;AACA,mBAAOoO,MAAP;AACH;AACD;;;;;;;;gDAKsB3iC,S,EAAW2iC,M,EAAQ;AACrC;AACA;AACA3iC,qBAAS,GAAG2iC,MAAM,CAACpO,YAAP,CAAoB,UAApB,EAAgC,GAAhC,CAAH,GAA0CoO,MAAM,CAACtK,eAAP,CAAuB,UAAvB,CAAnD;AACH;AACD;;;;;;;wCAIcn8C,O,EAAS;AACnB,gBAAI,KAAKslD,YAAL,IAAqB,KAAKE,UAA9B,EAA0C;AACtC,mBAAKkB,qBAAL,CAA2B1mD,OAA3B,EAAoC,KAAKslD,YAAzC;;AACA,mBAAKoB,qBAAL,CAA2B1mD,OAA3B,EAAoC,KAAKwlD,UAAzC;AACH;AACJ;AACD;;;;2CACiBjpD,E,EAAI;AACjB,gBAAI,KAAKmyB,OAAL,CAAai4B,QAAjB,EAA2B;AACvBpqD,gBAAE;AACL,aAFD,MAGK;AACD,mBAAKmyB,OAAL,CAAaqkB,QAAb,CAAsBzuC,IAAtB,CAA2B,4DAAK,CAAL,CAA3B,EAAoC2P,SAApC,CAA8C1X,EAA9C;AACH;AACJ;;;8BAnPa;AAAE,mBAAO,KAAK0hB,QAAZ;AAAuB,W;4BAC3B7hB,K,EAAO;AACf,iBAAK6hB,QAAL,GAAgB7hB,KAAhB;;AACA,gBAAI,KAAKkpD,YAAL,IAAqB,KAAKE,UAA9B,EAA0C;AACtC,mBAAKkB,qBAAL,CAA2BtqD,KAA3B,EAAkC,KAAKkpD,YAAvC;;AACA,mBAAKoB,qBAAL,CAA2BtqD,KAA3B,EAAkC,KAAKopD,UAAvC;AACH;AACJ;;;;;AA8OL;;;;;;;UAKMoB,gB;AACF,kCAAY/B,QAAZ,EAAsBn2B,OAAtB,EAA+B3L,SAA/B,EAA0C;AAAA;;AACtC,eAAK8hC,QAAL,GAAgBA,QAAhB;AACA,eAAKn2B,OAAL,GAAeA,OAAf;AACA,eAAK3L,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;;;iCAOOqK,O,EAAuC;AAAA,gBAA9By5B,oBAA8B,uEAAP,KAAO;AAC1C,mBAAO,IAAIjC,SAAJ,CAAcx3B,OAAd,EAAuB,KAAKy3B,QAA5B,EAAsC,KAAKn2B,OAA3C,EAAoD,KAAK3L,SAAzD,EAAoE8jC,oBAApE,CAAP;AACH;;;;;;AAELD,sBAAgB,CAACnqD,IAAjB,GAAwB,SAASqqD,wBAAT,CAAkCnqD,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIiqD,gBAAV,EAA4B,uDAAgBrD,oBAAhB,CAA5B,EAAmE,uDAAgB,oDAAhB,CAAnE,EAAmG,uDAAgB,wDAAhB,CAAnG,CAAP;AAAuI,OAAtM;;AACAqD,sBAAgB,CAACngD,KAAjB,GAAyB,yEAAmB;AAAEE,eAAO,EAAE,SAASmgD,wBAAT,GAAoC;AAAE,iBAAO,IAAIF,gBAAJ,CAAqB,+DAASrD,oBAAT,CAArB,EAAqD,+DAAS,oDAAT,CAArD,EAAuE,+DAAS,wDAAT,CAAvE,CAAP;AAAoG,SAArJ;AAAuJ78C,aAAK,EAAEkgD,gBAA9J;AAAgLnkC,kBAAU,EAAE;AAA5L,OAAnB,CAAzB;;AACAmkC,sBAAgB,CAACnpD,cAAjB,GAAkC;AAAA,eAAM,CACpC;AAAEZ,cAAI,EAAE0mD;AAAR,SADoC,EAEpC;AAAE1mD,cAAI,EAAE;AAAR,SAFoC,EAGpC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAHoC,CAAN;AAAA,OAAlC;AAKA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBkpD,gBAAzB,EAA2C,CAAC;AACjE/pD,cAAI,EAAE,wDAD2D;AAEjEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAF2D,SAAD,CAA3C,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE0mD;AAAR,WAAD,EAAiC;AAAE1mD,gBAAI,EAAE;AAAR,WAAjC,EAA0D;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACvGtC,kBAAI,EAAE,oDADiG;AAEvGa,kBAAI,EAAE,CAAC,wDAAD;AAFiG,aAAD;AAA/B,WAA1D,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAOd;;;UACMqpD,Y;AACF,8BAAY/qD,WAAZ,EAAyBgrD,iBAAzB,EAA4CjkC,SAA5C,EAAuD;AAAA;;AACnD,eAAK/mB,WAAL,GAAmBA,WAAnB;AACA,eAAKgrD,iBAAL,GAAyBA,iBAAzB;AACA;;AACA,eAAKC,yBAAL,GAAiC,IAAjC;AACA,eAAKlkC,SAAL,GAAiBA,SAAjB;AACA,eAAKmkC,SAAL,GAAiB,KAAKF,iBAAL,CAAuBjkB,MAAvB,CAA8B,KAAK/mC,WAAL,CAAiBM,aAA/C,EAA8D,IAA9D,CAAjB;AACH;AACD;;;;;wCASc;AACV,iBAAK4qD,SAAL,CAAeC,OAAf,GADU,CAEV;AACA;;AACA,gBAAI,KAAKF,yBAAT,EAAoC;AAChC,mBAAKA,yBAAL,CAA+B5vB,KAA/B;;AACA,mBAAK4vB,yBAAL,GAAiC,IAAjC;AACH;AACJ;;;+CACoB;AACjB,iBAAKC,SAAL,CAAe9B,aAAf;;AACA,gBAAI,KAAKgC,WAAT,EAAsB;AAClB,mBAAKC,aAAL;AACH;AACJ;;;sCACW;AACR,gBAAI,CAAC,KAAKH,SAAL,CAAeI,WAAf,EAAL,EAAmC;AAC/B,mBAAKJ,SAAL,CAAe9B,aAAf;AACH;AACJ;;;sCACWr2C,O,EAAS;AACjB,gBAAMw4C,iBAAiB,GAAGx4C,OAAO,CAAC,aAAD,CAAjC;;AACA,gBAAIw4C,iBAAiB,IAAI,CAACA,iBAAiB,CAACC,WAAxC,IAAuD,KAAKJ,WAA5D,IACA,KAAKF,SAAL,CAAeI,WAAf,EADJ,EACkC;AAC9B,mBAAKD,aAAL;AACH;AACJ;;;0CACe;AACZ,iBAAKJ,yBAAL,GAAiC,KAAKlkC,SAAL,CAAesqB,aAAhD;AACA,iBAAK6Z,SAAL,CAAeO,4BAAf;AACH;;;8BAtCa;AAAE,mBAAO,KAAKP,SAAL,CAAelnD,OAAtB;AAAgC,W;4BACpC5D,K,EAAO;AAAE,iBAAK8qD,SAAL,CAAelnD,OAAf,GAAyB,oFAAsB5D,KAAtB,CAAzB;AAAwD;AAC7E;;;;;;;8BAIkB;AAAE,mBAAO,KAAKsrD,YAAZ;AAA2B,W;4BAC/BtrD,K,EAAO;AAAE,iBAAKsrD,YAAL,GAAoB,oFAAsBtrD,KAAtB,CAApB;AAAmD;;;;;;AAiChF2qD,kBAAY,CAACtqD,IAAb,GAAoB,SAASkrD,oBAAT,CAA8BhrD,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIoqD,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyBH,gBAAzB,CAArE,EAAiH,gEAAyB,wDAAzB,CAAjH,CAAP;AAA8J,OAArN;;AACAG,kBAAY,CAACnqD,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAEkqD,YAAR;AAAsBjqD,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6D6K,cAAM,EAAE;AAAE3H,iBAAO,EAAE,CAAC,cAAD,EAAiB,SAAjB,CAAX;AAAwConD,qBAAW,EAAE,CAAC,yBAAD,EAA4B,aAA5B;AAArD,SAArE;AAAwKjvC,gBAAQ,EAAE,CAAC,cAAD,CAAlL;AAAoM3a,gBAAQ,EAAE,CAAC,kEAAD;AAA9M,OAAzB,CAApB;;AACAupD,kBAAY,CAACtpD,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAEZ,cAAI,EAAE;AAAR,SADgC,EAEhC;AAAEA,cAAI,EAAE+pD;AAAR,SAFgC,EAGhC;AAAE/pD,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAHgC,CAAN;AAAA,OAA9B;;AAKAqpD,kBAAY,CAACn/C,cAAb,GAA8B;AAC1B5H,eAAO,EAAE,CAAC;AAAEnD,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD,CADiB;AAE1B0pD,mBAAW,EAAE,CAAC;AAAEvqD,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD;AAFa,OAA9B;AAIA;;AAAc,OAAC,YAAY;AAAE,wEAAyBqpD,YAAzB,EAAuC,CAAC;AAC7DlqD,cAAI,EAAE,uDADuD;AAE7Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,gBADX;AAECwa,oBAAQ,EAAE;AAFX,WAAD;AAFuD,SAAD,CAAvC,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAEtb,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE+pD;AAAR,WAA9B,EAA0D;AAAE/pD,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACvGtC,kBAAI,EAAE,oDADiG;AAEvGa,kBAAI,EAAE,CAAC,wDAAD;AAFiG,aAAD;AAA/B,WAA1D,CAAP;AAGF,SATS,EASP;AAAEsC,iBAAO,EAAE,CAAC;AACtBnD,gBAAI,EAAE,mDADgB;AAEtBa,gBAAI,EAAE,CAAC,cAAD;AAFgB,WAAD,CAAX;AAGV0pD,qBAAW,EAAE,CAAC;AACdvqD,gBAAI,EAAE,mDADQ;AAEda,gBAAI,EAAE,CAAC,yBAAD;AAFQ,WAAD;AAHH,SATO;AAeb,OAfF;AAiBd;;;;;;;;AAOA;;;;;;;;UAMMkqD,qB;;;;;AACF,uCAAYr9C,QAAZ,EAAsBs6C,QAAtB,EAAgCn2B,OAAhC,EAAyC3L,SAAzC,EAAoD8kC,iBAApD,EAAuEC,cAAvE,EAAuFj6B,MAAvF,EAA+F;AAAA;;AAAA;;AAC3F,wCAAMtjB,QAAN,EAAgBs6C,QAAhB,EAA0Bn2B,OAA1B,EAAmC3L,SAAnC,EAA8C8K,MAAM,CAACk6B,KAArD;AACA,kBAAKF,iBAAL,GAAyBA,iBAAzB;AACA,kBAAKC,cAAL,GAAsBA,cAAtB;;AACA,kBAAKD,iBAAL,CAAuBG,QAAvB;;AAJ2F;AAK9F;AACD;;;;;;AAWA;oCACU;AACN,iBAAKH,iBAAL,CAAuBI,UAAvB,CAAkC,IAAlC;;AACA;AACH;AACD;;;;oCACU;AACN,iBAAKH,cAAL,CAAoBI,YAApB,CAAiC,IAAjC;;AACA,iBAAKC,aAAL,CAAmB,IAAnB;AACH;AACD;;;;qCACW;AACP,iBAAKL,cAAL,CAAoBM,UAApB,CAA+B,IAA/B;;AACA,iBAAKD,aAAL,CAAmB,KAAnB;AACH;;;8BAxBa;AAAE,mBAAO,KAAKlqC,QAAZ;AAAuB,W;4BAC3B7hB,K,EAAO;AACf,iBAAK6hB,QAAL,GAAgB7hB,KAAhB;;AACA,gBAAI,KAAK6hB,QAAT,EAAmB;AACf,mBAAK4pC,iBAAL,CAAuBG,QAAvB,CAAgC,IAAhC;AACH,aAFD,MAGK;AACD,mBAAKH,iBAAL,CAAuBI,UAAvB,CAAkC,IAAlC;AACH;AACJ;;;;QAjB+BrD,S;AAmCpC;;;;;;;;AAOA;;;AACA,eAASyD,OAAT,CAAiBj7B,OAAjB,EAA0BzvB,QAA1B,EAAoC;AAChC,YAAI,EAAEyvB,OAAO,YAAYk7B,IAArB,CAAJ,EAAgC;AAC5B,iBAAO,IAAP;AACH;;AACD,YAAIC,IAAI,GAAGn7B,OAAX;;AACA,eAAOm7B,IAAI,IAAI,IAAR,IAAgB,EAAEA,IAAI,YAAYxP,OAAlB,CAAvB,EAAmD;AAC/CwP,cAAI,GAAGA,IAAI,CAACt3B,UAAZ;AACH;;AACD,eAAOs3B,IAAI,KAAKC,gBAAgB,GAC5BD,IAAI,CAACF,OAAL,CAAa1qD,QAAb,CAD4B,GACH8qD,eAAe,CAACF,IAAD,EAAO5qD,QAAP,CADjC,CAAX;AAEH;AACD;;;AACA,eAAS8qD,eAAT,CAAyBr7B,OAAzB,EAAkCzvB,QAAlC,EAA4C;AACxC,YAAI4qD,IAAI,GAAGn7B,OAAX;;AACA,eAAOm7B,IAAI,IAAI,IAAR,IAAgB,EAAEA,IAAI,YAAYxP,OAAhB,IAA2B2P,OAAO,CAACH,IAAD,EAAO5qD,QAAP,CAApC,CAAvB,EAA8E;AAC1E4qD,cAAI,GAAGA,IAAI,CAACt3B,UAAZ;AACH;;AACD,eAAQs3B,IAAI,IAAI,IAAhB;AACH;;AACD,UAAMC,gBAAgB,GAAG,OAAOzP,OAAP,IAAkB,WAAlB,IAAiC,CAAC,CAACA,OAAO,CAACC,SAAR,CAAkBqP,OAA9E;AACA;;AACA,eAASK,OAAT,CAAiBt7B,OAAjB,EAA0BzvB,QAA1B,EAAoC;AAChC,eAAOyvB,OAAO,CAACs7B,OAAR,GACHt7B,OAAO,CAACs7B,OAAR,CAAgB/qD,QAAhB,CADG,GAEHyvB,OAAO,CAAC,mBAAD,CAAP,CAA6BzvB,QAA7B,CAFJ;AAGH;AAED;;;;;;;;AAOA;;;;;;UAIMgrD,mC;AACF,uDAAc;AAAA;;AACV;AACA,eAAKC,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;uCACa1B,S,EAAW;AAAA;;AACpB;AACA,gBAAI,KAAK0B,SAAT,EAAoB;AAChB1B,uBAAS,CAACnkC,SAAV,CAAoB4P,mBAApB,CAAwC,OAAxC,EAAiD,KAAKi2B,SAAtD,EAAiE,IAAjE;AACH;;AACD,iBAAKA,SAAL,GAAiB,UAACC,CAAD;AAAA,qBAAO,OAAI,CAACC,UAAL,CAAgB5B,SAAhB,EAA2B2B,CAA3B,CAAP;AAAA,aAAjB;;AACA3B,qBAAS,CAACx4B,OAAV,CAAkB6D,iBAAlB,CAAoC,YAAM;AACtC20B,uBAAS,CAACnkC,SAAV,CAAoB2P,gBAApB,CAAqC,OAArC,EAA8C,OAAI,CAACk2B,SAAnD,EAA8D,IAA9D;AACH,aAFD;AAGH;AACD;;;;qCACW1B,S,EAAW;AAClB,gBAAI,CAAC,KAAK0B,SAAV,EAAqB;AACjB;AACH;;AACD1B,qBAAS,CAACnkC,SAAV,CAAoB4P,mBAApB,CAAwC,OAAxC,EAAiD,KAAKi2B,SAAtD,EAAiE,IAAjE;;AACA,iBAAKA,SAAL,GAAiB,IAAjB;AACH;AACD;;;;;;;;;;qCAOW1B,S,EAAW71B,K,EAAO;AACzB,gBAAMh0B,MAAM,GAAGg0B,KAAK,CAACh0B,MAArB;AACA,gBAAM0rD,aAAa,GAAG7B,SAAS,CAAC38C,QAAhC,CAFyB,CAGzB;AACA;;AACA,gBAAI,CAACw+C,aAAa,CAACvyC,QAAd,CAAuBnZ,MAAvB,CAAD,IAAmCgrD,OAAO,CAAChrD,MAAD,EAAS,sBAAT,CAAP,KAA4C,IAAnF,EAAyF;AACrF;AACA;AACA;AACAm1B,wBAAU,CAAC,YAAM;AACb;AACA,oBAAI00B,SAAS,CAAClnD,OAAV,IAAqB,CAAC+oD,aAAa,CAACvyC,QAAd,CAAuB0wC,SAAS,CAACnkC,SAAV,CAAoBsqB,aAA3C,CAA1B,EAAqF;AACjF6Z,2BAAS,CAAC/B,yBAAV;AACH;AACJ,eALS,CAAV;AAMH;AACJ;;;;;AAGL;;;;;;;;AAOA;;;;;UAGM6D,2B,GACF,uCAAc;AAAA;;AACV;;;;;AAKA,aAAKjB,KAAL,GAAa,KAAb;AACH,O;AAGL;;;;;;;;AAOA;;;AACA,UAAMkB,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;;;;;;;;AAOA;;UACMC,gB;AACF,oCAAc;AAAA;;AACV;AACA;AACA,eAAKC,eAAL,GAAuB,EAAvB;AACH;AACD;;;;;;;;mCAISjC,S,EAAW;AAChB;AACA,iBAAKiC,eAAL,GAAuB,KAAKA,eAAL,CAAqBplD,MAArB,CAA4B,UAACqlD,EAAD;AAAA,qBAAQA,EAAE,KAAKlC,SAAf;AAAA,aAA5B,CAAvB;AACA,gBAAImC,KAAK,GAAG,KAAKF,eAAjB;;AACA,gBAAIE,KAAK,CAAC3mD,MAAV,EAAkB;AACd2mD,mBAAK,CAACA,KAAK,CAAC3mD,MAAN,GAAe,CAAhB,CAAL,CAAwB4mD,QAAxB;AACH;;AACDD,iBAAK,CAACpjD,IAAN,CAAWihD,SAAX;;AACAA,qBAAS,CAACqC,OAAV;AACH;AACD;;;;;;;qCAIWrC,S,EAAW;AAClBA,qBAAS,CAACoC,QAAV;;AACA,gBAAMD,KAAK,GAAG,KAAKF,eAAnB;AACA,gBAAMjjD,CAAC,GAAGmjD,KAAK,CAAC59C,OAAN,CAAcy7C,SAAd,CAAV;;AACA,gBAAIhhD,CAAC,KAAK,CAAC,CAAX,EAAc;AACVmjD,mBAAK,CAACljD,MAAN,CAAaD,CAAb,EAAgB,CAAhB;;AACA,kBAAImjD,KAAK,CAAC3mD,MAAV,EAAkB;AACd2mD,qBAAK,CAACA,KAAK,CAAC3mD,MAAN,GAAe,CAAhB,CAAL,CAAwB6mD,OAAxB;AACH;AACJ;AACJ;;;;;;AAELL,sBAAgB,CAACzsD,IAAjB,GAAwB,SAAS+sD,wBAAT,CAAkC7sD,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIusD,gBAAV,GAAP;AAAuC,OAAtG;;AACAA,sBAAgB,CAACziD,KAAjB,GAAyB,yEAAmB;AAAEE,eAAO,EAAE,SAAS6iD,wBAAT,GAAoC;AAAE,iBAAO,IAAIN,gBAAJ,EAAP;AAAgC,SAAjF;AAAmFxiD,aAAK,EAAEwiD,gBAA1F;AAA4GzmC,kBAAU,EAAE;AAAxH,OAAnB,CAAzB;AACA;;AAAc,OAAC,YAAY;AAAE,wEAAyBymC,gBAAzB,EAA2C,CAAC;AACjErsD,cAAI,EAAE,wDAD2D;AAEjEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAF2D,SAAD,CAA3C,EAGrB,YAAY;AAAE,iBAAO,EAAP;AAAY,SAHL,EAGO,IAHP;AAGe,OAH9B;AAKd;;;;;;;;AAOA;;;UACMgnC,4B;AACF,8CAAY5E,QAAZ,EAAsBn2B,OAAtB,EAA+Bm5B,iBAA/B,EAAkD9kC,SAAlD,EAA6D+kC,cAA7D,EAA6E;AAAA;;AACzE,eAAKjD,QAAL,GAAgBA,QAAhB;AACA,eAAKn2B,OAAL,GAAeA,OAAf;AACA,eAAKm5B,iBAAL,GAAyBA,iBAAzB;AACA,eAAK9kC,SAAL,GAAiBA,SAAjB,CAJyE,CAKzE;;AACA,eAAK+kC,cAAL,GAAsBA,cAAc,IAAI,IAAIa,mCAAJ,EAAxC;AACH;;;;iCACMv7B,O,EAAqD;AAAA,gBAA5CS,MAA4C,uEAAnC,IAAIm7B,2BAAJ,EAAmC;AACxD,gBAAIU,YAAJ;;AACA,gBAAI,OAAO77B,MAAP,KAAkB,SAAtB,EAAiC;AAC7B67B,0BAAY,GAAG,IAAIV,2BAAJ,EAAf;AACAU,0BAAY,CAAC3B,KAAb,GAAqBl6B,MAArB;AACH,aAHD,MAIK;AACD67B,0BAAY,GAAG77B,MAAf;AACH;;AACD,mBAAO,IAAI+5B,qBAAJ,CAA0Bx6B,OAA1B,EAAmC,KAAKy3B,QAAxC,EAAkD,KAAKn2B,OAAvD,EAAgE,KAAK3L,SAArE,EAAgF,KAAK8kC,iBAArF,EAAwG,KAAKC,cAA7G,EAA6H4B,YAA7H,CAAP;AACH;;;;;;AAELD,kCAA4B,CAAChtD,IAA7B,GAAoC,SAASktD,oCAAT,CAA8ChtD,CAA9C,EAAiD;AAAE,eAAO,KAAKA,CAAC,IAAI8sD,4BAAV,EAAwC,uDAAgBlG,oBAAhB,CAAxC,EAA+E,uDAAgB,oDAAhB,CAA/E,EAA+G,uDAAgB2F,gBAAhB,CAA/G,EAAkJ,uDAAgB,wDAAhB,CAAlJ,EAA6K,uDAAgBD,yBAAhB,EAA2C,CAA3C,CAA7K,CAAP;AAAqO,OAA5T;;AACAQ,kCAA4B,CAAChjD,KAA7B,GAAqC,yEAAmB;AAAEE,eAAO,EAAE,SAASgjD,oCAAT,GAAgD;AAAE,iBAAO,IAAIF,4BAAJ,CAAiC,+DAASlG,oBAAT,CAAjC,EAAiE,+DAAS,oDAAT,CAAjE,EAAmF,+DAAS2F,gBAAT,CAAnF,EAA+G,+DAAS,wDAAT,CAA/G,EAAmI,+DAASD,yBAAT,EAAoC,CAApC,CAAnI,CAAP;AAAoL,SAAjP;AAAmPviD,aAAK,EAAE+iD,4BAA1P;AAAwRhnC,kBAAU,EAAE;AAApS,OAAnB,CAArC;;AACAgnC,kCAA4B,CAAChsD,cAA7B,GAA8C;AAAA,eAAM,CAChD;AAAEZ,cAAI,EAAE0mD;AAAR,SADgD,EAEhD;AAAE1mD,cAAI,EAAE;AAAR,SAFgD,EAGhD;AAAEA,cAAI,EAAEqsD;AAAR,SAHgD,EAIhD;AAAErsD,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAJgD,EAKhD;AAAEb,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACurD,yBAAD;AAAtB,WAArB;AAA/B,SALgD,CAAN;AAAA,OAA9C;AAOA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBQ,4BAAzB,EAAuD,CAAC;AAC7E5sD,cAAI,EAAE,wDADuE;AAE7Ea,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFuE,SAAD,CAAvD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE0mD;AAAR,WAAD,EAAiC;AAAE1mD,gBAAI,EAAE;AAAR,WAAjC,EAA0D;AAAEA,gBAAI,EAAEqsD;AAAR,WAA1D,EAAsF;AAAErsD,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACnItC,kBAAI,EAAE,oDAD6H;AAEnIa,kBAAI,EAAE,CAAC,wDAAD;AAF6H,aAAD;AAA/B,WAAtF,EAGX;AAAEb,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClCtC,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACurD,yBAAD;AAFP,aAFkC;AAA/B,WAHW,CAAP;AAQF,SAXS,EAWP,IAXO;AAWC,OAXhB;AAad;;;;;;;;;AAOA,UAAMW,4BAA4B,GAAG,IAAI,4DAAJ,CAAmB,sBAAnB,EAA2C;AAC5EnnC,kBAAU,EAAE,MADgE;AAE5E9b,eAAO,EAAEkjD;AAFmE,OAA3C,CAArC;AAIA;;AACA,eAASA,oCAAT,GAAgD;AAC5C,eAAO,IAAP;AACH;AACD;;;AACA,UAAMC,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AAEA;;;;;;;;UAOMC,a;AACF,+BAAYC,YAAZ,EAA0Bt7B,OAA1B,EAAmC3L,SAAnC,EAA8CknC,eAA9C,EAA+D;AAAA;;AAC3D,eAAKv7B,OAAL,GAAeA,OAAf;AACA,eAAKu7B,eAAL,GAAuBA,eAAvB,CAF2D,CAG3D;AACA;AACA;;AACA,eAAKlnC,SAAL,GAAiBA,SAAjB;AACA,eAAKmnC,YAAL,GAAoBF,YAAY,IAAI,KAAKG,kBAAL,EAApC;AACH;;;;mCACQ17C,O,EAAkB;AAAA;;AACvB,gBAAM27C,cAAc,GAAG,KAAKH,eAA5B;AACA,gBAAII,UAAJ;AACA,gBAAIp6B,QAAJ;;AAHuB,+CAANvyB,IAAM;AAANA,kBAAM;AAAA;;AAIvB,gBAAIA,IAAI,CAACgF,MAAL,KAAgB,CAAhB,IAAqB,OAAOhF,IAAI,CAAC,CAAD,CAAX,KAAmB,QAA5C,EAAsD;AAClDuyB,sBAAQ,GAAGvyB,IAAI,CAAC,CAAD,CAAf;AACH,aAFD,MAGK;AACA2sD,wBADA,GACwB3sD,IADxB;AACYuyB,sBADZ,GACwBvyB,IADxB;AAEJ;;AACD,iBAAK2hD,KAAL;AACAiL,wBAAY,CAAC,KAAKC,gBAAN,CAAZ;;AACA,gBAAI,CAACF,UAAL,EAAiB;AACbA,wBAAU,GACLD,cAAc,IAAIA,cAAc,CAACC,UAAlC,GAAgDD,cAAc,CAACC,UAA/D,GAA4E,QADhF;AAEH;;AACD,gBAAIp6B,QAAQ,IAAI,IAAZ,IAAoBm6B,cAAxB,EAAwC;AACpCn6B,sBAAQ,GAAGm6B,cAAc,CAACn6B,QAA1B;AACH,aAlBsB,CAmBvB;;;AACA,iBAAKi6B,YAAL,CAAkB7R,YAAlB,CAA+B,WAA/B,EAA4CgS,UAA5C,EApBuB,CAqBvB;AACA;AACA;AACA;AACA;;;AACA,mBAAO,KAAK37B,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACxC,qBAAO,IAAIxb,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BszC,4BAAY,CAAC,OAAI,CAACC,gBAAN,CAAZ;AACA,uBAAI,CAACA,gBAAL,GAAwB/3B,UAAU,CAAC,YAAM;AACrC,yBAAI,CAAC03B,YAAL,CAAkBtyB,WAAlB,GAAgCnpB,OAAhC;AACAuI,yBAAO;;AACP,sBAAI,OAAOiZ,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,2BAAI,CAACs6B,gBAAL,GAAwB/3B,UAAU,CAAC;AAAA,6BAAM,OAAI,CAAC6sB,KAAL,EAAN;AAAA,qBAAD,EAAqBpvB,QAArB,CAAlC;AACH;AACJ,iBANiC,EAM/B,GAN+B,CAAlC;AAOH,eATM,CAAP;AAUH,aAXM,CAAP;AAYH;AACD;;;;;;;;kCAKQ;AACJ,gBAAI,KAAKi6B,YAAT,EAAuB;AACnB,mBAAKA,YAAL,CAAkBtyB,WAAlB,GAAgC,EAAhC;AACH;AACJ;;;wCACa;AACV0yB,wBAAY,CAAC,KAAKC,gBAAN,CAAZ;;AACA,gBAAI,KAAKL,YAAL,IAAqB,KAAKA,YAAL,CAAkBj5B,UAA3C,EAAuD;AACnD,mBAAKi5B,YAAL,CAAkBj5B,UAAlB,CAA6BvM,WAA7B,CAAyC,KAAKwlC,YAA9C;;AACA,mBAAKA,YAAL,GAAoB,IAApB;AACH;AACJ;;;+CACoB;AACjB,gBAAMM,YAAY,GAAG,4BAArB;;AACA,gBAAMC,gBAAgB,GAAG,KAAK1nC,SAAL,CAAe2nC,sBAAf,CAAsCF,YAAtC,CAAzB;;AACA,gBAAMG,MAAM,GAAG,KAAK5nC,SAAL,CAAesB,aAAf,CAA6B,KAA7B,CAAf,CAHiB,CAIjB;;;AACA,iBAAK,IAAIne,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGukD,gBAAgB,CAAC/nD,MAArC,EAA6CwD,CAAC,EAA9C,EAAkD;AAC9CukD,8BAAgB,CAACvkD,CAAD,CAAhB,CAAoB+qB,UAApB,CAA+BvM,WAA/B,CAA2C+lC,gBAAgB,CAACvkD,CAAD,CAA3D;AACH;;AACDykD,kBAAM,CAACrmC,SAAP,CAAiBtd,GAAjB,CAAqBwjD,YAArB;AACAG,kBAAM,CAACrmC,SAAP,CAAiBtd,GAAjB,CAAqB,qBAArB;AACA2jD,kBAAM,CAACtS,YAAP,CAAoB,aAApB,EAAmC,MAAnC;AACAsS,kBAAM,CAACtS,YAAP,CAAoB,WAApB,EAAiC,QAAjC;;AACA,iBAAKt1B,SAAL,CAAemB,IAAf,CAAoBK,WAApB,CAAgComC,MAAhC;;AACA,mBAAOA,MAAP;AACH;;;;;;AAELZ,mBAAa,CAACttD,IAAd,GAAqB,SAASmuD,qBAAT,CAA+BjuD,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIotD,aAAV,EAAyB,uDAAgBH,4BAAhB,EAA8C,CAA9C,CAAzB,EAA2E,uDAAgB,oDAAhB,CAA3E,EAA2G,uDAAgB,wDAAhB,CAA3G,EAAsI,uDAAgBE,8BAAhB,EAAgD,CAAhD,CAAtI,CAAP;AAAmM,OAA5P;;AACAC,mBAAa,CAACtjD,KAAd,GAAsB,yEAAmB;AAAEE,eAAO,EAAE,SAASikD,qBAAT,GAAiC;AAAE,iBAAO,IAAIb,aAAJ,CAAkB,+DAASH,4BAAT,EAAuC,CAAvC,CAAlB,EAA6D,+DAAS,oDAAT,CAA7D,EAA+E,+DAAS,wDAAT,CAA/E,EAAmG,+DAASE,8BAAT,EAAyC,CAAzC,CAAnG,CAAP;AAAyJ,SAAvM;AAAyMpjD,aAAK,EAAEqjD,aAAhN;AAA+NtnC,kBAAU,EAAE;AAA3O,OAAnB,CAAtB;;AACAsnC,mBAAa,CAACtsD,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAEZ,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACksD,4BAAD;AAAtB,WAArB;AAA/B,SADiC,EAEjC;AAAE/sD,cAAI,EAAE;AAAR,SAFiC,EAGjC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAHiC,EAIjC;AAAEb,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAACosD,8BAAD;AAAtB,WAArB;AAA/B,SAJiC,CAAN;AAAA,OAA/B;AAMA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBC,aAAzB,EAAwC,CAAC;AAC9DltD,cAAI,EAAE,wDADwD;AAE9Da,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFwD,SAAD,CAAxC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC9CtC,kBAAI,EAAE;AADwC,aAAD,EAE9C;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACksD,4BAAD;AAFP,aAF8C;AAA/B,WAAD,EAKX;AAAE/sD,gBAAI,EAAE;AAAR,WALW,EAKc;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAC3DtC,kBAAI,EAAE,oDADqD;AAE3Da,kBAAI,EAAE,CAAC,wDAAD;AAFqD,aAAD;AAA/B,WALd,EAQX;AAAEb,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClCtC,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAACosD,8BAAD;AAFP,aAFkC;AAA/B,WARW,CAAP;AAaF,SAhBS,EAgBP,IAhBO;AAgBC,OAhBhB;AAiBd;;;;;;UAIMe,W;AACF,6BAAY7uD,WAAZ,EAAyB8uD,cAAzB,EAAyCrnB,gBAAzC,EAA2D/U,OAA3D,EAAoE;AAAA;;AAChE,eAAK1yB,WAAL,GAAmBA,WAAnB;AACA,eAAK8uD,cAAL,GAAsBA,cAAtB;AACA,eAAKrnB,gBAAL,GAAwBA,gBAAxB;AACA,eAAK/U,OAAL,GAAeA,OAAf;AACA,eAAKq8B,WAAL,GAAmB,QAAnB;AACH;AACD;;;;;wCA2Bc;AACV,gBAAI,KAAKC,aAAT,EAAwB;AACpB,mBAAKA,aAAL,CAAmB72C,WAAnB;AACH;AACJ;;;8BA9BgB;AAAE,mBAAO,KAAK42C,WAAZ;AAA0B,W;4BAC9B3uD,K,EAAO;AAAA;;AAClB,iBAAK2uD,WAAL,GAAmB3uD,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,WAA7B,GAA2CA,KAA3C,GAAmD,QAAtE;;AACA,gBAAI,KAAK2uD,WAAL,KAAqB,KAAzB,EAAgC;AAC5B,kBAAI,KAAKC,aAAT,EAAwB;AACpB,qBAAKA,aAAL,CAAmB72C,WAAnB;;AACA,qBAAK62C,aAAL,GAAqB,IAArB;AACH;AACJ,aALD,MAMK,IAAI,CAAC,KAAKA,aAAV,EAAyB;AAC1B,mBAAKA,aAAL,GAAqB,KAAKt8B,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACtD,uBAAO,OAAI,CAACkR,gBAAL,CACFR,OADE,CACM,OAAI,CAACjnC,WADX,EAEFiY,SAFE,CAEQ,YAAM;AACjB;AACA,sBAAMg3C,WAAW,GAAG,OAAI,CAACjvD,WAAL,CAAiBM,aAAjB,CAA+Bs7B,WAAnD,CAFiB,CAGjB;AACA;;AACA,sBAAIqzB,WAAW,KAAK,OAAI,CAACC,sBAAzB,EAAiD;AAC7C,2BAAI,CAACJ,cAAL,CAAoBK,QAApB,CAA6BF,WAA7B,EAA0C,OAAI,CAACF,WAA/C;;AACA,2BAAI,CAACG,sBAAL,GAA8BD,WAA9B;AACH;AACJ,iBAXM,CAAP;AAYH,eAboB,CAArB;AAcH;AACJ;;;;;;AAOLJ,iBAAW,CAACpuD,IAAZ,GAAmB,SAAS2uD,mBAAT,CAA6BzuD,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAIkuD,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyBd,aAAzB,CAApE,EAA6G,gEAAyB,sEAAzB,CAA7G,EAA+J,gEAAyB,oDAAzB,CAA/J,CAAP;AAAiN,OAAtQ;;AACAc,iBAAW,CAACjuD,IAAZ,GAAmB,gEAAyB;AAAEC,YAAI,EAAEguD,WAAR;AAAqB/tD,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2D6K,cAAM,EAAE;AAAE0iD,oBAAU,EAAE,CAAC,aAAD,EAAgB,YAAhB;AAAd,SAAnE;AAAkHlyC,gBAAQ,EAAE,CAAC,aAAD;AAA5H,OAAzB,CAAnB;;AACA0yC,iBAAW,CAACptD,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAEZ,cAAI,EAAE;AAAR,SAD+B,EAE/B;AAAEA,cAAI,EAAEktD;AAAR,SAF+B,EAG/B;AAAEltD,cAAI,EAAE;AAAR,SAH+B,EAI/B;AAAEA,cAAI,EAAE;AAAR,SAJ+B,CAAN;AAAA,OAA7B;;AAMAguD,iBAAW,CAACjjD,cAAZ,GAA6B;AACzByiD,kBAAU,EAAE,CAAC;AAAExtD,cAAI,EAAE,mDAAR;AAAea,cAAI,EAAE,CAAC,aAAD;AAArB,SAAD;AADa,OAA7B;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBmtD,WAAzB,EAAsC,CAAC;AAC5DhuD,cAAI,EAAE,uDADsD;AAE5Da,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE,eADX;AAECwa,oBAAQ,EAAE;AAFX,WAAD;AAFsD,SAAD,CAAtC,EAMrB,YAAY;AAAE,iBAAO,CAAC;AAAEtb,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAEktD;AAAR,WAA9B,EAAuD;AAAEltD,gBAAI,EAAE;AAAR,WAAvD,EAAyF;AAAEA,gBAAI,EAAE;AAAR,WAAzF,CAAP;AAA2H,SANpH,EAMsH;AAAEwtD,oBAAU,EAAE,CAAC;AACtJxtD,gBAAI,EAAE,mDADgJ;AAEtJa,gBAAI,EAAE,CAAC,aAAD;AAFgJ,WAAD;AAAd,SANtH;AASb,OATF;AAWd;;;;;;;;AAOA;;;;;;;;;AAOA,eAAS2tD,+BAAT,CAAyCh6B,KAAzC,EAAgD;AAC5C,eAAOA,KAAK,CAACi6B,OAAN,KAAkB,CAAzB;AACH;AAED;;;;;;;AAOA;AACA;;;AACA,UAAMC,eAAe,GAAG,GAAxB;AACA;;AACA,UAAMC,6BAA6B,GAAG,IAAI,4DAAJ,CAAmB,mCAAnB,CAAtC;AACA;;;;;AAIA,UAAMC,2BAA2B,GAAG,8FAAgC;AAChEp9B,eAAO,EAAE,IADuD;AAEhEqqB,eAAO,EAAE;AAFuD,OAAhC,CAApC;AAIA;;UACMgT,Y;AACF,8BAAYh9B,OAAZ,EAAqBsb,SAArB;AACA;AACAnnB,gBAFA,EAEUjX,OAFV,EAEmB;AAAA;;AAAA;;AACf,eAAK8iB,OAAL,GAAeA,OAAf;AACA,eAAKsb,SAAL,GAAiBA,SAAjB;AACA;;AACA,eAAK7S,OAAL,GAAe,IAAf;AACA;;AACA,eAAKw0B,cAAL,GAAsB,KAAtB;AACA;;AACA,eAAKC,YAAL,GAAoB,IAAItiD,GAAJ,EAApB;AACA;;AACA,eAAKuiD,sBAAL,GAA8B,CAA9B;AACA;;;;;;;AAMA,eAAKC,2BAAL,GAAmC,IAAIxiD,GAAJ,EAAnC;AACA;;;;;AAIA,eAAKyiD,wBAAL,GAAgC,YAAM;AAClC;AACA,mBAAI,CAACC,gBAAL,GAAwB,IAAxB;;AACA,mBAAI,CAACC,8BAAL,CAAoC,UAApC;AACH,WAJD;AAKA;;;;;;AAIA,eAAKC,0BAAL,GAAkC,UAAC76B,KAAD,EAAW;AACzC;AACA;AACA,gBAAI,CAAC,OAAI,CAAC26B,gBAAV,EAA4B;AACxB;AACA;AACA,kBAAMz1B,MAAM,GAAG80B,+BAA+B,CAACh6B,KAAD,CAA/B,GAAyC,UAAzC,GAAsD,OAArE;;AACA,qBAAI,CAAC46B,8BAAL,CAAoC11B,MAApC;AACH;AACJ,WATD;AAUA;;;;;;AAIA,eAAK41B,2BAAL,GAAmC,UAAC96B,KAAD,EAAW;AAC1C;AACA;AACA;AACA,gBAAI,OAAI,CAAC+6B,eAAL,IAAwB,IAA5B,EAAkC;AAC9B9B,0BAAY,CAAC,OAAI,CAAC8B,eAAN,CAAZ;AACH;;AACD,mBAAI,CAACJ,gBAAL,GAAwBK,SAAS,CAACh7B,KAAD,CAAjC;AACA,mBAAI,CAAC+6B,eAAL,GAAuB55B,UAAU,CAAC;AAAA,qBAAM,OAAI,CAACw5B,gBAAL,GAAwB,IAA9B;AAAA,aAAD,EAAqCT,eAArC,CAAjC;AACH,WATD;AAUA;;;;;;AAIA,eAAKe,oBAAL,GAA4B,YAAM;AAC9B;AACA;AACA,mBAAI,CAACX,cAAL,GAAsB,IAAtB;AACA,mBAAI,CAACY,qBAAL,GAA6B/5B,UAAU,CAAC;AAAA,qBAAM,OAAI,CAACm5B,cAAL,GAAsB,KAA5B;AAAA,aAAD,CAAvC;AACH,WALD;AAMA;;;;;;AAIA,eAAKa,6BAAL,GAAqC,UAACn7B,KAAD,EAAW;AAC5C,gBAAMh0B,MAAM,GAAGgvD,SAAS,CAACh7B,KAAD,CAAxB;AACA,gBAAMo7B,OAAO,GAAGp7B,KAAK,CAACx0B,IAAN,KAAe,OAAf,GAAyB,OAAI,CAAC6vD,QAA9B,GAAyC,OAAI,CAACC,OAA9D,CAF4C,CAG5C;;AACA,iBAAK,IAAIv/B,OAAO,GAAG/vB,MAAnB,EAA2B+vB,OAA3B,EAAoCA,OAAO,GAAGA,OAAO,CAACw/B,aAAtD,EAAqE;AACjEH,qBAAO,CAACxQ,IAAR,CAAa,OAAb,EAAmB5qB,KAAnB,EAA0BjE,OAA1B;AACH;AACJ,WAPD;;AAQA,eAAKrK,SAAL,GAAiBF,QAAjB;AACA,eAAKgqC,cAAL,GAAsB,CAACjhD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACkhD,aAA3D,KAA6E;AAAE;AAArG;AACH;;;;kCACO1/B,O,EAAgC;AAAA,gBAAvB2/B,aAAuB,uEAAP,KAAO;AACpC,gBAAMzwD,aAAa,GAAG,4EAAc8wB,OAAd,CAAtB,CADoC,CAEpC;;AACA,gBAAI,CAAC,KAAK4c,SAAL,CAAehb,SAAhB,IAA6B1yB,aAAa,CAACyjD,QAAd,KAA2B,CAA5D,EAA+D;AAC3D,qBAAO,gDAAG,IAAH,CAAP;AACH,aALmC,CAMpC;AACA;AACA;;;AACA,gBAAMxK,QAAQ,GAAG,6EAAej5C,aAAf,KAAiC,KAAKgnB,YAAL,EAAlD;;AACA,gBAAM0pC,UAAU,GAAG,KAAKpB,YAAL,CAAkB9kD,GAAlB,CAAsBxK,aAAtB,CAAnB,CAVoC,CAWpC;;;AACA,gBAAI0wD,UAAJ,EAAgB;AACZ,kBAAID,aAAJ,EAAmB;AACf;AACA;AACA;AACAC,0BAAU,CAACD,aAAX,GAA2B,IAA3B;AACH;;AACD,qBAAOC,UAAU,CAAC7iB,OAAlB;AACH,aApBmC,CAqBpC;;;AACA,gBAAMD,IAAI,GAAG;AACT6iB,2BAAa,EAAEA,aADN;AAET5iB,qBAAO,EAAE,IAAI,4CAAJ,EAFA;AAGToL,sBAAQ,EAARA;AAHS,aAAb;;AAKA,iBAAKqW,YAAL,CAAkBlhD,GAAlB,CAAsBpO,aAAtB,EAAqC4tC,IAArC;;AACA,iBAAK+iB,wBAAL,CAA8B/iB,IAA9B;;AACA,mBAAOA,IAAI,CAACC,OAAZ;AACH;;;yCACc/c,O,EAAS;AACpB,gBAAM9wB,aAAa,GAAG,4EAAc8wB,OAAd,CAAtB;;AACA,gBAAM8/B,WAAW,GAAG,KAAKtB,YAAL,CAAkB9kD,GAAlB,CAAsBxK,aAAtB,CAApB;;AACA,gBAAI4wD,WAAJ,EAAiB;AACbA,yBAAW,CAAC/iB,OAAZ,CAAoBpjB,QAApB;;AACA,mBAAKomC,WAAL,CAAiB7wD,aAAjB;;AACA,mBAAKsvD,YAAL,WAAyBtvD,aAAzB;;AACA,mBAAK8wD,sBAAL,CAA4BF,WAA5B;AACH;AACJ;;;mCACQ9/B,O,EAASka,M,EAAQ17B,O,EAAS;AAC/B,gBAAMtP,aAAa,GAAG,4EAAc8wB,OAAd,CAAtB;;AACA,iBAAK6+B,8BAAL,CAAoC3kB,MAApC,EAF+B,CAG/B;;;AACA,gBAAI,OAAOhrC,aAAa,CAAC+6B,KAArB,KAA+B,UAAnC,EAA+C;AAC3C;AACA/6B,2BAAa,CAAC+6B,KAAd,CAAoBzrB,OAApB;AACH;AACJ;;;wCACa;AAAA;;AACV,iBAAKggD,YAAL,CAAkBhnD,OAAlB,CAA0B,UAAC8lC,KAAD,EAAQtd,OAAR;AAAA,qBAAoB,OAAI,CAACia,cAAL,CAAoBja,OAApB,CAApB;AAAA,aAA1B;AACH;AACD;;;;yCACe;AACX,mBAAO,KAAKrK,SAAL,IAAkBF,QAAzB;AACH;AACD;;;;uCACa;AACT,gBAAMQ,GAAG,GAAG,KAAKC,YAAL,EAAZ;;AACA,mBAAOD,GAAG,CAACG,WAAJ,IAAmBC,MAA1B;AACH;;;uCACY2J,O,EAASG,S,EAAW8/B,S,EAAW;AACxC,gBAAIA,SAAJ,EAAe;AACXjgC,qBAAO,CAAC9I,SAAR,CAAkBtd,GAAlB,CAAsBumB,SAAtB;AACH,aAFD,MAGK;AACDH,qBAAO,CAAC9I,SAAR,CAAkBrd,MAAlB,CAAyBsmB,SAAzB;AACH;AACJ;;;0CACe8D,K,EAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAI,KAAK8F,OAAT,EAAkB;AACd,qBAAO,KAAKA,OAAZ;AACH;;AACD,gBAAI,KAAKw0B,cAAL,IAAuB,KAAK2B,gBAAhC,EAAkD;AAC9C,qBAAO,KAAKA,gBAAZ;AACH,aAFD,MAGK,IAAI,KAAKC,iBAAL,CAAuBl8B,KAAvB,CAAJ,EAAmC;AACpC,qBAAO,OAAP;AACH,aAFI,MAGA;AACD,qBAAO,SAAP;AACH;AACJ;AACD;;;;;;;;sCAKYjE,O,EAASka,M,EAAQ;AACzB,iBAAKkmB,YAAL,CAAkBpgC,OAAlB,EAA2B,aAA3B,EAA0C,CAAC,CAACka,MAA5C;;AACA,iBAAKkmB,YAAL,CAAkBpgC,OAAlB,EAA2B,mBAA3B,EAAgDka,MAAM,KAAK,OAA3D;;AACA,iBAAKkmB,YAAL,CAAkBpgC,OAAlB,EAA2B,sBAA3B,EAAmDka,MAAM,KAAK,UAA9D;;AACA,iBAAKkmB,YAAL,CAAkBpgC,OAAlB,EAA2B,mBAA3B,EAAgDka,MAAM,KAAK,OAA3D;;AACA,iBAAKkmB,YAAL,CAAkBpgC,OAAlB,EAA2B,qBAA3B,EAAkDka,MAAM,KAAK,SAA7D;AACH;AACD;;;;;;;;yDAK+BA,M,EAAQ;AAAA;;AACnC,iBAAK5Y,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,qBAAI,CAAC4E,OAAL,GAAemQ,MAAf;;AACA,kBAAI,OAAI,CAACulB,cAAL,KAAwB;AAAE;AAA9B,gBAA+C;AAC3C;AACA;AACA;AACA,yBAAI,CAACY,gBAAL,GAAwBj7B,UAAU,CAAC;AAAA,2BAAM,OAAI,CAAC2E,OAAL,GAAe,IAArB;AAAA,mBAAD,EAA4B,CAA5B,CAAlC;AACH;AACJ,aARD;AASH;AACD;;;;;;;;4CAKkB9F,K,EAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAMq8B,WAAW,GAAGrB,SAAS,CAACh7B,KAAD,CAA7B;AACA,mBAAO,KAAK26B,gBAAL,YAAiC1D,IAAjC,IAAyCoF,WAAW,YAAYpF,IAAhE,KACFoF,WAAW,KAAK,KAAK1B,gBAArB,IAAyC0B,WAAW,CAACl3C,QAAZ,CAAqB,KAAKw1C,gBAA1B,CADvC,CAAP;AAEH;AACD;;;;;;;;mCAKS36B,K,EAAOjE,O,EAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAM8/B,WAAW,GAAG,KAAKtB,YAAL,CAAkB9kD,GAAlB,CAAsBsmB,OAAtB,CAApB;;AACA,gBAAI,CAAC8/B,WAAD,IAAiB,CAACA,WAAW,CAACH,aAAb,IAA8B3/B,OAAO,KAAKi/B,SAAS,CAACh7B,KAAD,CAAxE,EAAkF;AAC9E;AACH;;AACD,gBAAMiW,MAAM,GAAG,KAAKqmB,eAAL,CAAqBt8B,KAArB,CAAf;;AACA,iBAAK87B,WAAL,CAAiB//B,OAAjB,EAA0Bka,MAA1B;;AACA,iBAAKsmB,WAAL,CAAiBV,WAAW,CAAC/iB,OAA7B,EAAsC7C,MAAtC;;AACA,iBAAKgmB,gBAAL,GAAwBhmB,MAAxB;AACH;AACD;;;;;;;;kCAKQjW,K,EAAOjE,O,EAAS;AACpB;AACA;AACA,gBAAM8/B,WAAW,GAAG,KAAKtB,YAAL,CAAkB9kD,GAAlB,CAAsBsmB,OAAtB,CAApB;;AACA,gBAAI,CAAC8/B,WAAD,IAAiBA,WAAW,CAACH,aAAZ,IAA6B17B,KAAK,CAACw8B,aAAN,YAA+BvF,IAA5D,IACjBl7B,OAAO,CAAC5W,QAAR,CAAiB6a,KAAK,CAACw8B,aAAvB,CADJ,EAC4C;AACxC;AACH;;AACD,iBAAKV,WAAL,CAAiB//B,OAAjB;;AACA,iBAAKwgC,WAAL,CAAiBV,WAAW,CAAC/iB,OAA7B,EAAsC,IAAtC;AACH;;;sCACWA,O,EAAS7C,M,EAAQ;AACzB,iBAAK5Y,OAAL,CAAa6b,GAAb,CAAiB;AAAA,qBAAMJ,OAAO,CAAC3jB,IAAR,CAAa8gB,MAAb,CAAN;AAAA,aAAjB;AACH;;;mDACwB4lB,W,EAAa;AAAA;;AAClC,gBAAI,CAAC,KAAKljB,SAAL,CAAehb,SAApB,EAA+B;AAC3B;AACH;;AACD,gBAAMumB,QAAQ,GAAG2X,WAAW,CAAC3X,QAA7B;AACA,gBAAMuY,sBAAsB,GAAG,KAAKhC,2BAAL,CAAiChlD,GAAjC,CAAqCyuC,QAArC,KAAkD,CAAjF;;AACA,gBAAI,CAACuY,sBAAL,EAA6B;AACzB,mBAAKp/B,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjCgjB,wBAAQ,CAAC7iB,gBAAT,CAA0B,OAA1B,EAAmC,OAAI,CAAC85B,6BAAxC,EAAuEf,2BAAvE;AACAlW,wBAAQ,CAAC7iB,gBAAT,CAA0B,MAA1B,EAAkC,OAAI,CAAC85B,6BAAvC,EAAsEf,2BAAtE;AACH,eAHD;AAIH;;AACD,iBAAKK,2BAAL,CAAiCphD,GAAjC,CAAqC6qC,QAArC,EAA+CuY,sBAAsB,GAAG,CAAxE,EAZkC,CAalC;;;AACA,gBAAI,EAAE,KAAKjC,sBAAP,KAAkC,CAAtC,EAAyC;AACrC;AACA;AACA,mBAAKn9B,OAAL,CAAa6D,iBAAb,CAA+B,YAAM;AACjC,oBAAM1P,QAAQ,GAAG,OAAI,CAACS,YAAL,EAAjB;;AACA,oBAAMG,MAAM,GAAG,OAAI,CAACE,UAAL,EAAf;;AACAd,wBAAQ,CAAC6P,gBAAT,CAA0B,SAA1B,EAAqC,OAAI,CAACq5B,wBAA1C,EAAoEN,2BAApE;AACA5oC,wBAAQ,CAAC6P,gBAAT,CAA0B,WAA1B,EAAuC,OAAI,CAACw5B,0BAA5C,EAAwET,2BAAxE;AACA5oC,wBAAQ,CAAC6P,gBAAT,CAA0B,YAA1B,EAAwC,OAAI,CAACy5B,2BAA7C,EAA0EV,2BAA1E;AACAhoC,sBAAM,CAACiP,gBAAP,CAAwB,OAAxB,EAAiC,OAAI,CAAC45B,oBAAtC;AACH,eAPD;AAQH;AACJ;;;iDACsBY,W,EAAa;AAChC,gBAAM3X,QAAQ,GAAG2X,WAAW,CAAC3X,QAA7B;;AACA,gBAAI,KAAKuW,2BAAL,CAAiChiD,GAAjC,CAAqCyrC,QAArC,CAAJ,EAAoD;AAChD,kBAAMuY,sBAAsB,GAAG,KAAKhC,2BAAL,CAAiChlD,GAAjC,CAAqCyuC,QAArC,CAA/B;;AACA,kBAAIuY,sBAAsB,GAAG,CAA7B,EAAgC;AAC5B,qBAAKhC,2BAAL,CAAiCphD,GAAjC,CAAqC6qC,QAArC,EAA+CuY,sBAAsB,GAAG,CAAxE;AACH,eAFD,MAGK;AACDvY,wBAAQ,CAAC5iB,mBAAT,CAA6B,OAA7B,EAAsC,KAAK65B,6BAA3C,EAA0Ef,2BAA1E;AACAlW,wBAAQ,CAAC5iB,mBAAT,CAA6B,MAA7B,EAAqC,KAAK65B,6BAA1C,EAAyEf,2BAAzE;;AACA,qBAAKK,2BAAL,WAAwCvW,QAAxC;AACH;AACJ,aAZ+B,CAahC;;;AACA,gBAAI,CAAC,GAAE,KAAKsW,sBAAZ,EAAoC;AAChC,kBAAMhpC,UAAQ,GAAG,KAAKS,YAAL,EAAjB;;AACA,kBAAMG,OAAM,GAAG,KAAKE,UAAL,EAAf;;AACAd,wBAAQ,CAAC8P,mBAAT,CAA6B,SAA7B,EAAwC,KAAKo5B,wBAA7C,EAAuEN,2BAAvE;;AACA5oC,wBAAQ,CAAC8P,mBAAT,CAA6B,WAA7B,EAA0C,KAAKu5B,0BAA/C,EAA2ET,2BAA3E;;AACA5oC,wBAAQ,CAAC8P,mBAAT,CAA6B,YAA7B,EAA2C,KAAKw5B,2BAAhD,EAA6EV,2BAA7E;;AACAhoC,qBAAM,CAACkP,mBAAP,CAA2B,OAA3B,EAAoC,KAAK25B,oBAAzC,EANgC,CAOhC;;;AACAhC,0BAAY,CAAC,KAAKiC,qBAAN,CAAZ;AACAjC,0BAAY,CAAC,KAAK8B,eAAN,CAAZ;AACA9B,0BAAY,CAAC,KAAKmD,gBAAN,CAAZ;AACH;AACJ;;;;;;AAEL/B,kBAAY,CAACjvD,IAAb,GAAoB,SAASsxD,oBAAT,CAA8BpxD,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI+uD,YAAV,EAAwB,uDAAgB,oDAAhB,CAAxB,EAAwD,uDAAgB,8DAAhB,CAAxD,EAA0F,uDAAgB,wDAAhB,EAA0B,CAA1B,CAA1F,EAAwH,uDAAgBF,6BAAhB,EAA+C,CAA/C,CAAxH,CAAP;AAAoL,OAA3O;;AACAE,kBAAY,CAACjlD,KAAb,GAAqB,yEAAmB;AAAEE,eAAO,EAAE,SAASonD,oBAAT,GAAgC;AAAE,iBAAO,IAAIrC,YAAJ,CAAiB,+DAAS,oDAAT,CAAjB,EAAmC,+DAAS,8DAAT,CAAnC,EAAuD,+DAAS,wDAAT,EAAmB,CAAnB,CAAvD,EAA8E,+DAASF,6BAAT,EAAwC,CAAxC,CAA9E,CAAP;AAAmI,SAAhL;AAAkL9kD,aAAK,EAAEglD,YAAzL;AAAuMjpC,kBAAU,EAAE;AAAnN,OAAnB,CAArB;;AACAipC,kBAAY,CAACjuD,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAEZ,cAAI,EAAE;AAAR,SADgC,EAEhC;AAAEA,cAAI,EAAE;AAAR,SAFgC,EAGhC;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAHgC,EAIhC;AAAEb,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC8tD,6BAAD;AAAtB,WAArB;AAA/B,SAJgC,CAAN;AAAA,OAA9B;AAMA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBE,YAAzB,EAAuC,CAAC;AAC7D7uD,cAAI,EAAE,wDADuD;AAE7Da,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFuD,SAAD,CAAvC,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE;AAAR,WAAD,EAA0B;AAAEA,gBAAI,EAAE;AAAR,WAA1B,EAAqD;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClGtC,kBAAI,EAAE;AAD4F,aAAD,EAElG;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFkG;AAA/B,WAArD,EAKX;AAAEb,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AAClCtC,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECa,kBAAI,EAAE,CAAC8tD,6BAAD;AAFP,aAFkC;AAA/B,WALW,CAAP;AAUF,SAbS,EAaP,IAbO;AAaC,OAbhB;AAcd;;;AACA,eAASa,SAAT,CAAmBh7B,KAAnB,EAA0B;AACtB;AACA;AACA,eAAQA,KAAK,CAAC28B,YAAN,GAAqB38B,KAAK,CAAC28B,YAAN,GAAqB,CAArB,CAArB,GAA+C38B,KAAK,CAACh0B,MAA7D;AACH;AACD;;;;;;;;;;;UASM4wD,e;AACF,iCAAYjyD,WAAZ,EAAyB+qC,aAAzB,EAAwC;AAAA;;AACpC,eAAK/qC,WAAL,GAAmBA,WAAnB;AACA,eAAK+qC,aAAL,GAAqBA,aAArB;AACA,eAAKmnB,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACH;;;;4CACiB;AAAA;;AACd,gBAAM9gC,OAAO,GAAG,KAAKpxB,WAAL,CAAiBM,aAAjC;AACA,iBAAK6xD,oBAAL,GAA4B,KAAKpnB,aAAL,CAAmBK,OAAnB,CAA2Bha,OAA3B,EAAoCA,OAAO,CAAC2yB,QAAR,KAAqB,CAArB,IAA0B3yB,OAAO,CAACsa,YAAR,CAAqB,wBAArB,CAA9D,EACvBzzB,SADuB,CACb,UAAAqzB,MAAM;AAAA,qBAAI,OAAI,CAAC4mB,cAAL,CAAoBn7C,IAApB,CAAyBu0B,MAAzB,CAAJ;AAAA,aADO,CAA5B;AAEH;;;wCACa;AACV,iBAAKP,aAAL,CAAmBM,cAAnB,CAAkC,KAAKrrC,WAAvC;;AACA,gBAAI,KAAKmyD,oBAAT,EAA+B;AAC3B,mBAAKA,oBAAL,CAA0Bh6C,WAA1B;AACH;AACJ;;;;;;AAEL85C,qBAAe,CAACxxD,IAAhB,GAAuB,SAAS2xD,uBAAT,CAAiCzxD,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIsxD,eAAV,EAA2B,gEAAyB,wDAAzB,CAA3B,EAAwE,gEAAyBvC,YAAzB,CAAxE,CAAP;AAAyH,OAAtL;;AACAuC,qBAAe,CAACrxD,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAEoxD,eAAR;AAAyBnxD,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,wBAAL,EAA+B,EAA/B,CAAD,EAAqC,CAAC,EAAD,EAAK,wBAAL,EAA+B,EAA/B,CAArC,CAApC;AAA8Gob,eAAO,EAAE;AAAEg2C,wBAAc,EAAE;AAAlB;AAAvH,OAAzB,CAAvB;;AACAD,qBAAe,CAACxwD,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAEZ,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE6uD;AAAR,SAFmC,CAAN;AAAA,OAAjC;;AAIAuC,qBAAe,CAACrmD,cAAhB,GAAiC;AAC7BsmD,sBAAc,EAAE,CAAC;AAAErxD,cAAI,EAAE;AAAR,SAAD;AADa,OAAjC;AAGA;;AAAc,OAAC,YAAY;AAAE,wEAAyBoxD,eAAzB,EAA0C,CAAC;AAChEpxD,cAAI,EAAE,uDAD0D;AAEhEa,cAAI,EAAE,CAAC;AACCC,oBAAQ,EAAE;AADX,WAAD;AAF0D,SAAD,CAA1C,EAKrB,YAAY;AAAE,iBAAO,CAAC;AAAEd,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE6uD;AAAR,WAA9B,CAAP;AAA+D,SALxD,EAK0D;AAAEwC,wBAAc,EAAE,CAAC;AAC9FrxD,gBAAI,EAAE;AADwF,WAAD;AAAlB,SAL1D;AAOb,OAPF;AASd;;;;;;;;AAOA;;;AACA,UAAMwxD,wBAAwB,GAAG,kCAAjC;AACA;;AACA,UAAMC,wBAAwB,GAAG,kCAAjC;AACA;;AACA,UAAMC,mCAAmC,GAAG,0BAA5C;AACA;;;;;;;;;;;;UAWMC,wB;AACF,0CAAYxkB,SAAZ,EAAuBnnB,QAAvB,EAAiC;AAAA;;AAC7B,eAAKmnB,SAAL,GAAiBA,SAAjB;AACA,eAAKjnB,SAAL,GAAiBF,QAAjB;AACH;AACD;;;;;gDACsB;AAClB,gBAAI,CAAC,KAAKmnB,SAAL,CAAehb,SAApB,EAA+B;AAC3B,qBAAO;AAAE;AAAT;AACH,aAHiB,CAIlB;AACA;AACA;;;AACA,gBAAM5K,WAAW,GAAG,KAAKrB,SAAL,CAAesB,aAAf,CAA6B,KAA7B,CAApB;;AACAD,uBAAW,CAACmF,KAAZ,CAAkB4G,eAAlB,GAAoC,YAApC;AACA/L,uBAAW,CAACmF,KAAZ,CAAkByiB,QAAlB,GAA6B,UAA7B;;AACA,iBAAKjpB,SAAL,CAAemB,IAAf,CAAoBK,WAApB,CAAgCH,WAAhC,EAVkB,CAWlB;AACA;AACA;AACA;;;AACA,gBAAMqqC,cAAc,GAAG,KAAK1rC,SAAL,CAAeS,WAAf,IAA8BC,MAArD;AACA,gBAAMe,aAAa,GAAIiqC,cAAc,IAAIA,cAAc,CAACtqC,gBAAlC,GAClBsqC,cAAc,CAACtqC,gBAAf,CAAgCC,WAAhC,CADkB,GAC6B,IADnD;AAEA,gBAAMsqC,aAAa,GAAG,CAAClqC,aAAa,IAAIA,aAAa,CAAC2L,eAA/B,IAAkD,EAAnD,EAAuD1E,OAAvD,CAA+D,IAA/D,EAAqE,EAArE,CAAtB;;AACA,iBAAK1I,SAAL,CAAemB,IAAf,CAAoBQ,WAApB,CAAgCN,WAAhC;;AACA,oBAAQsqC,aAAR;AACI,mBAAK,YAAL;AAAmB,uBAAO;AAAE;AAAT;;AACnB,mBAAK,kBAAL;AAAyB,uBAAO;AAAE;AAAT;AAF7B;;AAIA,mBAAO;AAAE;AAAT;AACH;AACD;;;;iEACuC;AACnC,gBAAI,KAAK1kB,SAAL,CAAehb,SAAf,IAA4B,KAAKjM,SAAL,CAAemB,IAA/C,EAAqD;AACjD,kBAAMyqC,WAAW,GAAG,KAAK5rC,SAAL,CAAemB,IAAf,CAAoBI,SAAxC,CADiD,CAEjD;;AACAqqC,yBAAW,CAAC1nD,MAAZ,CAAmBsnD,mCAAnB;AACAI,yBAAW,CAAC1nD,MAAZ,CAAmBonD,wBAAnB;AACAM,yBAAW,CAAC1nD,MAAZ,CAAmBqnD,wBAAnB;AACA,kBAAMM,IAAI,GAAG,KAAKC,mBAAL,EAAb;;AACA,kBAAID,IAAI,KAAK;AAAE;AAAf,gBAAqC;AACjCD,6BAAW,CAAC3nD,GAAZ,CAAgBunD,mCAAhB;AACAI,6BAAW,CAAC3nD,GAAZ,CAAgBqnD,wBAAhB;AACH,iBAHD,MAIK,IAAIO,IAAI,KAAK;AAAE;AAAf,gBAAqC;AACtCD,6BAAW,CAAC3nD,GAAZ,CAAgBunD,mCAAhB;AACAI,6BAAW,CAAC3nD,GAAZ,CAAgBsnD,wBAAhB;AACH;AACJ;AACJ;;;;;;AAELE,8BAAwB,CAAC/xD,IAAzB,GAAgC,SAASqyD,gCAAT,CAA0CnyD,CAA1C,EAA6C;AAAE,eAAO,KAAKA,CAAC,IAAI6xD,wBAAV,EAAoC,uDAAgB,8DAAhB,CAApC,EAAsE,uDAAgB,wDAAhB,CAAtE,CAAP;AAA0G,OAAzL;;AACAA,8BAAwB,CAAC/nD,KAAzB,GAAiC,yEAAmB;AAAEE,eAAO,EAAE,SAASmoD,gCAAT,GAA4C;AAAE,iBAAO,IAAIN,wBAAJ,CAA6B,+DAAS,8DAAT,CAA7B,EAAiD,+DAAS,wDAAT,CAAjD,CAAP;AAA8E,SAAvI;AAAyI9nD,aAAK,EAAE8nD,wBAAhJ;AAA0K/rC,kBAAU,EAAE;AAAtL,OAAnB,CAAjC;;AACA+rC,8BAAwB,CAAC/wD,cAAzB,GAA0C;AAAA,eAAM,CAC5C;AAAEZ,cAAI,EAAE;AAAR,SAD4C,EAE5C;AAAEA,cAAI,EAAEwC,SAAR;AAAmBF,oBAAU,EAAE,CAAC;AAAEtC,gBAAI,EAAE,oDAAR;AAAgBa,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAAD;AAA/B,SAF4C,CAAN;AAAA,OAA1C;AAIA;;;AAAc,OAAC,YAAY;AAAE,wEAAyB8wD,wBAAzB,EAAmD,CAAC;AACzE3xD,cAAI,EAAE,wDADmE;AAEzEa,cAAI,EAAE,CAAC;AAAE+kB,sBAAU,EAAE;AAAd,WAAD;AAFmE,SAAD,CAAnD,EAGrB,YAAY;AAAE,iBAAO,CAAC;AAAE5lB,gBAAI,EAAE;AAAR,WAAD,EAA4B;AAAEA,gBAAI,EAAEwC,SAAR;AAAmBF,sBAAU,EAAE,CAAC;AACzEtC,kBAAI,EAAE,oDADmE;AAEzEa,kBAAI,EAAE,CAAC,wDAAD;AAFmE,aAAD;AAA/B,WAA5B,CAAP;AAGF,SANS,EAMP,IANO;AAMC,OANhB;AAQd;;;;;;;;;UAOMqxD,U,GACF,oBAAYpsC,wBAAZ,EAAsC;AAAA;;AAClCA,gCAAwB,CAACK,oCAAzB;AACH,O;;AAEL+rC,gBAAU,CAACtvC,IAAX,GAAkB,+DAAwB;AAAE5iB,YAAI,EAAEkyD;AAAR,OAAxB,CAAlB;AACAA,gBAAU,CAACrvC,IAAX,GAAkB,+DAAwB;AAAE/Y,eAAO,EAAE,SAASqoD,kBAAT,CAA4BryD,CAA5B,EAA+B;AAAE,iBAAO,KAAKA,CAAC,IAAIoyD,UAAV,EAAsB,uDAAgBP,wBAAhB,CAAtB,CAAP;AAA0E,SAAtH;AAAwH/tC,eAAO,EAAE,CAAC,CAAC,oEAAD,EAAiB,sEAAjB,CAAD;AAAjI,OAAxB,CAAlB;;AACAsuC,gBAAU,CAACtxD,cAAX,GAA4B;AAAA,eAAM,CAC9B;AAAEZ,cAAI,EAAE2xD;AAAR,SAD8B,CAAN;AAAA,OAA5B;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAO5uC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BmvC,UAA1B,EAAsC;AAAElvC,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACgrC,WAAD,EAAc9D,YAAd,EAA4BkH,eAA5B,CAAP;AAAsD,WAApF;AAAsFxtC,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,oEAAD,EAAiB,sEAAjB,CAAP;AAA2C,WAAxJ;AAA0JX,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC+qC,WAAD,EAAc9D,YAAd,EAA4BkH,eAA5B,CAAP;AAAsD;AAAvO,SAAtC,CAAnD;AAAsU,OAArV;AACA;;;AAAc,OAAC,YAAY;AAAE,wEAAyBc,UAAzB,EAAqC,CAAC;AAC3DlyD,cAAI,EAAE,sDADqD;AAE3Da,cAAI,EAAE,CAAC;AACC+iB,mBAAO,EAAE,CAAC,oEAAD,EAAiB,sEAAjB,CADV;AAECZ,wBAAY,EAAE,CAACgrC,WAAD,EAAc9D,YAAd,EAA4BkH,eAA5B,CAFf;AAGCnuC,mBAAO,EAAE,CAAC+qC,WAAD,EAAc9D,YAAd,EAA4BkH,eAA5B;AAHV,WAAD;AAFqD,SAAD,CAArC,EAOrB,YAAY;AAAE,iBAAO,CAAC;AAAEpxD,gBAAI,EAAE2xD;AAAR,WAAD,CAAP;AAA8C,SAPvC,EAOyC,IAPzC;AAOiD,OAPhE;AASd;;;;;;;;AAQA;;;AAMA;;;;;;;;;;;;;;;;;;AClwEA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;AAOA;;;AACA,UAAMluC,OAAO,GAAG,IAAI,qDAAJ,CAAY,QAAZ,CAAhB;AAEA;;;;;;;;AAQA;;;;;;;AASA","file":"default~features-home-home-module~features-landing-landing-module~features-warehouse-warehouse-module-es5.js","sourcesContent":["/**\n * @license Angular v10.2.3\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n *\n * {@searchKeywords ngDefaultControl}\n *\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor {\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * The registered callback function called when an input event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw new Error('unimplemented');\n    }\n}\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * @description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get validator() {\n        return unimplemented();\n    }\n    /**\n     * @description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get asyncValidator() {\n        return unimplemented();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            return control.value.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            return hasValidLength(control.value) && control.value.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        let regex;\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    static compose(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return mergeErrors(executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            const observables = executeValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(mergeErrors));\n        };\n    }\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs)) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor {\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = () => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (_) => {\n            const selected = [];\n            if (_.selectedOptions !== undefined) {\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                const options = _.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\nfunction setUpControl(control, dir) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n    }\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n}\nfunction cleanUpControl(control, dir) {\n    const noop = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _noControlError(dir);\n        }\n    };\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(normalizeValidators(validators)) :\n        null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ?\n        Validators.composeAsync(normalizeValidators(validators)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeDir(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.ngModelWarning(name);\n        }\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._rawValidators = validators;\n        this._rawAsyncValidators = asyncValidators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n    /**\n     * The function that is used to determine the validity of this control synchronously.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * The function that is used to determine the validity of this control asynchronously.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this._rawValidators = newValidator;\n        this._composedValidatorFn = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this._rawAsyncValidators = newValidator;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = (ɵ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /** @internal */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * The synchronous validators registered with this group.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * The async validators registered with this group.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = (ɵ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise$1.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        removeDir(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir.control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(() => this._updateDomValue());\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(() => { });\n        this._oldForm = this.form;\n    }\n    _updateValidators() {\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            ReactiveErrors.disabledAttrWarning();\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator {\n    constructor() {\n        this._required = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], function () { return []; }, { required: [{\n            type: Input\n        }] }); })();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    constructor() {\n        this._enabled = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], function () { return []; }, { email: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value meets a minimum length requirement.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], function () { return []; }, { minlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value exceeds the maximum length requirement.\n     * @nodoc\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], function () { return []; }, { maxlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value matches the the pattern requirement.\n     * @nodoc\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.pattern(this.pattern);\n    }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], function () { return []; }, { pattern: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    /**\n     * @description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     */\n    group(controlsConfig, options = null) {\n        const controls = this._reduceControls(controlsConfig);\n        let validators = null;\n        let asyncValidators = null;\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controlsConfig) {\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /** @internal */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            const value = controlConfig[0];\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.2.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('10.2.7');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION$1 = new Version('10.2.7');\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /** Whether any sanity checks are enabled. */\n    _checksAreEnabled() {\n        // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support\n        // it. Since these checks can have performance implications and they aren't tree shakeable\n        // in their current form, we can leave the `isDevMode` check in for now.\n        // tslint:disable-next-line:ban\n        return isDevMode() && !this._isTestEnv();\n    }\n    /** Whether the code is running in tests. */\n    _isTestEnv() {\n        const window = this._getWindow();\n        return window && (window.__karma__ || window.jasmine);\n    }\n    _checkDoctypeIsDefined() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.doctype);\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !this._sanityChecks.theme);\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /** Checks whether the material version matches the cdk version */\n    _checkCdkVersionMatch() {\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || this._sanityChecks.version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); }, imports: [[BidiModule], BidiModule] });\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disabled` property. */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() { return this._disabled; }\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `color` property. */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() { return this._color; }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `disableRipple` property. */\nfunction mixinDisableRipple(base) {\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() { return this._disableRipple; }\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with a `tabIndex` property. */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,\n    // but given we `extend` it from another class, we can assume a constructor being accessible.\n    class Mixin extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    }\n    // Since we don't directly extend from `base` with it's original types, and we instruct\n    // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.\n    // This is a limitation in TS as abstract classes cannot be typed properly dynamically.\n    return Mixin;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param str The string to strip direction characters from.\n     * @returns The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nclass MatLineSetter {\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach((type) => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((type) => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((type) => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase {\n}\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) { return ɵ_MatOptgroupBase_BaseFactory(t || _MatOptgroupBase); };\n_MatOptgroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptgroupBase, inputs: { label: \"label\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatOptgroupBase.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵ_MatOptgroupBase_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(_MatOptgroupBase);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatOptgroupBase, [{\n        type: Directive\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }],\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /** Whether or not the option is currently selected. */\n    get selected() { return this._selected; }\n    /** Whether the option is disabled. */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) { return new (t || _MatOptionBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(_MatOptgroupBase)); };\n_MatOptionBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatOptionBase, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" } });\n_MatOptionBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined },\n    { type: _MatOptgroupBase }\n];\n_MatOptionBase.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatOptionBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_OPTGROUP, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, exportAs: [\"matOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTGROUP,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTGROUP]\n            }] }]; }, null); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `@angular/material/form-field` instead.\n * @breaking-change 11.0.0\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nconst JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8, OCT = 9, NOV = 10, DEC = 11;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0$1 as ɵ0, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\nMutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\nContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() { return this._debounce; }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = \".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\";\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-button-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [_c2], encapsulation: 2, changeDetection: 0 });\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton, MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton, MatAnchor, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported.\n        if (typeof document !== 'object' || !document) {\n            scrollBehaviorSupported = false;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.parentNode.removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { DOCUMENT } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, QueryList, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** ID used for the body container where all messages are appended. */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/** ID prefix used for each created message element. */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/** Attribute given to each host element that is described by a message element. */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map();\n/** Container for all registered messages. */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @breaking-change 8.0.0 `_platform` parameter to be made required.\n     */\n    _platform) {\n        this._platform = _platform;\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /** Removes the host element's aria-describedby reference to the message element. */\n    removeDescription(hostElement, message) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message) {\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        messagesContainer.appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /** Assigns a unique ID to an element, if it doesn't have one already. */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(message) {\n        const registeredMessage = messageRegistry.get(message);\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            // @breaking-change 8.0.0 `_platform` null check can be removed once the parameter is required\n            const canBeAriaHidden = !this._platform || (!this._platform.EDGE && !this._platform.TRIDENT);\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer && preExistingContainer.parentNode) {\n                preExistingContainer.parentNode.removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.classList.add('cdk-visually-hidden');\n            // IE and Edge won't read out the messages if they're in an `aria-hidden` container.\n            // We only disable `aria-hidden` for these platforms, because it comes with the\n            // disadvantage that people might hit the messages when they've navigated past\n            // the end of the document using the arrow keys.\n            messagesContainer.setAttribute('aria-hidden', canBeAriaHidden + '');\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /** Deletes the global messages container. */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, message) {\n        const registeredMessage = messageRegistry.get(message);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, message) {\n        const registeredMessage = messageRegistry.get(message);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, message) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = messageRegistry.get(message);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nAriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: AriaDescriber, providedIn: \"root\" });\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && (this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element));\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nInteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`);\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(children[i]) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() { return this.focusTrap.enabled; }\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() { return this._autoCapture; }\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = this._document.activeElement;\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector));\n}\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element, selector) {\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (curr || null);\n}\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/** IE 11 compatible matches implementation. */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        element['msMatchesSelector'](selector);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\nFocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\nConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = null;\n        }\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].parentNode.removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\nLiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() { return this._politeness; }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nconst TOUCH_BUFFER_MS = 650;\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        };\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        };\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            this._lastTouchTarget = getTarget(event);\n            this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n        };\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n        };\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = getTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            nativeElement.focus(options);\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @param origin The origin to set.\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n            }\n        });\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        const origin = this._getFocusOrigin(event);\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const document = this._getDocument();\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const document = this._getDocument();\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\nFocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\nHighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); }, imports: [[PlatformModule, ObserversModule]] });\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('10.2.7');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n"]}